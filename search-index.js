var searchIndex = JSON.parse('{\
"bevy":{"doc":"","tn":["DefaultPlugins","MinimalPlugins","animation","app","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","asset","audio","borrow","borrow","borrow_mut","borrow_mut","build","build","core","core_pipeline","diagnostic","downcast","downcast","dynamic_plugin","ecs","from","from","gilrs","gltf","hierarchy","input","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","log","math","pbr","prelude","ptr","reflect","render","scene","sprite","tasks","text","time","transform","try_from","try_from","try_into","try_into","type_id","type_id","ui","upcast","upcast","utils","window","winit","AnimationClip","AnimationPlayer","AnimationPlugin","EntityPath","Keyframes","Rotation","Scale","Translation","VariableCurve","add_curve_to_path","animation_player","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","component_ids","curves","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","duration","dyn_eq","dyn_hash","elapsed","eq","equivalent","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_world","from_world","from_world","from_world","get_components","get_curves","get_curves_by_path","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","index_of","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_paused","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","keyframe_timestamps","keyframes","name_at","name_at","name_at","name_at","name_at","parts","pause","play","play_with_transition","prelude","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","repeat","resume","set","set","set","set","set","set_elapsed","set_speed","speed","start","start_with_transition","stop_repeating","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","AnimationClip","AnimationPlayer","AnimationPlugin","EntityPath","Keyframes","Rotation","Scale","Translation","VariableCurve","keyframe_timestamps","keyframes","parts","App","AppExit","AppLabel","AppLabel","AppLabelId","AppTypeRegistry","CoreSchedule","CoreSet","CreatePlugin","DynamicPlugin","First","FirstFlush","FixedUpdate","FixedUpdate","Last","LastFlush","Loop","Main","Once","Outer","Plugin","PluginGroup","PluginGroupBuilder","PostStartup","PostStartupFlush","PostUpdate","PostUpdateFlush","PreStartup","PreStartupFlush","PreUpdate","PreUpdateFlush","RunMode","ScheduleRunnerPlugin","ScheduleRunnerSettings","Startup","Startup","StartupFlush","StartupSet","StateTransitions","SubApp","Update","UpdateFlush","add","add_after","add_asset","add_asset_loader","add_audio_source","add_before","add_debug_asset","add_default_schedules","add_event","add_plugin","add_plugins","add_render_command","add_schedule","add_simple_outer_schedule","add_startup_system","add_startup_systems","add_state","add_system","add_system_to_schedule","add_systems","add_systems_to_schedule","after","after","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","app","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_label","as_label","as_str","as_str","base_schedule","base_schedule","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","configure_set","configure_sets","default","default","default","default","default","default","default_schedule_label","deref","deref_mut","disable","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","edit_schedule","empty","enable","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extract","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","from_world","get_added_plugins","get_hash","get_hash","get_hash","get_hash","get_schedule","get_schedule_mut","get_sub_app","get_sub_app_mut","hash","hash","hash","hash","in_base_set","in_base_set","in_default_base_set","in_default_base_set","in_set","in_set","init_asset_loader","init_debug_asset_loader","init_non_send_resource","init_resource","init_schedule","insert_non_send_resource","insert_resource","insert_sub_app","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","is","is_base","is_base","is_plugin_added","is_system_type","is_system_type","is_unique","load_plugin","name","name","new","new","outer_loop","outer_schedule","outer_schedule_label","prelude","register_asset_reflect","register_type","register_type_data","remove_sub_app","run","run","run_if","run_if","run_loop","run_mode","run_once","runner","set","set","set_runner","setup","setup","start","sub_app","sub_app_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","world","wait","App","AppTypeRegistry","CoreSchedule","CoreSet","DynamicPlugin","First","FirstFlush","FixedUpdate","FixedUpdate","Last","LastFlush","Main","Outer","Plugin","PluginGroup","PostStartup","PostStartupFlush","PostUpdate","PostUpdateFlush","PreStartup","PreStartupFlush","PreUpdate","PreUpdateFlush","Startup","Startup","StartupFlush","StartupSet","StateTransitions","Update","UpdateFlush","build","build","default_schedule_label","is_unique","name","name","outer_schedule_label","runner","set","setup","world","AddAsset","Asset","AssetDynamic","AssetEvent","AssetEvents","AssetFolderNotADirectory","AssetIo","AssetIoError","AssetIoError","AssetLifecycle","AssetLifecycleChannel","AssetLifecycleEvent","AssetLoader","AssetLoaderError","AssetMeta","AssetPath","AssetPathId","AssetPathId","AssetPlugin","AssetResult","AssetServer","AssetServerError","AssetServerInternal","AssetSet","Assets","BoxedFuture","Create","Created","Directory","Error","Failed","File","FileAssetIo","FileType","Free","Handle","HandleId","HandleUntyped","Id","IncorrectHandleType","Io","LabelId","LoadAssets","LoadContext","LoadState","Loaded","LoadedAsset","Loading","Metadata","MissingAssetLoader","Modified","NotFound","NotLoaded","PathWatchError","ReflectAsset","ReflectHandle","Removed","SourceInfo","SourceMeta","SourcePathId","Unloaded","add","add","add_asset","add_asset_loader","add_debug_asset","add_dependency","add_loader","after","ambiguous_with","ambiguous_with_all","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","asset","asset_event_system","asset_folder","asset_io","asset_io","asset_type_id","asset_types","assets","assets_resource_type_id","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_weak","chain","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_untyped","clone_value","clone_value","clone_value","clone_value","clone_value","clone_weak","clone_weak","clone_weak_untyped","cmp","cmp","cmp","cmp","cmp","cmp","committed_assets","component_ids","contains","context","create_asset","create_asset","create_platform_default_asset_io","debug_asset_server","default","default","default","default","dependencies","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagnostic","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_handle_untyped","downcast_mut","downcast_mut","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downcast_ref","drop","drop","drop","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extensions","extract_component","field","field_at","field_at_mut","field_len","field_mut","file_type","filesystem_watcher_system","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_asset","free_asset","free_unused_assets","free_unused_assets_system","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_reflect","from_reflect","from_type","from_type","from_world","from_world","from_world","get","get","get_asset_metas","get_asset_type","get_base_path","get_components","get_field","get_field_mut","get_group_load_state","get_handle","get_handle","get_handle","get_handle_path","get_handle_untyped","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_id","get_load_state","get_metadata","get_metadata","get_mut","get_mut","get_or_insert_with","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_unchecked_mut","handle_type_id","has_labeled_asset","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","ids","ids","in_base_set","in_current_span","in_current_span","in_default_base_set","in_set","init_asset_loader","init_debug_asset_loader","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is","is","is","is","is_base","is_dir","is_dir","is_dir","is_empty","is_empty","is_file","is_file","is_file","is_loaded","is_strong","is_strong","is_system_type","is_weak","is_weak","iter","iter_fields","iter_mut","label","label","label_id","len","len","load","load","load_folder","load_internal_asset","load_internal_binary_asset","load_path","load_path","load_state","load_untyped","make_strong","mark_unused_assets","meta","msg","name_at","new","new","new","new","new","new","new","new_ref","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","prelude","provide","provide","random","read_asset_bytes","read_directory","read_directory","receiver","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","register_asset_reflect","reload_asset","remove","remove","reserve","root_cause","root_path","run_if","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set_default_asset","set_labeled_asset","set_untracked","shrink_to_fit","source","source","source_path_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","type_uuid","typed","typed","typed_weak","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_asset_storage_system","version","version","watch_for_changes","watch_for_changes","watch_for_changes","watch_path_for_changes","watch_path_for_changes","weak","weak","weak_from_u64","with_boxed_io","with_dependencies","with_dependency","handle","handle","handle","extensions","DebugAssetApp","DebugAssetAppRun","DebugAssetServerPlugin","HandleMap","after","ambiguous_with","ambiguous_with_all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","before","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","default","deref","deref_mut","downcast","downcast","downcast","downcast","dyn_clone","dyn_eq","dyn_hash","eq","equivalent","fmt","from","from","from","from","from_world","from_world","get_hash","handles","hash","in_base_set","in_default_base_set","in_set","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_sample","into_sample","into_sample","into_sample","into_system_set","is_base","is_system_type","register_handle_with_loader","run_if","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","AssetCountDiagnosticsPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","default","diagnostic_id","diagnostic_system","downcast","from","from_world","into","into_any","into_any_arc","into_any_rc","into_sample","setup_system","try_from","try_into","type_id","upcast","AddAsset","AssetEvent","AssetPlugin","AssetServer","Assets","Created","Handle","HandleUntyped","Modified","Removed","add_asset","add_asset_loader","add_debug_asset","asset_folder","init_asset_loader","init_debug_asset_loader","register_asset_reflect","watch_for_changes","handle","handle","handle","AddAudioSource","Audio","AudioLoader","AudioOutput","AudioPlugin","AudioSink","AudioSource","CpalSample","Decodable","Decoder","DecoderItem","FORMAT","LOOP","ONCE","PlaybackSettings","Sample","Source","add_audio_source","amplify","amplify","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered","build","bytes","channels","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","convert_samples","current_frame_len","decoder","decoder","default","default","default","default","default","delay","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","extensions","fade_in","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","high_pass","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_paused","lerp","load","low_pass","mix","pausable","pause","periodic_access","play","play","play_queued_audio_system","play_with_settings","prelude","repeat","repeat_infinite","reverb","sample_rate","saturating_add","set_speed","set_volume","skip_duration","speed","speed","speed","stop","stoppable","take_crossfade_with","take_duration","to_f32","to_i16","to_owned","to_owned","to_u16","toggle","total_duration","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_uuid","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","volume","volume","with_speed","with_volume","zero_value","Audio","AudioOutput","AudioSource","Decodable","Decoder","DecoderItem","PlaybackSettings","bytes","decoder","repeat","speed","volume","DebugName","DebugNameItem","FrameCount","FrameCountPlugin","Name","NonSendMarker","Pod","Pod","TaskPoolOptions","TaskPoolPlugin","TaskPoolThreadAssignmentPolicy","TypeRegistrationPlugin","Zeroable","Zeroable","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_ref","as_reflect","as_reflect_mut","as_str","async_compute","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","bytes_of","cast_slice","clone","clone","clone","clone","clone_dynamic","clone_fetch","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","cmp","component_ids","compute","create_default_pools","default","default","default","default","default","default","deref","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","entity","entity","eq","equivalent","erased_serialize","fetch","field","field_at","field_at_mut","field_len","field_mut","filter_fetch","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_reflect","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_field","get_field_mut","get_hash","get_type_info","get_type_registration","hash","init_fetch","init_state","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","io","iter_fields","matches_component_set","max_threads","max_total_threads","min_threads","min_total_threads","mutate","name","name","name_at","new","partial_cmp","percent","prelude","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","serialize","set","set","set_archetype","set_table","shrink","task_pool_options","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_component_access","with_num_threads","zeroed","DebugName","FrameCountPlugin","Name","TaskPoolOptions","TaskPoolPlugin","TypeRegistrationPlugin","async_compute","compute","entity","io","max_total_threads","min_total_threads","name","task_pool_options","CorePipelinePlugin","as_any","as_any_mut","as_bind_group_shader_type","bloom","borrow","borrow_mut","build","clear_color","core_2d","core_3d","default","downcast","from","from_world","fullscreen_vertex_shader","fxaa","into","into_any","into_any_arc","into_any_rc","into_sample","prelude","prepass","tonemapping","try_from","try_into","type_id","upcast","upscaling","BloomNode","BloomPlugin","BloomSettings","IN_VIEW","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","default","downcast","downcast","downcast","extract_component","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from_components","from_world","get_components","get_field","get_field_mut","get_type_info","get_type_registration","input","intensity","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","iter_fields","knee","name_at","new","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","run","scale","set","threshold","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","update","ClearColor","ClearColorConfig","Custom","Default","None","apply","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","clone_value","default","default","deref","deref_mut","deserialize","downcast","downcast","erased_serialize","extract_resource","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","from","from","from_world","from_world","get_field","get_field_mut","get_type_info","get_type_info","get_type_registration","get_type_registration","index_of","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","iter_fields","iter_fields","name_at","reflect_hash","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","serialize","set","set","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","variant_index","variant_name","variant_type","Camera2d","Camera2dBundle","Core2dPlugin","IN_VIEW","MainPass2dNode","Transparent2d","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","batch_range","batch_range","batch_range_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cached_pipeline","camera","camera_2d","camera_render_graph","clear_color","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","default","default","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","entity","entity","extract_component","extract_core_2d_camera_phases","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from","from","from_components","from_world","from_world","frustum","get_components","get_field","get_field_mut","get_type_info","get_type_registration","global_transform","graph","input","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","name_at","new","new_with_far","pipeline","projection","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","run","set","sort","sort_key","sort_key","to_owned","tonemapping","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","update","visible_entities","NAME","input","node","VIEW_ENTITY","BLOOM","END_MAIN_PASS_POST_PROCESSING","FXAA","MAIN_PASS","TONEMAPPING","UPSCALING","AlphaMask3d","Camera3d","Camera3dBundle","Camera3dDepthLoadOp","Clear","Core3dPlugin","IN_VIEW","Load","MainPass3dNode","Opaque3d","Transparent3d","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cached_pipeline","cached_pipeline","cached_pipeline","camera","camera_3d","camera_render_graph","clear_color","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","default","default","default","depth_load_op","deserialize","distance","distance","distance","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","draw_function","draw_function","draw_function","draw_function","entity","entity","entity","entity","entity","entity","erased_serialize","extract_component","extract_core_3d_camera_phases","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","from","from","from","from","from","from","from","from","from_components","from_world","from_world","from_world","frustum","get_components","get_field","get_field_mut","get_type_info","get_type_info","get_type_registration","get_type_registration","global_transform","graph","index_of","input","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","name_at","name_at","new","pipeline","pipeline","pipeline","prepare_core_3d_depth_textures","projection","reflect_hash","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","run","serialize","set","set","sort","sort","sort","sort_key","sort_key","sort_key","to_owned","to_owned","tonemapping","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","variant_index","variant_name","variant_type","visible_entities","NAME","input","node","VIEW_ENTITY","BLOOM","END_MAIN_PASS_POST_PROCESSING","FXAA","MAIN_PASS","PREPASS","TONEMAPPING","UPSCALING","FULLSCREEN_SHADER_HANDLE","fullscreen_shader_vertex_state","CameraFxaaPipeline","Extreme","Fxaa","FxaaNode","FxaaPipeline","FxaaPipelineKey","FxaaPlugin","High","IN_VIEW","Low","Medium","Sensitivity","Ultra","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","default","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edge_threshold","edge_threshold_min","enabled","eq","eq","equivalent","equivalent","extract_component","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","from","from","from","from","from","from","from","from_components","from_components","from_reflect","from_reflect","from_world","from_world","get_components","get_components","get_field","get_field_mut","get_hash","get_hash","get_str","get_type_info","get_type_info","get_type_registration","get_type_registration","hash","hash","index_of","input","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","name_at","name_at","new","pipeline_id","prepare_fxaa_pipelines","reflect_hash","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","run","set","set","specialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","variant_index","variant_name","variant_type","Camera2d","Camera2dBundle","Camera3d","Camera3dBundle","ClearColor","camera","camera","camera_2d","camera_3d","camera_render_graph","camera_render_graph","clear_color","clear_color","depth_load_op","frustum","frustum","global_transform","global_transform","projection","projection","tonemapping","tonemapping","transform","transform","visible_entities","visible_entities","AlphaMask3dPrepass","DEPTH_PREPASS_FORMAT","DepthPrepass","NORMAL_PREPASS_FORMAT","NormalPrepass","Opaque3dPrepass","ViewPrepassTextures","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_pipeline","cached_pipeline","clone_dynamic","clone_dynamic","clone_value","clone_value","component_ids","component_ids","component_ids","default","default","depth","distance","distance","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","draw_function","draw_function","entity","entity","entity","entity","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","from","from","from","from","from","from_components","from_components","from_components","from_world","from_world","get_components","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_type_info","get_type_info","get_type_registration","get_type_registration","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","name_at","name_at","node","normal","pipeline_id","pipeline_id","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","set","set","size","sort","sort","sort_key","sort_key","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","upcast","upcast","upcast","IN_VIEW","PrepassNode","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","downcast","from","input","into","into_any","into_any_arc","into_any_rc","into_sample","new","run","try_from","try_into","type_id","upcast","update","Disabled","Enabled","IN_VIEW","Tonemapping","TonemappingNode","TonemappingPipeline","TonemappingPipelineKey","TonemappingPlugin","ViewTonemappingPipeline","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","component_ids","component_ids","default","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","extract_component","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from","from","from","from_components","from_components","from_world","from_world","get_components","get_components","get_hash","get_type_info","get_type_registration","hash","index_of","input","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_enabled","iter_fields","name_at","new","queue_view_tonemapping_pipelines","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","run","set","specialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","upcast","update","variant_index","variant_name","variant_type","deband_dither","Filtering","IN_VIEW","Nearest","UpscalingMode","UpscalingNode","UpscalingPipeline","UpscalingPipelineKey","UpscalingPlugin","ViewUpscalingPipeline","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_ids","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","from","from","from","from","from","from","from_components","from_world","get_components","get_hash","get_hash","hash","hash","input","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","new","run","specialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","update","CPU_USAGE","Diagnostic","DiagnosticId","DiagnosticMeasurement","Diagnostics","DiagnosticsPlugin","ENTITY_COUNT","EntityCountDiagnosticsPlugin","FPS","FRAME_COUNT","FRAME_TIME","FrameTimeDiagnosticsPlugin","LogDiagnosticsPlugin","MAX_DIAGNOSTIC_NAME_WIDTH","MEM_USAGE","SystemInformationDiagnosticsPlugin","add","add_measurement","add_measurement","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","average","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","clear_history","clone","clone_into","clone_type_data","cmp","debug","default","default","default","default","default","default","default","diagnostic_system","diagnostic_system","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","duration","dyn_eq","dyn_hash","eq","equivalent","filter","filtered","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_u128","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_hash","get_max_history_length","get_measurement","get_mut","hash","history_len","id","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_enabled","iter","measurement","measurements","name","new","partial_cmp","setup_system","setup_system","smoothed","suffix","time","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","values","wait_duration","with_smoothing_factor","with_suffix","DynamicPluginExt","DynamicPluginLoadError","Library","Plugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","downcast","dynamically_load_plugin","fmt","fmt","from","in_current_span","into","into_any","into_any_arc","into_any_rc","into_sample","load_plugin","provide","to_string","try_from","try_into","type_id","upcast","all_tuples","archetype","bundle","change_detection","component","entity","event","prelude","query","reflect","removal_detection","schedule","storage","system","world","Archetype","ArchetypeComponentId","ArchetypeEntity","ArchetypeGeneration","ArchetypeId","ArchetypeRow","Archetypes","EMPTY","Edges","INVALID","INVALID","archetype_components_len","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","components","contains","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edges","empty","entities","entity","entity_table_row","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_world","generation","get","get_add_bundle","get_archetype_component_id","get_hash","get_hash","get_param","get_remove_bundle","get_remove_bundle_intersection","get_sparse_set_index","get_storage_type","hash","hash","id","index","index","index_mut","init_state","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","iter","len","len","new","partial_cmp","sparse_set_components","sparse_set_index","table_components","table_id","table_row","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","Bundle","Bundle","BundleId","BundleInfo","Bundles","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","components","default","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","fmt","from","from","from","from_world","get","get_hash","get_id","get_param","get_sparse_set_index","hash","id","index","init_state","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","sparse_set_index","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","CHECK_TICK_THRESHOLD","DetectChanges","DetectChangesMut","Inner","MAX_CHANGE_AGE","Mut","MutUntyped","NonSendMut","Ref","Res","ResMut","as_any","as_any_mut","as_bind_group_shader_type","as_mut","as_ref","borrow","borrow_mut","bypass_change_detection","bypass_change_detection","downcast","fmt","from","into","into_any","into_any_rc","into_inner","into_sample","is_added","is_added","is_changed","is_changed","last_changed","last_changed","reborrow","set_changed","set_changed","set_if_neq","set_if_neq","set_last_changed","set_last_changed","try_from","try_into","type_id","upcast","with_type","Component","Component","ComponentDescriptor","ComponentId","ComponentIdFor","ComponentInfo","ComponentStorage","ComponentTicks","Components","STORAGE_TYPE","SparseSet","SparseStorage","Storage","StorageType","Table","TableStorage","Tick","TickCells","added","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","component_id","default","default","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","dyn_eq","dyn_eq","dyn_hash","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","get_hash","get_id","get_info","get_info_unchecked","get_name","get_param","get_resource_id","get_sparse_set_index","hash","id","index","init_component","init_component_with_descriptor","init_non_send","init_resource","init_state","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_added","is_changed","is_empty","is_newer_than","is_send_and_sync","iter","layout","len","name","name","new","new","new","new_resource","new_with_layout","partial_cmp","resource_id","set_changed","set_changed","sparse_set_index","storage_type","storage_type","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","Entities","Entity","EntityLocation","EntityMap","EntityNotFound","MapEntities","MapEntitiesError","PLACEHOLDER","ReserveEntitiesIterator","alloc","alloc_at","apply","archetype_id","archetype_row","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_fetch","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","cmp","contains","default","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","entry","eq","eq","equivalent","erased_serialize","fetch","flush","flush_and_reserve_invalid_assuming_no_entities","flush_as_invalid","fmt","fmt","fmt","fmt","fmt","fmt","free","from","from","from","from","from","from","from","from_bits","from_raw","from_reflect","from_world","generation","get","get","get_hash","get_param","get_sparse_set_index","get_type_info","get_type_registration","hash","in_current_span","index","init_fetch","init_state","init_state","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","iter","keys","len","len","map_entities","matches_component_set","next","partial_cmp","provide","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","remove","reserve","reserve_entities","reserve_entity","resolve_from_id","serialize","set","set_archetype","set_table","shrink","size_hint","sparse_set_index","table_id","table_row","to_bits","to_owned","to_owned","to_string","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_component_access","values","Event","EventId","EventReader","EventWriter","Events","ManualEventIterator","ManualEventIteratorWithId","ManualEventReader","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone_into","clone_type_data","cmp","count","count","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","dyn_eq","dyn_hash","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_world","from_world","get_event","get_hash","get_param","get_param","get_reader","get_reader_current","hash","id","init_state","init_state","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","iter","iter","iter_current_update_events","iter_with_id","iter_with_id","len","len","len","len","len","missed_events","new","new_archetype","new_archetype","next","next","oldest_event_count","oldest_id","partial_cmp","send","send","send_batch","send_default","send_default","size_hint","size_hint","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_system","without_id","Added","AnyOf","Bundle","Bundle","ChangeTrackers","Changed","Commands","Component","Component","Deferred","DetectChanges","DetectChangesMut","Entity","Event","EventReader","EventWriter","Events","FromWorld","In","In","Inner","IntoPipeSystem","IntoSystem","IntoSystemConfig","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfig","IntoSystemSetConfigs","Iter","Local","Mut","NextState","NonSend","NonSendMut","OnEnter","OnExit","OnUpdate","Or","Out","ParallelCommands","ParamSet","Query","QueryState","Ref","ReflectComponent","ReflectResource","RemovedComponents","Res","ResMut","Resource","Resource","Schedule","Schedules","Set","State","States","States","Storage","System","System","SystemParamFunction","SystemSet","SystemSet","With","Without","World","after","after","after","after","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","apply_buffers","apply_state_transition","apply_system_buffers","archetype_component_access","before","before","before","before","bypass_change_detection","chain","chain","check_change_tick","component_access","dbg","default_system_sets","dyn_clone","error","from_world","get_last_change_tick","ignore","in_base_set","in_base_set","in_base_set","in_base_set","in_default_base_set","in_set","in_set","in_set","in_set","info","initialize","into_system","into_system_set","is_added","is_base","is_changed","is_exclusive","is_send","is_system_type","last_changed","name","no_default_base_set","not","pipe","resource_equals","resource_exists","resource_exists_and_equals","run","run","run_if","run_if","run_once","run_unsafe","set_changed","set_if_neq","set_last_change_tick","set_last_changed","state_equals","state_exists","state_exists_and_equals","type_id","unwrap","update_archetype_component_access","variants","warn","Aligned","IsAligned","OwningPtr","Ptr","PtrMut","ThinSlicePtr","Unaligned","UnsafeCellDeref","dangling_with_align","deref","deref_mut","read","Access","Added","AliasedMutability","AnyOf","ArchetypeFilter","BatchingStrategy","ChangeTrackers","Changed","Fetch","FilteredAccess","FilteredAccessSet","IS_ARCHETYPAL","IS_DENSE","Item","MultipleEntities","NoEntities","NoSuchEntity","NopWorldQuery","Or","QueryCombinationIter","QueryDoesNotMatch","QueryEntityError","QueryFetch","QueryItem","QueryIter","QueryManyIter","QueryParIter","QuerySingleError","QueryState","ROQueryFetch","ROQueryItem","ReadOnly","ReadOnlyWorldQuery","State","With","Without","WorldQuery","WorldQuery","access","access_mut","add","add_read","add_read","add_with","add_without","add_write","add_write","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_nop","as_readonly","batch_size_limits","batches_per_thread","batches_per_thread","batching_strategy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone","clone","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","combined_access","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extend","extend_access","extend_intersect_filter","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch_next","fetch_next","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each","for_each_mut","for_each_mut","for_each_unchecked","for_each_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","get","get_conflicts","get_conflicts","get_conflicts","get_conflicts_single","get_manual","get_many","get_many_mut","get_mut","get_param","get_single","get_single_mut","get_single_unchecked","get_single_unchecked_manual","get_unchecked","grow","has_read","has_read_all","has_write","in_current_span","in_current_span","init","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_added","is_changed","is_compatible","is_compatible","is_compatible","is_empty","iter","iter_combinations","iter_combinations_mut","iter_combinations_unchecked","iter_manual","iter_many","iter_many_mut","iter_mut","iter_unchecked","len","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","max_batch_size","min_batch_size","new","new","new","new_archetype","next","next","next","par_iter","par_iter_mut","provide","provide","read_all","read_all","reads","reads_and_writes","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","single","single_mut","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","validate_world","writes","ReflectComponent","ReflectComponentFns","ReflectMapEntities","ReflectResource","ReflectResourceFns","apply","apply","apply","apply","apply_or_insert","apply_or_insert","apply_or_insert","apply_or_insert","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains","contains","copy","copy","copy","copy","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from_type","from_type","from_type","insert","insert","insert","insert","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","map_entities","new","new","new","new","reflect","reflect","reflect","reflect","reflect_mut","reflect_mut","reflect_mut","reflect_unchecked_mut","reflect_unchecked_mut","reflect_unchecked_mut","reflect_unchecked_mut","remove","remove","remove","remove","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","RemovedComponentEntity","RemovedComponentEvents","RemovedComponentReader","RemovedComponents","RemovedIter","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","default","default","deref","deref_mut","downcast","downcast","downcast","downcast","fmt","fmt","fmt","from","from","from","from","from_world","from_world","get","get_param","get_param","init_state","init_state","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","into_sample","into_sample","iter","new","new_archetype","send","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update","Ambiguity","BoxedCondition","BoxedScheduleLabel","BoxedSystemSet","Condition","CrossDependency","DependencyCycle","DependencyLoop","Error","ExecutorKind","HierarchyCycle","HierarchyLoop","HierarchyRedundancy","Ignore","IntoSystemConfig","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfig","IntoSystemSetConfigs","Iter","LogLevel","MainThreadExecutor","MultiThreaded","MultiThreadedExecutor","NextState","OnEnter","OnExit","OnUpdate","Schedule","ScheduleBuildError","ScheduleBuildSettings","ScheduleLabel","ScheduleLabel","Schedules","Set","SetInMultipleBaseSets","SetsHaveOrderButIntersect","Simple","SimpleExecutor","SingleThreaded","SingleThreadedExecutor","State","States","States","SystemConfig","SystemConfigs","SystemInMultipleBaseSets","SystemSet","SystemSet","SystemSetConfig","SystemSetConfigs","SystemTypeSet","SystemTypeSetAmbiguity","Uninitialized","Warn","add_system","add_systems","after","after","after","after","after","after","after","after","after","after","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","apply_state_transition","apply_system_buffers","apply_system_buffers","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","before","before","before","before","before","before","before","before","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","chain","chain","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","common_conditions","configure_set","configure_sets","contains","default","default","default","default","default","default","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_executor_kind","get_hash","get_hash","get_hash","get_hash","get_mut","hash","hash","hash","hash","hash","hash","in_base_set","in_base_set","in_base_set","in_base_set","in_base_set","in_base_set","in_base_set","in_base_set","in_base_set","in_base_set","in_current_span","in_default_base_set","in_default_base_set","in_default_base_set","in_default_base_set","in_set","in_set","in_set","in_set","in_set","in_set","in_set","in_set","in_set","in_set","initialize","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","into_system_set","is_base","is_base","is_system_type","is_system_type","is_system_type","new","new","new","new","new","new","new","no_default_base_set","no_default_base_set","provide","remove","remove_entry","run","run_enter_schedule","run_if","run_if","run_if","run_if","run_if","run_if","set","set_apply_final_buffers","set_build_settings","set_default_base_set","set_executor_kind","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variants","with_ambiguity_detection","with_hierarchy_detection","first_set","first_set","second_set","second_set","set","system","not","resource_equals","resource_exists","resource_exists_and_equals","run_once","state_equals","state_exists","state_exists_and_equals","Column","ComponentSparseSet","INVALID","ResourceData","Resources","SparseSet","SparseSetIndex","SparseSets","Storages","Table","TableId","TableRow","Tables","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear","clear","clear","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","component_count","contains","contains","default","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","dyn_eq","dyn_eq","empty","entities","entity_capacity","entity_count","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","get","get","get","get","get","get","get_added_ticks","get_added_ticks","get_added_ticks_slice","get_added_ticks_unchecked","get_changed_ticks","get_changed_ticks","get_changed_ticks_slice","get_changed_ticks_unchecked","get_column","get_data","get_data","get_data_mut","get_data_ptr","get_data_slice","get_data_unchecked","get_mut","get_mut","get_or_insert","get_or_insert_with","get_sparse_set_index","get_ticks","get_ticks","get_ticks","get_ticks_unchecked","get_with_ticks","has_column","id","index","index","index","index_mut","indices","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_present","item_layout","iter","iter","iter","iter","iter_mut","len","len","len","len","len","new","new","new","non_send_resources","remove","resources","sparse_set_index","sparse_sets","tables","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","values","values_mut","with_capacity","AlreadyWasSystem","BoxedSystem","Command","CommandQueue","Commands","Deferred","Despawn","EntityCommand","EntityCommands","ExclusiveFunctionSystem","ExclusiveSystemParam","ExclusiveSystemParamFunction","ExclusiveSystemParamItem","FunctionSystem","GetOrSpawn","In","In","InitResource","Insert","InsertOrSpawnBatch","InsertResource","IntoPipeSystem","IntoSystem","IsExclusiveFunctionSystem","IsFunctionSystem","Item","Item","Local","LogComponents","MissingComponent","MissingReadAccess","MissingWriteAccess","NoSuchEntity","NonSend","NonSendMut","Out","ParallelCommands","ParamSet","PipeSystem","Query","QueryComponentError","ReadOnlySystem","ReadOnlySystemParam","Remove","RemoveResource","Res","ResMut","Resource","Resource","Spawn","SpawnBatch","State","State","StaticSystemParam","System","System","SystemBuffer","SystemChangeTick","SystemMeta","SystemName","SystemParam","SystemParam","SystemParamFunction","SystemParamItem","SystemState","WithEntity","add","add","add_child","after","after","after","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_buffers","apply_buffers","apply_buffers","apply_buffers","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","assert_is_read_only_system","assert_is_system","before","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle","bundle","bundles_iter","bundles_iter","bypass_change_detection","bypass_change_detection","change_tick","check_change_tick","check_change_tick","check_change_tick","check_change_tick","clear_children","clone","clone","clone_into","clone_type_data","command_scope","commands","component_access","component_access","component_access","component_access","contains","default","default_system_sets","default_system_sets","default_system_sets","default_system_sets","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","despawn_descendants","despawn_recursive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","entity","entity","entity","entity","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","get","get","get_component","get_component_mut","get_component_unchecked_mut","get_entity","get_inner","get_last_change_tick","get_last_change_tick","get_last_change_tick","get_last_change_tick","get_manual","get_manual_mut","get_many","get_many_mut","get_mut","get_mut","get_or_spawn","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_param","get_single","get_single_mut","get_unchecked","get_unchecked_manual","id","in_base_set","in_base_set","in_base_set","in_current_span","in_set","in_set","in_set","init","init","init","init_resource","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","initialize","initialize","initialize","initialize","insert","insert_children","insert_or_spawn_batch","insert_resource","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_config","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system","into_system","into_system","into_system","is_added","is_added","is_added","is_added","is_changed","is_changed","is_changed","is_changed","is_empty","is_exclusive","is_exclusive","is_exclusive","is_exclusive","is_send","is_send","is_send","is_send","is_send","iter","iter_ancestors","iter_combinations","iter_combinations_mut","iter_combinations_unsafe","iter_descendants","iter_inner","iter_many","iter_many_mut","iter_many_unsafe","iter_mut","iter_unsafe","last_change_tick","last_changed","last_changed","last_changed","lifetimeless","log_components","many","many_mut","map_unchanged","map_unchanged","matches_world","meta","name","name","name","name","name","name","new","new","new","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_archetype","new_from_entities","no_default_base_set","no_default_base_set","no_default_base_set","p0","p0","p0","p0","p0","p0","p0","p0","p1","p1","p1","p1","p1","p1","p1","p2","p2","p2","p2","p2","p2","p3","p3","p3","p3","p3","p4","p4","p4","p4","p5","p5","p5","p6","p6","p7","par_iter","par_iter_mut","phantom","phantom","pipe","pipe","pipe","pipe","provide","push","push_children","reborrow","reborrow","remove","remove_children","remove_parent","remove_parent_in_place","remove_resource","replace_children","resource","run","run","run","run","run","run_if","run_if","run_if","run_unsafe","run_unsafe","run_unsafe","run_unsafe","set_changed","set_changed","set_if_neq","set_if_neq","set_last_change_tick","set_last_change_tick","set_last_change_tick","set_last_change_tick","set_last_changed","set_last_changed","set_non_send","set_parent","set_parent_in_place","single","single_mut","spawn","spawn_batch","spawn_empty","to_owned","to_readonly","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","with_children","with_entity","write","write","write","write","write","write","write","write","write","write","write","write","write","write","Read","SCommands","SQuery","SRes","SResMut","Write","CHECK_TICK_THRESHOLD","EntityMut","EntityRef","FromWorld","Mut","Ref","SpawnBatchIter","World","WorldBorrow","WorldBorrowMut","WorldCell","WorldId","add_child","add_schedule","archetype","archetype","archetypes","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_mut","as_ref","as_ref","as_unsafe_world_cell","as_unsafe_world_cell_readonly","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundles","bypass_change_detection","cell","change_tick","check_change_ticks","clear_all","clear_entities","clear_resources","clear_trackers","clone","clone","clone_fetch","clone_into","clone_into","clone_type_data","clone_type_data","component_id","components","contains","contains","contains_id","contains_id","contains_non_send","contains_resource","contains_type_id","contains_type_id","default","deref","deref","deref","deref","deref_mut","deref_mut","despawn","despawn","despawn_descendants","despawn_recursive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_hash","entities","entities_mut","entity","entity_mut","eq","equivalent","fetch","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","get","get","get","get_by_id","get_by_id","get_by_id","get_change_ticks","get_change_ticks","get_change_ticks_by_id","get_change_ticks_by_id","get_entity","get_entity_mut","get_hash","get_mut","get_mut","get_mut_by_id","get_mut_by_id","get_non_send_by_id","get_non_send_mut_by_id","get_non_send_resource","get_non_send_resource","get_non_send_resource_mut","get_non_send_resource_mut","get_or_spawn","get_param","get_resource","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut","get_resource_mut_by_id","get_resource_or_insert_with","get_sparse_set_index","hash","id","id","id","increment_change_tick","init_component","init_component_with_descriptor","init_fetch","init_non_send_resource","init_resource","init_state","init_state","insert","insert_children","insert_non_send_by_id","insert_non_send_resource","insert_or_spawn_batch","insert_resource","insert_resource_by_id","inspect_entity","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_world_mut","is_added","is_added","is_changed","is_changed","is_resource_added","is_resource_changed","iter_entities","last_change_tick","last_changed","last_changed","len","location","location","map_unchanged","matches_component_set","new","new","next","non_send_resource","non_send_resource","non_send_resource_mut","non_send_resource_mut","push_children","query","query_filtered","read_change_tick","reborrow","remove","remove_children","remove_intersection","remove_non_send_by_id","remove_non_send_resource","remove_parent","remove_resource","remove_resource_by_id","removed","removed_components","removed_with_id","resource","resource","resource_mut","resource_mut","resource_scope","run_schedule","run_schedule_ref","send_event","send_event","send_event_batch","send_event_batch","send_event_default","send_event_default","set_archetype","set_changed","set_if_neq","set_last_changed","set_parent","set_table","shrink","size_hint","sparse_set_index","spawn","spawn_batch","spawn_empty","storages","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_world_cell","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_archetype_component_access","update_component_access","update_location","with_children","world","world","world_mut","world_scope","UnsafeEntityCell","UnsafeWorldCell","archetype","archetypes","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","bundles","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","components","contains","contains_id","contains_type_id","downcast","downcast","entities","from","from","get","get_by_id","get_change_ticks","get_change_ticks_by_id","get_entity","get_mut","get_mut_by_id","get_non_send_resource","get_non_send_resource_by_id","get_non_send_resource_mut","get_non_send_resource_mut_by_id","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","id","increment_change_tick","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","last_change_tick","location","read_change_tick","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","world","world","world_metadata","world_mut","GilrsPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","default","downcast","from","from_world","into","into_any","into_any_arc","into_any_rc","into_sample","try_from","try_into","type_id","upcast","AssetIoError","Base64Decode","BufferFormatUnsupported","GenerateTangentsError","Gltf","Gltf","GltfError","GltfExtras","GltfLoader","GltfMesh","GltfNode","GltfPlugin","GltfPrimitive","ImageError","InvalidImageMimeType","MissingAnimationSampler","MissingBlob","UnsupportedPrimitive","animations","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","children","clone","clone","clone","clone","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","component_ids","default","default","default_scene","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","extensions","extras","extras","extras","field","field_at","field_at_mut","field_len","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_world","from_world","from_world","get_components","get_field","get_field_mut","get_type_info","get_type_registration","in_current_span","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","load","material","material_extras","materials","mesh","mesh","meshes","name_at","named_animations","named_materials","named_meshes","named_nodes","named_scenes","nodes","primitives","provide","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","scenes","set","source","to_owned","to_owned","to_owned","to_owned","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","type_uuid","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","mode","AddChild","AncestorIter","BuildChildren","BuildWorldChildren","ChildAdded","ChildBuilder","ChildMoved","ChildRemoved","Children","ClearChildren","DescendantIter","DespawnChildrenRecursive","DespawnRecursive","DespawnRecursiveExt","HierarchyEvent","HierarchyPlugin","HierarchyQueryExt","InsertChildren","Parent","PushChildren","RemoveChildren","RemoveParent","ReplaceChildren","ReportHierarchyIssue","ValidParentCheckPlugin","WorldChildBuilder","add_child","add_child","add_command","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","check_hierarchy_component_has_valid_parent","child","child","clear_children","clone","clone_dynamic","clone_dynamic","clone_into","clone_type_data","clone_value","clone_value","component_ids","component_ids","default","default","default","deref","deref","despawn_descendants","despawn_recursive","despawn_with_children_recursive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","enabled","entity","entity","eq","eq","eq","equivalent","equivalent","field","field","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_world","from_world","from_world","from_world","from_world","get","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_type_info","get_type_info","get_type_registration","get_type_registration","insert_children","insert_children","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_ancestors","iter_descendants","iter_fields","iter_fields","map_entities","map_entities","new","new","new","next","next","on_hierarchy_reports_enabled","parent","parent_entity","parent_entity","push_children","push_children","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","remove_children","remove_children","remove_parent","remove_parent","replace_children","set","set","set_parent","set_parent","spawn","spawn","spawn_empty","spawn_empty","swap","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","with_children","with_children","write","write","write","write","write","write","write","write","write","child","child","child","new_parent","parent","parent","previous_parent","Axis","ButtonState","Input","InputPlugin","InputSystem","MAX","MIN","Pressed","Released","after","ambiguous_with","ambiguous_with_all","any_just_pressed","any_just_released","any_pressed","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","before","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clear","clear_just_pressed","clear_just_released","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","debug","default","default","default","deserialize","devices","downcast","downcast","downcast","downcast","downcast","dyn_clone","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","erased_serialize","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from_reflect","from_world","from_world","from_world","gamepad","get","get_field","get_field_mut","get_hash","get_hash","get_just_pressed","get_just_released","get_pressed","get_type_info","get_type_info","get_type_registration","get_type_registration","hash","hash","in_base_set","in_default_base_set","in_set","index_of","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_base","is_pressed","is_system_type","iter_fields","iter_fields","just_pressed","just_released","keyboard","mouse","name_at","name_at","prelude","press","pressed","reflect_hash","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","release","release_all","remove","reset","reset_all","run_if","serialize","set","set","set","to_owned","to_owned","to_owned","touch","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","Axis","AxisSettings","AxisSettingsError","Button","ButtonAxisSettings","ButtonSettings","ButtonSettingsError","C","Connected","Connection","DPadDown","DPadLeft","DPadRight","DPadUp","DeadZoneLowerBoundOutOfRange","DeadZoneUpperBoundGreaterThanLiveZoneUpperBound","DeadZoneUpperBoundOutOfRange","Disconnected","East","Gamepad","GamepadAxis","GamepadAxisChangedEvent","GamepadAxisType","GamepadButton","GamepadButtonChangedEvent","GamepadButtonType","GamepadConnection","GamepadConnectionEvent","GamepadEvent","GamepadInfo","GamepadSettings","Gamepads","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","LiveZoneLowerBoundGreaterThanDeadZoneLowerBound","LiveZoneLowerBoundOutOfRange","LiveZoneUpperBoundOutOfRange","Mode","North","Other","Other","PressThresholdOutOfRange","ReleaseThresholdGreaterThanPressThreshold","ReleaseThresholdOutOfRange","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","Select","South","Start","Threshold","West","Z","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","axis_settings","axis_type","axis_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_axis_settings","button_settings","button_type","button_type","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","connected","connection","contains","deadzone_lowerbound","deadzone_upperbound","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default_axis_settings","default_button_axis_settings","default_button_settings","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disconnected","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_world","from_world","from_world","from_world","from_world","gamepad","gamepad","gamepad","gamepad","gamepad","gamepad_axis_event_system","gamepad_button_event_system","gamepad_connection_system","gamepad_event_system","get_axis_settings","get_button_axis_settings","get_button_settings","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","hash","hash","high","id","in_current_span","in_current_span","index_of","index_of","index_of","index_of","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","livezone_lowerbound","livezone_upperbound","low","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","new","new","new","new","new","press_threshold","provide","provide","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","release_threshold","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_deadzone_lowerbound","set_deadzone_upperbound","set_livezone_lowerbound","set_livezone_upperbound","set_press_threshold","set_release_threshold","set_threshold","threshold","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_set_deadzone_lowerbound","try_set_deadzone_upperbound","try_set_livezone_lowerbound","try_set_livezone_upperbound","try_set_press_threshold","try_set_release_threshold","try_set_threshold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","deadzone_lowerbound","deadzone_upperbound","livezone_lowerbound","livezone_upperbound","press_threshold","release_threshold","A","AbntC1","AbntC2","Apostrophe","Apps","Asterisk","At","Ax","B","Back","Backslash","C","Calculator","Capital","Caret","Colon","Comma","Compose","Convert","Copy","Cut","D","Delete","Down","E","End","Equals","Escape","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Grave","H","Home","I","Insert","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KeyboardInput","L","LAlt","LBracket","LControl","LShift","LWin","Left","M","Mail","MediaSelect","MediaStop","Minus","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","Oem102","P","PageDown","PageUp","Paste","Pause","Period","PlayPause","Plus","Power","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","Return","Right","S","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","Stop","Sysrq","T","Tab","U","Underline","Unlabeled","Up","V","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","X","Y","Yen","Z","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmp","cmp","debug","debug","debug","deserialize","deserialize","deserialize","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","from","from","from","from_reflect","from_reflect","from_reflect","get_field","get_field","get_field_mut","get_field_mut","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","index_of","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","key_code","keyboard_input_system","name_at","name_at","partial_cmp","partial_cmp","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","scan_code","serialize","serialize","serialize","set","set","set","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","upcast","upcast","upcast","variant_index","variant_name","variant_type","Left","Line","Middle","MouseButton","MouseButtonInput","MouseMotion","MouseScrollUnit","MouseWheel","Other","Pixel","Right","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","debug","debug","debug","debug","debug","delta","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_hash","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","index_of","index_of","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","mouse_button_input_system","name_at","name_at","name_at","name_at","name_at","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","state","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","unit","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","x","y","A","AbntC1","AbntC2","Apostrophe","Apps","Asterisk","At","Ax","Axis","B","Back","Backslash","C","C","Calculator","Capital","Caret","Colon","Comma","Compose","Convert","Copy","Cut","D","DPadDown","DPadLeft","DPadRight","DPadUp","Delete","Down","E","East","End","Equals","Escape","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Gamepad","GamepadAxis","GamepadAxisType","GamepadButton","GamepadButtonType","Gamepads","Grave","H","Home","I","Input","Insert","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","L","LAlt","LBracket","LControl","LShift","LWin","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","M","Mail","MediaSelect","MediaStop","Middle","Minus","Mode","MouseButton","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","North","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","Oem102","Other","Other","Other","P","PageDown","PageUp","Paste","Pause","Period","PlayPause","Plus","Power","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","Return","Right","Right","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","S","ScanCode","Scroll","Select","Semicolon","Slash","Sleep","Snapshot","South","Space","Start","Stop","Sysrq","T","Tab","TouchInput","Touches","U","Underline","Unlabeled","Up","V","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","West","X","Y","Yen","Z","Z","axis_type","button_type","force","gamepad","gamepad","id","id","phase","position","Calibrated","Cancelled","Ended","ForceTouch","Moved","Normalized","Started","Touch","TouchInput","TouchPhase","Touches","any_just_cancelled","any_just_pressed","any_just_released","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","debug","debug","debug","default","delta","deserialize","deserialize","deserialize","distance","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","eq","eq","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","first_pressed_position","fmt","fmt","fmt","fmt","fmt","force","force","from","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_world","get_field","get_field_mut","get_hash","get_pressed","get_released","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","hash","id","id","index_of","index_of","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_just_cancelled","iter_just_pressed","iter_just_released","just_cancelled","just_pressed","just_released","name_at","name_at","name_at","phase","position","position","previous_force","previous_position","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","serialize","serialize","serialize","set","set","set","start_force","start_position","to_owned","to_owned","to_owned","to_owned","to_owned","touch_screen_input_system","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","altitude_angle","force","max_possible_force","Level","LogPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","debug","debug_span","default","downcast","error","error_span","filter","from","from_world","info","info_span","into","into_any","into_any_arc","into_any_rc","into_sample","level","prelude","trace","trace_span","try_from","try_into","type_id","upcast","warn","warn_span","debug","debug_span","error","error_span","info","info_span","trace","trace_span","warn","warn_span","AXES","AXES","AXES","AXES","Affine2","Affine3A","BVec2","BVec3","BVec3A","BVec4","BVec4A","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","EulerRot","FALSE","FALSE","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","IVec4","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","ONE","ONE","ONE","ONE","Quat","Ray","Rect","TRUE","TRUE","UVec2","UVec3","UVec4","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","W","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","YXZ","YZX","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat3","add_mat4","all","all","angle_between","angle_between","angle_between","angle_between","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat3","as_dvec3","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_uvec2","as_uvec3","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand_assign","bitand_assign","bitmask","bitmask","bitor","bitor","bitor_assign","bitor_assign","bitxor","bitxor","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","center","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col_mut","col_mut","col_mut","col_mut","conjugate","contains","cross","cross","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","direction","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","exp","extend","extend","extend","f32","f64","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_center_half_size","from_center_size","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_corners","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_point","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","half_size","hash","hash","hash","height","i32","index","index","index","index","index_mut","index_mut","index_mut","index_mut","inset","intersect","intersect_plane","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","ivec2","ivec3","ivec4","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max","max_element","max_element","max_element","max_element","min","min","min","min","min","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec4","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","not","not","origin","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","powf","prelude","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","quat","recip","recip","recip","recip","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","round","round","round","round","row","row","row","row","select","select","select","select","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","signum","signum","signum","signum","size","slerp","splat","splat","splat","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","translation","translation","translation","translation","transpose","transpose","transpose","transpose","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","u32","union","union_point","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uvec2","uvec3","uvec4","vec2","vec3","vec3a","vec4","w","w","w","w","w","w_axis","w_axis","width","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","www","www","wwww","wwww","wwwx","wwwx","wwwy","wwwy","wwwz","wwwz","wwx","wwx","wwxw","wwxw","wwxx","wwxx","wwxy","wwxy","wwxz","wwxz","wwy","wwy","wwyw","wwyw","wwyx","wwyx","wwyy","wwyy","wwyz","wwyz","wwz","wwz","wwzw","wwzw","wwzx","wwzx","wwzy","wwzy","wwzz","wwzz","wx","wx","wxw","wxw","wxww","wxww","wxwx","wxwx","wxwy","wxwy","wxwz","wxwz","wxx","wxx","wxxw","wxxw","wxxx","wxxx","wxxy","wxxy","wxxz","wxxz","wxy","wxy","wxyw","wxyw","wxyx","wxyx","wxyy","wxyy","wxyz","wxyz","wxz","wxz","wxzw","wxzw","wxzx","wxzx","wxzy","wxzy","wxzz","wxzz","wy","wy","wyw","wyw","wyww","wyww","wywx","wywx","wywy","wywy","wywz","wywz","wyx","wyx","wyxw","wyxw","wyxx","wyxx","wyxy","wyxy","wyxz","wyxz","wyy","wyy","wyyw","wyyw","wyyx","wyyx","wyyy","wyyy","wyyz","wyyz","wyz","wyz","wyzw","wyzw","wyzx","wyzx","wyzy","wyzy","wyzz","wyzz","wz","wz","wzw","wzw","wzww","wzww","wzwx","wzwx","wzwy","wzwy","wzwz","wzwz","wzx","wzx","wzxw","wzxw","wzxx","wzxx","wzxy","wzxy","wzxz","wzxz","wzy","wzy","wzyw","wzyw","wzyx","wzyx","wzyy","wzyy","wzyz","wzyz","wzz","wzz","wzzw","wzzw","wzzx","wzzx","wzzy","wzzy","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xww","xww","xwww","xwww","xwwx","xwwx","xwwy","xwwy","xwwz","xwwz","xwx","xwx","xwxw","xwxw","xwxx","xwxx","xwxy","xwxy","xwxz","xwxz","xwy","xwy","xwyw","xwyw","xwyx","xwyx","xwyy","xwyy","xwyz","xwyz","xwz","xwz","xwzw","xwzw","xwzx","xwzx","xwzy","xwzy","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxww","xxww","xxwx","xxwx","xxwy","xxwy","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyww","xyww","xywx","xywx","xywy","xywy","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xzw","xzw","xzww","xzww","xzwx","xzwx","xzwy","xzwy","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yww","yww","ywww","ywww","ywwx","ywwx","ywwy","ywwy","ywwz","ywwz","ywx","ywx","ywxw","ywxw","ywxx","ywxx","ywxy","ywxy","ywxz","ywxz","ywy","ywy","ywyw","ywyw","ywyx","ywyx","ywyy","ywyy","ywyz","ywyz","ywz","ywz","ywzw","ywzw","ywzx","ywzx","ywzy","ywzy","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxww","yxww","yxwx","yxwx","yxwy","yxwy","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyww","yyww","yywx","yywx","yywy","yywy","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yzw","yzw","yzww","yzww","yzwx","yzwx","yzwy","yzwy","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zww","zww","zwww","zwww","zwwx","zwwx","zwwy","zwwy","zwwz","zwwz","zwx","zwx","zwxw","zwxw","zwxx","zwxx","zwxy","zwxy","zwxz","zwxz","zwy","zwy","zwyw","zwyw","zwyx","zwyx","zwyy","zwyy","zwyz","zwyz","zwz","zwz","zwzw","zwzw","zwzx","zwzx","zwzy","zwzy","zwzz","zwzz","zx","zx","zx","zx","zx","zxw","zxw","zxww","zxww","zxwx","zxwx","zxwy","zxwy","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zyw","zyw","zyww","zyww","zywx","zywx","zywy","zywy","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zzw","zzw","zzww","zzww","zzwx","zzwx","zzwy","zzwy","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","BVec2","BVec3","BVec3A","BVec4","BVec4A","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","all","all","all","any","any","any","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","debug","debug","debug","default","default","default","deserialize","deserialize","deserialize","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_reflect","from_reflect","from_reflect","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","name_at","name_at","name_at","new","new","new","not","not","not","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","serialize","serialize","serialize","set","set","set","splat","splat","splat","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","upcast","upcast","upcast","w","x","x","x","y","y","y","z","z","AXES","AXES","AXES","Affine2","Affine3A","IDENTITY","IDENTITY","IDENTITY","IDENTITY","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","Quat","Vec2","Vec3","Vec3A","Vec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat4","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat2","as_dmat3","as_dmat4","as_dvec2","as_dvec3","as_dvec4","as_f64","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_uvec2","as_uvec3","as_uvec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","col","col","col","col_mut","col_mut","col_mut","conjugate","create_from","create_from","create_from","create_from","create_from","create_from","cross","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","extend","extend","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_mat2","from_mat3","from_mat3","from_mat3","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","index","index","index","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","look_at_lh","look_at_rh","look_to_lh","look_to_rh","mat2","mat3","mat3a","mat4","matrix2","matrix3","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec4","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","new","new","new","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","quat","read_from","read_from","read_from","read_from","read_from","read_from","recip","recip","recip","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","round","round","round","row","row","row","select","select","select","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","signum","signum","signum","slerp","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point3","transform_point3a","transform_vector2","transform_vector3","transform_vector3a","translation","translation","transpose","transpose","transpose","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vec2","vec3","vec3a","vec4","w_axis","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x_axis","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y_axis","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z_axis","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","AXES","AXES","AXES","IVec2","IVec3","IVec4","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dvec2","as_dvec3","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","create_from","create_from","create_from","cross","debug","debug","debug","default","default","default","deserialize","deserialize","deserialize","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extend","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_parts","from_parts","from_parts","from_reflect","from_reflect","from_reflect","from_slice","from_slice","from_slice","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","ivec2","ivec3","ivec4","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","name_at","name_at","name_at","neg","neg","neg","new","new","new","not","not","not","perp","perp_dot","product","product","product","product","product","product","read_from","read_from","read_from","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","select","select","select","serialize","serialize","serialize","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","upcast","upcast","upcast","w","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","BVec2","BVec3","BVec4","EulerRot","IVec2","IVec3","IVec4","Mat2","Mat3","Mat4","Quat","Ray","Rect","UVec2","UVec3","UVec4","Vec2","Vec3","Vec4","XYZ","XZY","YXZ","YZX","ZXY","ZYX","direction","max","min","origin","w","w","w","w_axis","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","z","z","z","z","z","z","z","z_axis","z_axis","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","ONE","ONE","ONE","UVec2","UVec3","UVec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dvec2","as_dvec3","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","create_from","create_from","create_from","cross","debug","debug","debug","default","default","default","deserialize","deserialize","deserialize","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","extend","extend","field","field","field","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_parts","from_parts","from_parts","from_reflect","from_reflect","from_reflect","from_slice","from_slice","from_slice","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter_fields","iter_fields","iter_fields","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","name_at","name_at","name_at","new","new","new","not","not","not","product","product","product","product","product","product","read_from","read_from","read_from","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","select","select","select","serialize","serialize","serialize","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","upcast","upcast","upcast","uvec2","uvec3","uvec4","w","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","ALPHA_MASK","ALPHA_MODE_ADD","ALPHA_MODE_BLEND","ALPHA_MODE_MASK","ALPHA_MODE_MULTIPLY","ALPHA_MODE_OPAQUE","ALPHA_MODE_PREMULTIPLIED","ALPHA_MODE_RESERVED_BITS","Add","AddClusters","AddClustersFlush","AlphaMode","AmbientLight","AssignLightsToClusters","Atmospheric","BASE_COLOR_TEXTURE","BLEND_MULTIPLY","BLEND_OPAQUE","BLEND_PREMULTIPLIED_ALPHA","BLEND_RESERVED_BITS","Blend","CLUSTERED_FORWARD_HANDLE","CLUSTERED_FORWARD_STORAGE_BUFFER_COUNT","Cascade","CascadeShadowConfig","CascadeShadowConfigBuilder","Cascades","CascadesVisibleEntities","CheckLightVisibility","ClusterConfig","ClusterFarZMode","ClusterZConfig","Clusters","Constant","CubemapVisibleEntities","DEBAND_DITHER","DEFAULT_SHADOW_DEPTH_BIAS","DEFAULT_SHADOW_DEPTH_BIAS","DEFAULT_SHADOW_DEPTH_BIAS","DEFAULT_SHADOW_NORMAL_BIAS","DEFAULT_SHADOW_NORMAL_BIAS","DEFAULT_SHADOW_NORMAL_BIAS","DEPTH_CLAMP_ORTHO","DEPTH_PREPASS","DOUBLE_SIDED","Directional","DirectionalLight","DirectionalLightBundle","DirectionalLightShadowMap","DrawMesh","DrawPrepass","DrawShadowMesh","EMISSIVE_TEXTURE","ENVIRONMENT_MAP","EnvironmentMapLight","Exponential","ExponentialSquared","ExtractClusters","ExtractLights","ExtractedClusterConfig","ExtractedClustersPointLights","ExtractedDirectionalLight","ExtractedMaterials","ExtractedPointLight","FLIP_NORMAL_MAP_Y","FOG_ENABLED","FOG_SHADER_HANDLE","FixedZ","FogFalloff","FogMeta","FogPlugin","FogSettings","GlobalLightMeta","GlobalVisiblePointLights","GpuDirectionalCascade","GpuDirectionalLight","GpuFog","GpuLights","GpuPointLight","GpuPointLights","GpuPointLightsStorage","GpuPointLightsUniform","HDR","IN_VIEW","LightEntity","LightMeta","Linear","MAX_CASCADES_PER_LIGHT","MAX_DIRECTIONAL_LIGHTS","MAX_INDICES","MAX_OFFSETS","MAX_UNIFORM_BUFFER_POINT_LIGHTS","MESH_BINDINGS_HANDLE","MESH_FUNCTIONS_HANDLE","MESH_SHADER_HANDLE","MESH_TYPES_HANDLE","MESH_VERTEX_OUTPUT","MESH_VIEW_BINDINGS_HANDLE","MESH_VIEW_TYPES_HANDLE","METALLIC_ROUGHNESS_TEXTURE","MSAA_RESERVED_BITS","Mask","Material","MaterialMeshBundle","MaterialPipeline","MaterialPipelineKey","MaterialPlugin","MaterialProperties","MaxLightRange","MeshBindGroup","MeshPipeline","MeshPipelineKey","MeshRenderPlugin","MeshUniform","MeshViewBindGroup","Multiply","NONE","NONE","NONE","NORMAL_PREPASS","None","NotShadowCaster","NotShadowReceiver","OCCLUSION_TEXTURE","Opaque","PBR_AMBIENT_HANDLE","PBR_BINDINGS_SHADER_HANDLE","PBR_FUNCTIONS_HANDLE","PBR_LIGHTING_HANDLE","PBR_PREPASS_SHADER_HANDLE","PBR_SHADER_HANDLE","PBR_TYPES_SHADER_HANDLE","PREPASS_BINDINGS_SHADER_HANDLE","PREPASS_SHADER_HANDLE","PREPASS_UTILS_SHADER_HANDLE","PRIMITIVE_TOPOLOGY_RESERVED_BITS","PRIMITIVE_TOPOLOGY_RESERVED_BITS","PbrBundle","PbrPlugin","Point","PointLight","PointLightBundle","PointLightShadowMap","Premultiplied","PrepareClusters","PrepareFog","PrepareLights","PrepareNextFrameMaterials","PreparedMaterial","PrepassPipeline","PrepassPlugin","PrepassViewBindGroup","QueueShadows","REVISED_KOSCHMIEDER_CONTRAST_THRESHOLD","RenderFogSystems","RenderLightSystems","RenderMaterials","SHADOWS_HANDLE","SHADOW_FORMAT","SHADOW_SHADER_HANDLE","SKINNING_HANDLE","SetMaterialBindGroup","SetMeshBindGroup","SetMeshViewBindGroup","SetPrepassViewBindGroup","SetShadowViewBindGroup","Shadow","ShadowPassNode","ShadowPipeline","ShadowPipelineKey","ShadowView","SimulationLightSystems","Single","SkinnedMeshJoints","SkinnedMeshUniform","Spot","SpotLight","SpotLightBundle","StandardMaterial","StandardMaterialFlags","StandardMaterialKey","StandardMaterialUniform","Storage","TONEMAP_IN_SHADER","TWO_COMPONENT_NORMAL_MAP","UNINITIALIZED","UNLIT","UTILS_HANDLE","Uniform","UpdateDirectionalLightCascades","UpdateLightFrusta","ViewClusterBindings","ViewFogUniformOffset","ViewLightEntities","ViewLightsUniformOffset","ViewShadowBindings","VisiblePointLights","XYZ","_marker","add_clusters","after","after","after","all","all","all","alpha_cutoff","alpha_mode","alpha_mode","alpha_mode","alpha_mode","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","base_color","base_color","base_color_texture","before","before","before","bind_group","bind_group_data","bind_group_layout","binding","bindings","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","brightness","buffer","build","build","build","build","build","build","build","cached_pipeline","calculate_cluster_factors","calculate_size_for","cascade_shadow_config","cascades","check_light_mesh_visibility","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clustered_forward_buffer_binding_type","cmp","cmp","cmp","color","color","color","color","color","complement","complement","complement","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","computed_visibility","computed_visibility","computed_visibility","computed_visibility","contains","contains","contains","contains","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","cubemap_frusta","cubemap_visible_entities","cull_mode","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_bias","depth_bias","depth_bias","depth_bias","depth_texture_view","deref","deref_mut","difference","difference","difference","diffuse_map","directional_light","directional_light_color","directional_light_depth_texture","directional_light_depth_texture_view","directional_light_exponent","directional_light_sampler","distance","double_sided","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_3d_graph","draw_function","draw_function","dummy_white_gpu_image","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","emissive","emissive","emissive_texture","empty","empty","empty","entities","entity","entity","entity_to_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extract_camera_prepass_phase","extract_clusters","extract_component","extract_component","extract_lights","extract_materials","extract_meshes","extract_resource","extract_skinned_meshes","falloff","far_z_mode","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","first_cascade_far_bound","first_slice_depth","flags","flags","flip_normal_map_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fog_enabled","fragment_shader","fragment_shader","fragment_shader","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_hdr","from_iter","from_iter","from_iter","from_msaa_samples","from_primitive_topology","from_primitive_topology","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_visibility","from_visibility_color","from_visibility_colors","from_visibility_contrast","from_visibility_contrast_color","from_visibility_contrast_colors","from_visibility_contrast_squared","from_visibility_squared","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","frusta","frustum","get","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_image_texture","get_mut","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","global_transform","global_transform","global_transform","global_transform","gpu_fogs","gpu_point_lights","hash","hash","hash","hash","hash","hash","hash","hash","illuminance","in_base_set","in_base_set","in_base_set","in_default_base_set","in_default_base_set","in_default_base_set","in_set","in_set","in_set","index","index_of","index_of","index_of","index_of","inner_angle","input","insert","insert","insert","intensity","intensity","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","into_system_set","inverse_transpose_model","is_all","is_all","is_all","is_base","is_base","is_base","is_empty","is_empty","is_empty","is_empty","is_loaded","is_system_type","is_system_type","is_system_type","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","key","koschmieder","len","light_index_lists_binding","lights","material","material_fragment_shader","material_layout","material_layout","material_pipeline","material_vertex_shader","maximum_distance","mesh","mesh_key","mesh_layout","mesh_layout","mesh_layout","mesh_pipeline","metallic","metallic","metallic_roughness_texture","min_size","min_size_cluster_light_index_lists","min_size_cluster_offsets_and_counts","minimum_distance","minimum_distance","msaa_samples","n_indices","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","normal","normal_map_texture","not","not","not","num_cascades","occlusion_texture","offset","offset","offsets_and_counts_binding","outer_angle","overlap_proportion","overlap_proportion","partial_cmp","partial_cmp","partial_cmp","pass_name","perceptual_roughness","pipeline","point_light","point_light_count","point_light_depth_texture","point_light_depth_texture_view","point_light_sampler","prelude","prepare_clusters","prepare_fog","prepare_lights","prepare_materials","prepare_prepass_textures","prepare_skinned_meshes","prepass_enabled","prepass_enabled","prepass_fragment_shader","prepass_fragment_shader","prepass_vertex_shader","primitive_topology","primitive_topology","properties","push_index","push_offset_and_counts","queue_material_meshes","queue_mesh_bind_group","queue_mesh_view_bind_groups","queue_prepass_material_meshes","queue_prepass_view_bind_group","queue_shadow_view_bind_group","queue_shadows","radius","radius","range","range","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflectance","reflectance","remove","remove","remove","render","render","render","render","render","render","roughness","run","run_if","run_if","run_if","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","shadow_depth_bias","shadow_depth_bias","shadow_depth_bias","shadow_normal_bias","shadow_normal_bias","shadow_normal_bias","shadow_view_bind_group","shadows_enabled","shadows_enabled","shadows_enabled","size","size","size","size","size","size","size","size","size","size","size","skinned","skinned_mesh_layout","skinned_mesh_layout","skinned_mesh_layout","sort","sort_key","specialize","specialize","specialize","specialize","specialize","specialize","specular_map","spot_light","spot_light_count","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_buffer_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","transform","transform","transform","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","union","union","union","unlit","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_directional_light_cascades","update_directional_light_frusta","update_point_light_frusta","update_spot_light_frusta","value","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","vertex_shader","vertex_shader","view_gpu_lights","view_layout","view_layout","view_layout","view_layout_multisampled","visibility","visibility","visibility","visibility","visible_entities","visible_entities","wireframe","write_buffers","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","dimensions","dynamic_resizing","dynamic_resizing","total","z_config","z_config","z_slices","density","density","end","extinction","inscattering","start","cascade_index","face_index","light_entity","light_entity","light_entity","node","SHADOW_PASS","Add","AlphaMode","AmbientLight","Atmospheric","Blend","DirectionalLight","DirectionalLightBundle","EnvironmentMapLight","Exponential","ExponentialSquared","FogFalloff","FogSettings","Linear","Mask","Material","MaterialMeshBundle","MaterialPlugin","Multiply","Opaque","PbrBundle","PointLight","PointLightBundle","Premultiplied","SpotLight","SpotLightBundle","StandardMaterial","_marker","alpha_mode","alpha_mode","base_color","base_color_texture","brightness","cascade_shadow_config","cascades","color","color","color","color","color","computed_visibility","computed_visibility","computed_visibility","computed_visibility","cubemap_frusta","cubemap_visible_entities","cull_mode","depth_bias","depth_bias","diffuse_map","directional_light","directional_light_color","directional_light_exponent","double_sided","emissive","emissive_texture","falloff","flip_normal_map_y","fog_enabled","fragment_shader","frusta","frustum","global_transform","global_transform","global_transform","global_transform","illuminance","inner_angle","intensity","intensity","material","mesh","metallic","metallic_roughness_texture","normal_map_texture","occlusion_texture","outer_angle","perceptual_roughness","point_light","prepass_enabled","prepass_fragment_shader","prepass_vertex_shader","radius","radius","range","range","reflectance","shadow_depth_bias","shadow_depth_bias","shadow_depth_bias","shadow_normal_bias","shadow_normal_bias","shadow_normal_bias","shadows_enabled","shadows_enabled","shadows_enabled","specialize","specular_map","spot_light","transform","transform","transform","transform","unlit","vertex_shader","visibility","visibility","visibility","visibility","visible_entities","visible_entities","density","density","end","extinction","inscattering","start","WIREFRAME_SHADER_HANDLE","Wireframe","WireframeConfig","WireframePipeline","WireframePlugin","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","default","default","default","downcast","downcast","downcast","downcast","extract_component","extract_resource","field","field","field_at","field_at","field_at_mut","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","fmt","from","from","from","from","from_components","from_world","from_world","from_world","from_world","get_components","get_field","get_field","get_field_mut","get_field_mut","get_type_info","get_type_info","get_type_registration","get_type_registration","global","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","name_at","name_at","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","set","set","specialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","type_info","type_name","type_name","upcast","upcast","upcast","upcast","A","AbntC1","AbntC2","Absolute","Add","AddAsset","AddChild","Added","Alias","AlignContent","AlignItems","AlignSelf","AllScroll","AlphaMode","AmbientLight","AncestorIter","AnimationClip","AnimationPlayer","AnimationPlugin","AnyOf","Apostrophe","App","AppTypeRegistry","Apps","Arrow","AssetEvent","AssetPlugin","AssetServer","Assets","Asterisk","At","At","Atmospheric","Audio","AudioOutput","AudioSource","Auto","Auto","Automatic","Ax","Axis","B","BVec2","BVec3","BVec4","Back","BackgroundColor","Backslash","Baseline","Baseline","Blend","BuildChildren","BuildChildrenTransformExt","BuildWorldChildren","Bundle","Bundle","Button","ButtonBundle","C","C","CalculatedClip","CalculatedSize","Calculator","Camera","Camera2d","Camera2dBundle","Camera3d","Camera3dBundle","Capital","Caret","Cell","Center","Center","Center","Center","Center","Centered","ChangeTrackers","Changed","ChildBuilder","Children","ClearChildren","ClearColor","Clicked","ColResize","Colon","Color","ColorMaterial","ColorMesh2dBundle","Column","ColumnReverse","Comma","Commands","Commit","Component","Component","Compose","ComputedVisibility","ContextMenu","Convert","Copy","Copy","CoreSchedule","CoreSet","Created","Crosshair","Current","CursorEntered","CursorIcon","CursorLeft","CursorMoved","Cut","D","DPadDown","DPadLeft","DPadRight","DPadUp","DebugName","Decodable","Decoder","DecoderItem","Default","DefaultPlugins","Deferred","Delete","Deref","DerefMut","DescendantIter","DespawnChildrenRecursive","DespawnRecursive","DespawnRecursiveExt","DetectChanges","DetectChangesMut","Direction","DirectionalLight","DirectionalLightBundle","Disabled","Display","Down","DroppedFile","DynamicPlugin","DynamicPluginExt","DynamicPluginLoadError","DynamicScene","DynamicSceneBuilder","DynamicSceneBundle","E","EResize","East","Enabled","End","Entity","EntityPath","EnvironmentMapLight","Equals","Escape","EulerRot","Event","EventReader","EventWriter","Events","EwResize","Exponential","ExponentialSquared","ExtractSchedule","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FailedToAddGlyph","FileDragAndDrop","First","FirstFlush","FixedTime","FixedUpdate","FixedUpdate","Flex","FlexDirection","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexStart","FlexStart","FlexStart","FlexStart","FlexWrap","FogFalloff","FogSettings","Font","FrameCountPlugin","FromReflect","FromReflect","FromWorld","G","Gamepad","GamepadAxis","GamepadAxisType","GamepadButton","GamepadButtonType","Gamepads","GetField","GetTupleStructField","GilrsPlugin","Global","GlobalTransform","Grab","Grabbing","Grave","H","Hand","Handle","HandleUntyped","Help","Hidden","Hidden","HierarchyPlugin","HierarchyQueryExt","Home","Hovered","HoveredFile","HoveredFileCancelled","Hsla","I","IVec2","IVec3","IVec4","Image","ImageBundle","ImagePlugin","Ime","In","In","Index","Inherit","Inherited","Inner","Input","Insert","InsertChildren","Interaction","IntoPipeSystem","IntoSystem","IntoSystemConfig","IntoSystemConfigs","IntoSystemSet","IntoSystemSetConfig","IntoSystemSetConfigs","Iter","J","JustifyContent","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","Keyframes","L","LAlt","LBracket","LControl","LShift","LWin","Last","LastFlush","Lcha","Left","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftToRight","LeftTrigger","LeftTrigger2","LeftZ","Library","Linear","Local","Local","M","Mail","Main","Mask","Mat2","Mat3","Mat4","Material","MaterialMeshBundle","MaterialPlugin","MediaSelect","MediaStop","Mesh","Middle","MinimalPlugins","Minus","Mode","Modified","MonitorSelection","MouseButton","Move","Msaa","Multiply","Mut","Mute","MyComputer","N","NResize","Name","NavigateBackward","NavigateForward","NeResize","NeswResize","NextState","NextTrack","NoConvert","NoDrop","NoSuchFont","NoWrap","Node","NodeBundle","NonEvaluateable","NonIdenticalVariants","NonSend","NonSendMut","None","None","North","NotAllowed","NsResize","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","NwResize","NwseResize","O","Oem102","Off","OnEnter","OnExit","OnUpdate","Once","Opaque","Or","Orthographic","OrthographicProjection","Other","Other","Other","Out","Outer","Overflow","P","PageDown","PageUp","ParallelCommands","ParamSet","Parent","Paste","Pause","PbrBundle","Percent","Period","Perspective","PerspectiveProjection","PlayPause","PlaybackSettings","Plugin","Plugin","PluginGroup","Plus","PointLight","PointLightBundle","PositionType","PostStartup","PostStartupFlush","PostUpdate","PostUpdateFlush","Power","PreStartup","PreStartupFlush","PreUpdate","PreUpdateFlush","Preedit","Premultiplied","PrevTrack","Primary","Progress","Projection","PushChildren","Px","Q","Quat","Query","QueryState","R","RAlt","RBracket","RControl","RShift","RWin","Ray","ReceivedCharacter","Rect","Ref","Reflect","Reflect","ReflectComponent","ReflectDefault","ReflectDeserialize","ReflectResource","ReflectSerialize","Relative","RemoveChildren","RemoveParent","Removed","RemovedComponents","Repeating","ReplaceChildren","Res","ResMut","Resource","Resource","Return","Rgba","RgbaLinear","Right","Right","Right","RightStickX","RightStickY","RightThumb","RightToLeft","RightTrigger","RightTrigger2","RightZ","Rotation","Row","RowResize","RowReverse","S","SResize","Sample4","Scale","ScanCode","Scene","SceneBundle","SceneSpawner","Schedule","Schedules","Scroll","SeResize","Select","Semicolon","Set","Shader","Size","Slash","Sleep","Snapshot","South","Space","SpaceAround","SpaceAround","SpaceBetween","SpaceBetween","SpaceEvenly","SpatialBundle","SpotLight","SpotLightBundle","Sprite","SpriteBundle","SpriteSheetBundle","StandardMaterial","Start","Startup","Startup","StartupFlush","StartupSet","State","StateTransitions","States","States","Stop","Storage","Stretch","Stretch","Stretch","Struct","Style","SwResize","Sysrq","System","System","SystemParamFunction","SystemSet","SystemSet","T","Tab","TaskPoolOptions","TaskPoolPlugin","Text","Text","Text2dBundle","TextAlignment","TextBundle","TextError","TextSection","TextStyle","TextureAtlas","TextureAtlasBuilder","TextureAtlasSprite","Time","Timer","TimerMode","TouchInput","Touches","Transform","TransformBundle","TransformPlugin","Translation","TupleStruct","TypeRegistrationPlugin","U","UVec2","UVec3","UVec4","UiCameraConfig","UiImage","UiRect","UiScale","Undefined","Underline","Unlabeled","Up","Update","UpdateFlush","V","Val","ValArithmeticError","ValidParentCheckPlugin","VariableCurve","Vec2","Vec3","Vec4","VerticalText","Visibility","VisibilityBundle","Visible","Visible","VolumeDown","VolumeUp","W","WResize","Wait","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","West","Window","WindowMoved","WindowPlugin","WindowPosition","WindowResizeConstraints","With","Without","World","WorldChildBuilder","Wrap","WrapReverse","X","XYZ","XZY","Y","YXZ","YZX","Yen","Z","Z","ZIndex","ZXY","ZYX","ZoomIn","ZoomOut","_marker","add_asset","add_asset_loader","add_child","add_child","add_debug_asset","after","after","after","after","align_content","align_items","align_self","alignment","alpha_mode","alpha_mode","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","anchor","anchor","apply","apply_buffers","apply_state_transition","apply_system_buffers","archetype_component_access","area","as_any","as_any_mut","as_reflect","as_reflect_mut","aspect_ratio","aspect_ratio","asset_folder","async_compute","axis_type","background_color","background_color","background_color","base_color","base_color_texture","before","before","before","before","bevy_main","border","bottom","brightness","build","build","button","button_type","bypass_change_detection","bytes","calculated_size","calculated_size","camera","camera","camera_2d","camera_3d","camera_render_graph","camera_render_graph","canvas","cascade_shadow_config","cascades","chain","chain","char","check_change_tick","child","child","clear_children","clear_color","clear_color","clip","clone_dynamic","clone_dynamic","clone_value","close_when_requested","color","color","color","color","color","color","color","color","color","component_access","composite_alpha_mode","compute","computed","computed","computed","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","computed_visibility","cubemap_frusta","cubemap_visible_entities","cull_mode","cursor","custom_size","custom_size","data","dbg","debug","debug","debug_span","decoder","decorations","default","default_sampler","default_schedule_label","default_system_sets","depth_bias","depth_bias","depth_load_op","despawn_descendants","despawn_recursive","despawn_with_children_recursive","diffuse_map","direction","direction","directional_light","directional_light_color","directional_light_exponent","display","double_sided","dyn_clone","dynamically_load_plugin","emissive","emissive_texture","entities","entity","entity","entity","entity","error","error","error_span","exit_condition","falloff","far","far","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","fit_canvas_to_parent","flex_basis","flex_direction","flex_grow","flex_shrink","flex_wrap","flip_normal_map_y","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","focus_policy","focus_policy","focus_policy","focus_policy","focused","fog_enabled","font","font","font_size","force","fov","fragment_shader","from_reflect","from_world","frusta","frustum","frustum","frustum","func","gamepad","gamepad","gap","get_field","get_field","get_field_mut","get_field_mut","get_last_change_tick","get_type_info","global","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","global_transform","hdr","height","id","id","ignore","illuminance","image","image","ime_enabled","ime_position","in_base_set","in_base_set","in_base_set","in_base_set","in_default_base_set","in_set","in_set","in_set","in_set","index","info","info","info_span","init_asset_loader","init_debug_asset_loader","initialize","inner_angle","insert_children","insert_children","intensity","intensity","interaction","internal","into_any","into_reflect","into_system","into_system_set","io","is_active","is_added","is_base","is_changed","is_exclusive","is_send","is_system_type","is_unique","iter_ancestors","iter_descendants","iter_fields","iter_fields","justify_content","keyframe_timestamps","keyframes","last_changed","left","linebreak_behaviour","load_plugin","local","margin","material","max","max_height","max_size","max_total_threads","max_width","mesh","metallic","metallic_roughness_texture","min","min_height","min_size","min_total_threads","min_width","mode","name","name","name","name","name_at","near","near","no_default_base_set","node","node","node","node","normal_map_texture","not","occlusion_texture","order","origin","outer_angle","outer_schedule_label","overflow","padding","parent","parts","perceptual_roughness","period","phase","pipe","point_light","position","position","position","position","position","position_type","prepass_enabled","prepass_fragment_shader","prepass_vertex_shader","present_mode","preserve_aspect_ratio","prevent_default_event_handling","primary_window","projection","projection","push_children","push_children","radius","radius","range","range","rect","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_trait","reflectance","register_asset_reflect","remove_children","remove_children","remove_parent","remove_parent","remove_parent_in_place","repeat","replace_children","resizable","resize_constraints","resolution","resource_equals","resource_exists","resource_exists_and_equals","right","rotation","run","run","run_if","run_if","run_once","run_unsafe","runner","sampler_descriptor","scale","scale","scale","scaling_mode","scene","scene","sections","serializable","set","set","set_changed","set_if_neq","set_last_change_tick","set_last_changed","set_parent","set_parent","set_parent_in_place","setup","shadow_depth_bias","shadow_depth_bias","shadow_depth_bias","shadow_normal_bias","shadow_normal_bias","shadow_normal_bias","shadows_enabled","shadows_enabled","shadows_enabled","shape","show_ui","size","size","size","specialize","specular_map","speed","spot_light","sprite","sprite","state_equals","state_exists","state_exists_and_equals","style","style","style","style","style","system_adapter","take_from_reflect","target","task_pool_options","text","text","text_2d_bounds","text_anchor","texture","texture","texture","texture","texture_atlas","texture_descriptor","texture_handles","texture_view_descriptor","textures","title","tonemapping","tonemapping","top","trace","trace_span","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","transform","translation","transparent","type_id","type_name","unlit","unwrap","update_archetype_component_access","value","variants","vertex_shader","viewport","viewport_origin","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visible_entities","visible_entities","visible_entities","visible_entities","volume","w","w","w","w_axis","warn","warn","warn_span","watch_for_changes","width","window","window","window","window","window_level","with_children","with_children","world","world","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","z","z","z","z","z","z","z","z_axis","z_axis","z_index","z_index","z_index","z_index","handle","handle","handle","alpha","alpha","alpha","alpha","blue","blue","chroma","green","green","hue","hue","lightness","lightness","red","red","saturation","path_buf","path_buf","window","window","window","density","density","end","extinction","inscattering","start","cursor","value","value","window","window","window","window","Aspect","Box","Capsule","CapsuleUvProfile","Circle","Cube","Cylinder","Fixed","Icosphere","Plane","Quad","RegularPolygon","Torus","UVSphere","Uniform","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","default","default","default","default","default","depth","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","flip","flipped","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_corners","from_size","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","height","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","latitudes","longitudes","max_x","max_y","max_z","min_x","min_y","min_z","new","new","new","new","new","radius","radius","radius","radius","radius","radius","radius","resolution","ring_radius","rings","sectors","segments","sides","size","size","size","stacks","subdivisions","subdivisions","subdivisions_segments","subdivisions_sides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv_profile","vertices","dbg","error","ignore","info","new","unwrap","warn","Aligned","IsAligned","OwningPtr","Ptr","PtrMut","ThinSlicePtr","Unaligned","UnsafeCellDeref","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","assert_unique","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_add","byte_add","byte_add","byte_offset","byte_offset","byte_offset","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","dangling_with_align","deref","deref","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop_as","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","make","new","new","new","promote","read","read","read_unaligned","reborrow","to_owned","to_owned","to_owned","to_owned","to_unaligned","to_unaligned","to_unaligned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","Array","Array","Array","Array","Array","ArrayInfo","ArrayIter","Dynamic","DynamicArray","DynamicEnum","DynamicInfo","DynamicList","DynamicMap","DynamicStruct","DynamicTuple","DynamicTupleStruct","DynamicVariant","Enum","Enum","Enum","Enum","Enum","EnumInfo","ExpectedIdent","ExpectedList","ExpectedStruct","ExpectedStructVariant","ExpectedToken","ExpectedTupleVariant","FieldIter","FromReflect","FromReflect","FromType","GetField","GetPath","GetTupleField","GetTupleStructField","GetTypeRegistration","IndexParseError","InvalidDowncast","InvalidField","InvalidFieldIndex","InvalidListIndex","InvalidStructVariantField","InvalidTupleIndex","InvalidTupleStructIndex","InvalidTupleVariantIndex","List","List","List","List","List","ListInfo","ListIter","Map","Map","Map","Map","Map","MapInfo","MapIter","NamedField","ParsedPath","Reflect","Reflect","ReflectDeserialize","ReflectFromPtr","ReflectFromReflect","ReflectHasher","ReflectMut","ReflectOwned","ReflectPathError","ReflectRef","ReflectSerialize","Struct","Struct","Struct","Struct","Struct","Struct","Struct","Struct","Struct","StructInfo","StructVariantInfo","TYPE_UUID","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","Tuple","TupleFieldIter","TupleInfo","TupleStruct","TupleStruct","TupleStruct","TupleStruct","TupleStruct","TupleStructFieldIter","TupleStructInfo","TupleVariantInfo","TypeData","TypeInfo","TypeRegistration","TypeRegistry","TypeRegistryArc","TypeRegistryInternal","TypeUuid","TypeUuid","TypeUuidDynamic","Typed","UnexpectedToken","Unit","Unit","Unit","UnitVariantInfo","UnnamedField","Uuid","Value","Value","Value","Value","ValueInfo","VariantField","VariantFieldIter","VariantInfo","VariantType","add_registration","apply","apply","apply","apply","apply","apply","apply","apply","array_apply","array_debug","array_hash","array_partial_eq","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_ptr","as_reflect_ptr_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","contains_variant","data","data_mut","debug","debug","debug","debug","debug","debug","debug","default","default","default","default","default","default","default","default","default","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_rc","downcast_ref","downcast_ref","drain","drain","drain","drain","drain","drain","drain","drain","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","element","element_mut","empty","enum_debug","enum_hash","enum_partial_eq","eq","eq","eq","equivalent","equivalent","equivalent","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_names","field_names","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_reflect","from_reflect","from_type","from_type","from_type","from_type","from_type","from_vec","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","func","get","get","get","get","get","get","get","get_at","get_at","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_serializable","get_type_data","get_type_data_mut","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_with_name","get_with_name_mut","get_with_short_name","get_with_short_name_mut","hash","hash","impl_from_reflect_value","impl_reflect_struct","impl_reflect_value","in_current_span","index","index_of","index_of","index_of","index_of","index_of","index_of","insert","insert","insert","insert","insert","insert","insert","insert_boxed","insert_boxed","insert_boxed","insert_boxed","insert_boxed","internal","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is","is","is","is","is","is","is","is","is","is","is","is","is","is","is_empty","is_empty","is_empty","is_variant","item_is","item_is","item_type_id","item_type_id","item_type_name","item_type_name","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","key_is","key_type_id","key_type_name","len","len","len","len","len","len","list_apply","list_debug","list_hash","list_partial_eq","map_apply","map_debug","map_partial_eq","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_with_index","next","next","next","next","next","next","next","of","parse","partial_cmp","path","path_mut","pop","pop","prelude","provide","push","push","push","push_box","read","reflect_element","reflect_element_mut","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_trait","register","register_type_data","remove","remove","remove","remove","represents","serde","serializable","set","set","set","set","set","set","set","set","set_name","set_name","set_name","set_name","set_name","set_name","set_name","set_variant","set_variant_with_index","short_name","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","std_traits","struct_debug","struct_partial_eq","take","take_from_reflect","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_apply","tuple_debug","tuple_partial_eq","tuple_struct_debug","tuple_struct_partial_eq","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","utility","value","value_is","value_type_id","value_type_name","variant","variant_at","variant_index","variant_index","variant_len","variant_name","variant_name","variant_names","variant_path","variant_path","variant_type","variant_type","write","field","field","field_index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","list_index","token","token","tuple_index","tuple_struct_index","tuple_variant_index","Deserializer","Error","Result","Serialize","Serializer","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","custom","custom","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","downcast","erase","erase","erased_deserialize_any","erased_deserialize_bool","erased_deserialize_byte_buf","erased_deserialize_bytes","erased_deserialize_char","erased_deserialize_enum","erased_deserialize_f32","erased_deserialize_f64","erased_deserialize_i128","erased_deserialize_i16","erased_deserialize_i32","erased_deserialize_i64","erased_deserialize_i8","erased_deserialize_identifier","erased_deserialize_ignored_any","erased_deserialize_map","erased_deserialize_newtype_struct","erased_deserialize_option","erased_deserialize_seq","erased_deserialize_str","erased_deserialize_string","erased_deserialize_struct","erased_deserialize_tuple","erased_deserialize_tuple_struct","erased_deserialize_u128","erased_deserialize_u16","erased_deserialize_u32","erased_deserialize_u64","erased_deserialize_u8","erased_deserialize_unit","erased_deserialize_unit_struct","erased_is_human_readable","erased_is_human_readable","erased_serialize","erased_serialize_bool","erased_serialize_bytes","erased_serialize_char","erased_serialize_f32","erased_serialize_f64","erased_serialize_i128","erased_serialize_i16","erased_serialize_i32","erased_serialize_i64","erased_serialize_i8","erased_serialize_map","erased_serialize_newtype_struct","erased_serialize_newtype_variant","erased_serialize_none","erased_serialize_seq","erased_serialize_some","erased_serialize_str","erased_serialize_struct","erased_serialize_struct_variant","erased_serialize_tuple","erased_serialize_tuple_struct","erased_serialize_tuple_variant","erased_serialize_u128","erased_serialize_u16","erased_serialize_u32","erased_serialize_u64","erased_serialize_u8","erased_serialize_unit","erased_serialize_unit_struct","erased_serialize_unit_variant","fmt","fmt","from","in_current_span","into","into_any","into_any_arc","into_any_rc","into_sample","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","is_human_readable","provide","serialize","serialize","serialize","serialize","serialize","serialize_bool","serialize_bool","serialize_bool","serialize_bool","serialize_bytes","serialize_bytes","serialize_bytes","serialize_bytes","serialize_char","serialize_char","serialize_char","serialize_char","serialize_f32","serialize_f32","serialize_f32","serialize_f32","serialize_f64","serialize_f64","serialize_f64","serialize_f64","serialize_i128","serialize_i128","serialize_i128","serialize_i128","serialize_i16","serialize_i16","serialize_i16","serialize_i16","serialize_i32","serialize_i32","serialize_i32","serialize_i32","serialize_i64","serialize_i64","serialize_i64","serialize_i64","serialize_i8","serialize_i8","serialize_i8","serialize_i8","serialize_map","serialize_map","serialize_map","serialize_map","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_struct","serialize_newtype_variant","serialize_newtype_variant","serialize_newtype_variant","serialize_newtype_variant","serialize_none","serialize_none","serialize_none","serialize_none","serialize_seq","serialize_seq","serialize_seq","serialize_seq","serialize_some","serialize_some","serialize_some","serialize_some","serialize_str","serialize_str","serialize_str","serialize_str","serialize_struct","serialize_struct","serialize_struct","serialize_struct","serialize_struct_variant","serialize_struct_variant","serialize_struct_variant","serialize_struct_variant","serialize_trait_object","serialize_tuple","serialize_tuple","serialize_tuple","serialize_tuple","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_struct","serialize_tuple_variant","serialize_tuple_variant","serialize_tuple_variant","serialize_tuple_variant","serialize_u128","serialize_u128","serialize_u128","serialize_u128","serialize_u16","serialize_u16","serialize_u16","serialize_u16","serialize_u32","serialize_u32","serialize_u32","serialize_u32","serialize_u64","serialize_u64","serialize_u64","serialize_u64","serialize_u8","serialize_u8","serialize_u8","serialize_u8","serialize_unit","serialize_unit","serialize_unit","serialize_unit","serialize_unit_struct","serialize_unit_struct","serialize_unit_struct","serialize_unit_struct","serialize_unit_variant","serialize_unit_variant","serialize_unit_variant","serialize_unit_variant","to_string","try_from","try_into","type_id","upcast","FromReflect","FromReflect","GetField","GetTupleStructField","Reflect","Reflect","ReflectDefault","ReflectDeserialize","ReflectSerialize","Struct","TupleStruct","apply","as_any","as_any_mut","as_reflect","as_reflect_mut","clone_dynamic","clone_dynamic","clone_value","debug","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","from_reflect","func","get_field","get_field","get_field_mut","get_field_mut","get_type_info","into_any","into_reflect","iter_fields","iter_fields","name_at","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","reflect_trait","serializable","set","take_from_reflect","type_name","ArraySerializer","Borrowed","DeserializeValue","EnumSerializer","ListSerializer","MapSerializer","Owned","ReflectSerializer","ReflectValueSerializer","Serializable","SerializationData","StructSerializer","TupleSerializer","TupleStructSerializer","TypeRegistrationDeserializer","TypedReflectDeserializer","TypedReflectSerializer","UntypedReflectDeserializer","array","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","enum_value","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_ignored_field","len","list","map","new","new","new","new","new","new","registry","registry","registry","registry","registry","registry","registry","registry","registry","registry","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","struct_value","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple","tuple_struct","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","value","ReflectDefault","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","downcast","from","from_type","into","into_any","into_any_arc","into_any_rc","into_sample","to_owned","try_from","try_into","type_id","upcast","GenericTypeInfoCell","NonGenericTypeInfoCell","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","get_or_insert","get_or_set","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new","new","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","Cleanup","CleanupFlush","Extract","ExtractCommands","ExtractSchedule","MainWorld","PhaseSort","PhaseSortFlush","Prepare","PrepareFlush","Queue","QueueFlush","Render","RenderApp","RenderFlush","RenderPlugin","RenderSet","after","ambiguous_with","ambiguous_with_all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_str","base_schedule","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","camera","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","color","default","default","define_atomic_id","deref","deref","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","extract_component","extract_resource","fmt","fmt","fmt","from","from","from","from","from","from","from_world","from_world","get_hash","get_hash","get_hash","get_param","globals","hash","hash","hash","in_base_set","in_default_base_set","in_set","init_state","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_base","is_system_type","main_graph","mesh","pipelined_rendering","prelude","primitives","render_asset","render_graph","render_phase","render_resource","render_resource_wrapper","renderer","run_if","settings","texture","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","view","wgpu_settings","AutoMax","AutoMin","Camera","CameraDriverNode","CameraPlugin","CameraProjection","CameraProjectionPlugin","CameraRenderGraph","CameraUpdateSystem","ComputedCameraValues","ExtractedCamera","Fixed","FixedHorizontal","FixedVertical","Image","Image","NormalizedRenderTarget","Orthographic","OrthographicProjection","Perspective","PerspectiveProjection","Projection","RenderTarget","RenderTargetInfo","ScalingMode","Viewport","Window","Window","WindowSize","after","ambiguous_with","ambiguous_with_all","apply","apply","apply","apply","apply","apply","apply","apply","apply","area","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","aspect_ratio","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","camera_system","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","computed","default","default","default","default","default","default","default","default","default","default","default","depth","deref","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_clone","dyn_eq","dyn_eq","dyn_hash","dyn_hash","eq","eq","equivalent","equivalent","erased_serialize","extract_cameras","far","far","far","far","far","far","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fov","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_projection_matrix","get_projection_matrix","get_projection_matrix","get_projection_matrix","get_render_target_info","get_texture_format","get_texture_view","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","hdr","in_base_set","in_default_base_set","in_set","index_of","index_of","index_of","index_of","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_active","is_base","is_system_type","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","logical_target_size","logical_viewport_rect","logical_viewport_size","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","ndc_to_world","near","near","new","new","normalize","order","order","partial_cmp","physical_position","physical_size","physical_size","physical_target_size","physical_target_size","physical_viewport_rect","physical_viewport_size","physical_viewport_size","projection_matrix","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","render_graph","run","run_if","scale","scale_factor","scaling_mode","serialize","set","set","set","set","set","set","set","set","set","set","target","target","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update","update","update","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","viewport","viewport","viewport_origin","viewport_to_world","viewport_to_world_2d","world_to_ndc","world_to_viewport","height","max_height","max_width","min_height","min_width","width","ALICE_BLUE","ANTIQUE_WHITE","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLUE","CRIMSON","CYAN","Char","Color","DARK_GRAY","DARK_GREEN","FUCHSIA","GOLD","GRAY","GREEN","HexColorError","HslRepresentation","Hsla","INDIGO","LIME_GREEN","LchRepresentation","Lcha","Length","MAROON","MIDNIGHT_BLUE","NAVY","NONE","OLIVE","ORANGE","ORANGE_RED","PINK","PURPLE","RED","Rgba","RgbaLinear","SALMON","SEA_GREEN","SILVER","SrgbColorSpace","TEAL","TOMATO","TURQUOISE","VIOLET","WHITE","YELLOW","YELLOW_GREEN","a","add","add","add_assign","add_assign","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_hsla","as_hsla_f32","as_lch_f32","as_linear_rgba_f32","as_linear_rgba_u32","as_reflect","as_reflect_mut","as_rgba","as_rgba_f32","as_rgba_linear","as_rgba_u32","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","create_from","default","deserialize","downcast","downcast","downcast","downcast","dyn_eq","eq","eq","equivalent","erased_serialize","field","field_at","field_at_mut","field_len","field_mut","fmt","fmt","fmt","from","from","from","from","from","from","from","from_reflect","from_world","g","get_type_info","get_type_registration","hex","hsl","hsl_to_nonlinear_srgb","hsla","in_current_span","index_of","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","iter_fields","lch_to_nonlinear_srgb","linear_to_nonlinear_srgb","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","name_at","nonlinear_srgb_to_hsl","nonlinear_srgb_to_lch","nonlinear_to_linear_srgb","provide","r","read_from","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","rgb","rgb_linear","rgb_u8","rgba","rgba_linear","rgba_u8","serialize","set","set_a","set_b","set_g","set_r","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","variant_index","variant_name","variant_type","with_a","with_b","with_g","with_r","write_into","alpha","alpha","alpha","alpha","blue","blue","chroma","green","green","hue","hue","lightness","lightness","red","red","saturation","ComponentUniforms","DynamicUniformIndex","ExtractComponent","ExtractComponent","ExtractComponentPlugin","Filter","Out","Query","UniformComponentPlugin","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","component_ids","default","default","default","deref","downcast","downcast","downcast","downcast","extract_component","extract_visible","from","from","from","from","from_components","from_world","from_world","from_world","get_components","index","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uniforms","upcast","upcast","upcast","upcast","ExtractResource","ExtractResource","ExtractResourcePlugin","Source","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","default","downcast","extract_resource","extract_resource","from","from_world","into","into_any","into_any_arc","into_any_rc","into_sample","try_from","try_into","type_id","upcast","GLOBALS_TYPE_HANDLE","GlobalsBuffer","GlobalsPlugin","GlobalsUniform","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","build","clone","clone_dynamic","clone_into","clone_type_data","clone_value","create_from","default","default","downcast","downcast","downcast","extract_resource","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from_world","from_world","get_field","get_field_mut","get_type_info","get_type_registration","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","iter_fields","name_at","read_from","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","set","size","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","write_into","node","CAMERA_DRIVER","ATTRIBUTE_COLOR","ATTRIBUTE_JOINT_INDEX","ATTRIBUTE_JOINT_WEIGHT","ATTRIBUTE_NORMAL","ATTRIBUTE_POSITION","ATTRIBUTE_TANGENT","ATTRIBUTE_UV_0","Float32","Float32x2","Float32x3","Float32x4","GenerateTangentsError","GpuBufferInfo","GpuMesh","INDEX_BUFFER_ASSET_INDEX","Indexed","Indices","InnerMeshVertexBufferLayout","InvalidVertexAttributeFormat","LineList","LineStrip","Mesh","MeshPlugin","MeshVertexAttribute","MeshVertexAttributeId","MeshVertexBufferLayout","MikktspaceError","MissingIndices","MissingVertexAttribute","MissingVertexAttributeError","NonIndexed","PointList","PrimitiveTopology","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","TriangleList","TriangleStrip","U16","U32","Uint16x2","Uint16x4","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnsupportedTopology","VERTEX_ATTRIBUTE_BUFFER_ID","VertexAttributeDescriptor","VertexAttributeValues","VertexFormatSize","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_float3","at_shader_location","attribute","attribute_ids","attribute_mut","attributes","attributes_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_info","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","compute_aabb","compute_flat_normals","contains","contains_attribute","count_vertices","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","duplicate_vertices","dyn_eq","dyn_eq","dyn_hash","dyn_hash","enum_variant_index","enum_variant_name","eq","eq","equivalent","equivalent","extract_asset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_tangents","get_bytes","get_hash","get_hash","get_index_buffer_bytes","get_layout","get_mesh_vertex_buffer_layout","get_size","get_vertex_buffer_data","hash","hash","id","id","in_current_span","in_current_span","indices","indices_mut","insert_attribute","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","iter","layout","layout","len","len","name","new","new","new","partial_cmp","prepare_asset","primitive_topology","primitive_topology","provide","provide","remove_attribute","set_indices","shader_location","skinning","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_buffer","buffer","count","index_format","vertex_count","SkinnedMesh","SkinnedMeshInverseBindposes","apply","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","default","deref","downcast","downcast","field","field_at","field_at_mut","field_len","field_mut","fmt","fmt","from","from","from","from_components","from_world","get_components","get_field","get_field_mut","get_type_info","get_type_registration","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","inverse_bindposes","iter_fields","joints","map_entities","name_at","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","set","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_name","type_name","type_uuid","upcast","upcast","race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","downcast","downcast","downcast","downcast","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_world","from_world","from_world","from_world","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","Lazy","OnceCell","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","clone_type_data","default","default","deref","deref_mut","downcast","downcast","dyn_eq","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","from_world","from_world","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_inner","into_sample","into_sample","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","upcast","upcast","wait","with_value","Lazy","OnceCell","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","downcast","downcast","dyn_eq","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","from_world","from_world","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_any","into_any","into_any_rc","into_any_rc","into_inner","into_sample","into_sample","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","upcast","upcast","with_value","MainToRenderAppSender","PipelinedRenderingPlugin","RenderExtractApp","RenderToMainAppReceiver","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","fmt","from","from","from","from","from_world","get_hash","hash","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","setup","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","Camera","Color","ComputedVisibility","ExtractSchedule","HIDDEN_IDENTITY","Hidden","Hsla","INHERITED_IDENTITY","Image","ImagePlugin","Inherited","Lcha","Mesh","Msaa","Off","Orthographic","OrthographicProjection","Perspective","PerspectiveProjection","Projection","Rgba","RgbaLinear","Sample4","Shader","SpatialBundle","Visibility","VisibilityBundle","Visible","area","as_any","as_any_mut","as_bind_group_shader_type","aspect_ratio","borrow","borrow_mut","computed","computed","computed","data","default","default_sampler","downcast","far","far","fmt","fov","from","from","from_transform","from_world","global_transform","hdr","into","into_any","into_any_arc","into_any_rc","into_sample","is_active","near","near","order","sampler_descriptor","scale","scaling_mode","target","texture_descriptor","texture_view_descriptor","transform","try_from","try_into","type_id","upcast","viewport","viewport_origin","visibility","visibility","alpha","alpha","alpha","alpha","blue","blue","chroma","green","green","hue","hue","lightness","lightness","red","red","saturation","Aabb","CascadesFrusta","CubemapFrusta","Frustum","Plane","Sphere","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","center","center","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","component_ids","component_ids","component_ids","component_ids","d","default","default","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_min_max","from_reflect","from_view_projection","from_view_projection_custom_far","from_world","from_world","from_world","from_world","from_world","from_world","frusta","frusta","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","half_extents","intersects_obb","intersects_obb","intersects_sphere","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","max","min","name_at","name_at","name_at","name_at","new","normal","normal_d","planes","radius","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","relative_radius","set","set","set","set","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","AssetPrepare","ExtractedAsset","ExtractedAssets","Param","PostAssetPrepare","PreAssetPrepare","PrepareAssetError","PrepareAssetLabel","PrepareNextFrameAssets","PreparedAsset","RenderAsset","RenderAssetPlugin","RenderAssets","RetryNextUpdate","after","ambiguous_with","ambiguous_with_all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","default","default","default","default","deref","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","dyn_clone","dyn_eq","dyn_hash","eq","equivalent","extract_asset","fmt","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","get_hash","hash","in_base_set","in_default_base_set","in_set","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_base","is_system_type","prepare_asset","run_if","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","with_prepare_asset_label","Buffer","Buffer","DoesNotExist","Edge","EdgeAlreadyExists","EdgeDoesNotExist","EdgeExistence","Edges","EmptyNode","Entity","Entity","Exists","GraphInputNode","INPUT_NODE_NAME","IN_VIEW","Id","Index","InputSlotError","InputSlotError","InvalidInputNodeSlot","InvalidNode","InvalidOutputNodeSlot","InvalidSlot","InvalidSlot","MismatchedInputSlotType","MismatchedNodeSlots","MismatchedSlotType","MismatchedSlotType","MissingInput","MissingSubGraph","Name","Name","Node","NodeEdge","NodeId","NodeInputSlotAlreadyOccupied","NodeLabel","NodeRunError","NodeState","OutputSlotError","OutputSlotError","RenderGraph","RenderGraphContext","RenderGraphError","RunGraphOnViewNode","RunSubGraph","RunSubGraphError","RunSubGraphError","Sampler","Sampler","SlotEdge","SlotInfo","SlotInfos","SlotLabel","SlotType","SlotValue","SubGraphHasNoInputs","TextureView","TextureView","UnconnectedNodeInputSlot","UnconnectedNodeOutputSlot","WrongNodeType","add_node","add_node_edge","add_slot_edge","add_sub_graph","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","edges","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","get_hash","get_input","get_input_buffer","get_input_entity","get_input_node","get_input_node","get_input_sampler","get_input_slot_edge","get_input_texture","get_node","get_node_id","get_node_mut","get_node_state","get_node_state_mut","get_output_node","get_output_slot_edge","get_slot","get_slot_index","get_slot_mut","get_sub_graph","get_sub_graph_mut","has_edge","has_input_edge","has_output_edge","hash","id","id","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","input","input","input","input_edges","input_info","input_node","input_slots","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is","is_empty","iter","iter_node_inputs","iter_node_outputs","iter_nodes","iter_nodes_mut","iter_sub_graphs","iter_sub_graphs_mut","len","name","name","name","new","new","new","new","new","node","node","node_mut","output","output","output_edges","output_info","output_slots","provide","provide","provide","provide","provide","remove_node","remove_node_edge","remove_slot_edge","remove_sub_graph","run","run","run","run","run_sub_graph","set_input","set_output","slot_type","slot_type","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_add_node_edge","try_add_slot_edge","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","validate_edge","validate_input_slots","validate_output_slots","input_index","input_node","input_node","output_index","output_node","output_node","actual","expected","label","actual","expected","label","input_node","input_slot","input_slot","input_slot","node","node","node","occupied_by_node","output_node","output_slot","output_slot","actual","expected","graph_name","graph_name","label","slot_index","slot_index","slot_name","AddRenderCommand","BatchResult","BatchedPhaseItem","CachedRenderPipelinePhaseItem","Draw","DrawFunctionId","DrawFunctions","DrawFunctionsInternal","Failure","IncompatibleItems","ItemWorldQuery","Param","PhaseItem","RenderCommand","RenderCommandResult","RenderCommandState","RenderPhase","SetItemPipeline","SortKey","Success","Success","TrackedRenderPass","ViewRangefinder3d","ViewWorldQuery","add","add","add_render_command","add_to_batch","add_with","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","batch","batch_phase_system","batch_range","batch_range_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_pipeline","clone","clone_into","clone_type_data","component_ids","default","default","distance","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw","draw_function","draw_functions","draw_indexed","draw_indexed_indirect","draw_indirect","dyn_eq","dyn_hash","entity","eq","equivalent","fmt","from","from","from","from","from","from","from","from","from","from","from_components","from_view_matrix","from_world","from_world","get_components","get_hash","get_id","get_mut","hash","id","indices","insert_debug_marker","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","items","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","new","new","pop_debug_group","prepare","prepare","prepare","push_debug_group","read","render","render","render","set_bind_group","set_blend_constant","set_camera_viewport","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","sort","sort","sort_key","sort_phase_system","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","write","ALL","ALPHA","ALPHA_BLENDING","Add","AddressMode","All","Always","AsBindGroup","AsBindGroup","AsBindGroupError","AsBindGroupShaderType","AsModuleDescriptorError","AsModuleDescriptorError","AssetPath","Astc","BLUE","Back","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbSfloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupId","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindGroupLayoutId","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","Bool","Buffer","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferBinding","BufferBindingType","BufferDescriptor","BufferId","BufferInitDescriptor","BufferSize","BufferSlice","BufferUsages","BufferVec","COLOR","COMPUTE","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CachedComputePipelineId","CachedPipeline","CachedPipelineState","CachedRenderPipelineId","Ccw","ClampToBorder","ClampToEdge","Clear","ColorTargetState","ColorWrites","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","Compute","ComputePass","ComputePassDescriptor","ComputePipeline","ComputePipeline","ComputePipelineDescriptor","ComputePipelineDescriptor","ComputePipelineId","Constant","CreateShaderModule","Cube","CubeArray","Custom","Cw","D1","D1","D2","D2","D2Array","D3","D3","Data","DecrementClamp","DecrementWrap","Default","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Dst","DstAlpha","DynamicStorageBuffer","DynamicUniformBuffer","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Equal","ErasedBindGroup","ErasedBindGroupLayout","ErasedBuffer","ErasedComputePipeline","ErasedPipelineLayout","ErasedRenderPipeline","ErasedSampler","ErasedShaderModule","ErasedSurfaceTexture","ErasedTexture","ErasedTextureView","Err","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FRAGMENT","Face","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","Fragment","FragmentState","Front","FrontFace","GREEN","Glsl","Glsl","GlslParse","Greater","GreaterEqual","Handle","IGNORE","INDEX","INDIRECT","INVALID","INVALID","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageDataLayout","ImageSubresourceRange","IncrementClamp","IncrementWrap","IndexFormat","Instance","Int","InvalidShaderDefComparisonValue","Invert","Keep","Key","Key","Key","Less","LessEqual","Line","LineList","LineStrip","Linear","Load","LoadOp","MAP_READ","MAP_WRITE","MapMode","Max","Min","MirrorRepeat","MismatchedImportFormat","MissingVertexAttribute","MultisampleState","NONE","Naga","Nearest","Never","NonFiltering","NotEnoughEndIfs","NotEqual","OVER","Ok","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrcAlpha","Operations","Origin3d","OwnedBindingResource","PREMULTIPLIED_ALPHA_BLENDING","Path","Pipeline","PipelineCache","PipelineCacheError","PipelineDescriptor","PipelineLayout","PipelineLayoutDescriptor","Point","PointList","PolygonMode","PreparedBindGroup","PrimitiveState","PrimitiveTopology","ProcessShaderError","ProcessShaderError","ProcessedShader","Queued","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RawComputePipelineDescriptor","RawFragmentState","RawRenderPipelineDescriptor","RawVertexBufferLayout","RawVertexState","Read","ReadOnly","ReadWrite","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPipeline","RenderPipeline","RenderPipelineDescriptor","RenderPipelineDescriptor","RenderPipelineId","Repeat","Replace","RetryNextUpdate","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SHADER_IMPORT_PROCESSOR","SHADER_SIZE","SHADER_SIZE","STORAGE","STORAGE_BINDING","Sampler","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerDescriptor","SamplerId","Shader","ShaderDefVal","ShaderFormatDoesNotSupportImports","ShaderFormatDoesNotSupportShaderDefs","ShaderId","ShaderImport","ShaderImportNotYetAvailable","ShaderImportProcessor","ShaderImports","ShaderLoader","ShaderModule","ShaderModuleDescriptor","ShaderNotLoaded","ShaderProcessor","ShaderRef","ShaderReflectError","ShaderReflectError","ShaderReflection","ShaderSize","ShaderSource","ShaderStage","ShaderStages","ShaderType","ShaderType","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Source","SpecializedComputePipeline","SpecializedComputePipelines","SpecializedMeshPipeline","SpecializedMeshPipelineError","SpecializedMeshPipelines","SpecializedRenderPipeline","SpecializedRenderPipelines","SpirV","SpirV","SpirV","SpirVConversion","SpirVParse","Src","SrcAlpha","SrcAlphaSaturated","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageBuffer","StorageTexture","StorageTextureAccess","Subtract","SurfaceTexture","TEXTURE_BINDING","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureId","TextureSampleType","TextureUsages","TextureView","TextureView","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","TextureViewId","TextureViewValue","TooManyEndIfs","TriangleList","TriangleStrip","UInt","UNIFORM","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","Uniform","UniformBuffer","UnknownShaderDef","UnknownShaderDefOperator","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnresolvedImport","VERTEX","VERTEX","VERTEX_FRAGMENT","Validation","Vertex","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","WgpuAdapterInfo","WgpuFeatures","WgpuLimits","Wgsl","Wgsl","Wgsl","WgslConversion","WgslParse","Write","WriteOnly","ZERO","Zero","Zero","add_srgb_suffix","add_usages","add_usages","add_usages","add_usages","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","alpha","alpha_to_coverage_enabled","anisotropy_clamp","array_layer_count","array_layer_count","array_stride","array_stride","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","aspect","aspect","aspect","assert_uniform_compat","attributes","attributes","back","backend","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin_compute_pass","begin_pipeline_statistics_query","begin_render_pass","bevy_default","bias","bind_group","bind_group_layout","bind_group_layouts","binding","binding","binding","binding","binding","binding","bindings","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffers","buffers","bytes_per_row","capacity","clamp","clear","clear","clear","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","cmp","color","color_attachments","compare","compare","compatible_texture_dimension","complement","complement","complement","complement","conservative","constant","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contents","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","create_view","cull_mode","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","describe","descriptor","deserialize","deserialize","device","device_type","difference","difference","difference","difference","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","empty","empty","encase","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","entry_point","entry_point","entry_point","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","extensions","fail_op","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","fragment","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_glsl","from_iter","from_iter","from_iter","from_iter","from_spirv","from_vertex_formats","from_wgsl","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","front","front_face","get","get","get_binding","get_compute_pipeline","get_compute_pipeline_descriptor","get_compute_pipeline_state","get_glsl_source","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_imports","get_imports_from_str","get_label","get_label","get_label","get_label","get_label","get_module_descriptor","get_mut","get_mut","get_render_pipeline","get_render_pipeline_descriptor","get_render_pipeline_state","get_size","get_spirv","get_wgsl","get_wgsl_source","has_dynamic_offset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","id","id","id","id","id","id","id","id","id","import_path","imports","in_current_span","in_current_span","in_current_span","in_current_span","in_current_span","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_all","is_all","is_all","is_all","is_depth_enabled","is_depth_read_only","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_read_only","is_read_only","is_stencil_read_only","is_strip","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","layout","layout","len","len","len","load","load","lod_max_clamp","lod_min_clamp","mag_filter","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_size","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","module","module_info","multisample","multisample","multiview","name","needs_ref_value","needs_ref_value","needs_ref_value","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","not","not","not","not","offset","offset","offset","offset","operation","ops","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","pipelines","pixel_size","polygon_mode","pop_debug_group","pop_debug_group","primitive","primitive","process","process_queue","provide","provide","provide","provide","provide","push","push","push","push_constant_ranges","push_debug_group","push_debug_group","queue_compute_pipeline","queue_render_pipeline","read_mask","reflect","remove","remove","remove","remove","remove_srgb_suffix","reserve","resolve_query_set","resolve_target","resource","resource_macros","rows_per_image","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set_bind_group","set_import_path","set_label","set_label","set_label","set_label","set_label","set_pipeline","set_push_constants","shader","shader","shader","shader_defs","shader_defs","shader_defs","shader_location","size","size","size","slice","slope_scale","source","source","source","source","source","specialize","specialize","specialize","specialize","specialize","specialize","src_factor","state","stencil","stencil_ops","step_mode","step_mode","store","strip_index_format","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","take_surface_texture","targets","targets","texture","to_2d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_tagged","toggle","toggle","toggle","toggle","topology","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","try_unwrap","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_uuid","unclipped_depth","union","union","union","union","unmap","unwrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","uses_constant","value","value_as_string","vendor","vertex","vertex","view","view","visibility","volume","width","with_import_path","write_buffer","write_buffer","write_buffer","write_buffer","write_buffer","write_mask","write_mask","write_timestamp","write_timestamp","x","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","expected","operator","shader_def_name","shader_def_name","value","block","channel","filterable","texture","view","ArrayLength","CalculateSizeFor","DynamicStorageBuffer","DynamicUniformBuffer","SHADER_SIZE","ShaderSize","ShaderType","ShaderType","StorageBuffer","UniformBuffer","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","assert_uniform_compat","assert_uniform_compat","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_size_for","clone","clone_into","clone_type_data","cmp","create","create","create","create","create_from","default","downcast","downcast","downcast","downcast","downcast","dyn_eq","eq","equivalent","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","impl_matrix","impl_rts_array","impl_vector","impl_wrapper","internal","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_inner","into_sample","into_sample","into_sample","into_sample","into_sample","matrix","min_size","min_size","new","new","new","new","new_with_alignment","new_with_alignment","partial_cmp","read","read","read","read","read_from","rts_array","set_offset","set_offset","size","size","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vector","write","write","write","write","write_into","AlignmentValue","BufferMut","BufferRef","BufferTooSmall","CreateFrom","EnlargeError","Error","ReadContext","ReadFrom","Reader","Result","SizeValue","WriteContext","WriteInto","Writer","advance","advance","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","create_from","ctx","ctx","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_next_power_of_two_size","get","get","in_current_span","in_current_span","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_aligned","len","max","mul","new","new","new","new","padding_needed_for","provide","provide","read","read","read_from","remaining","round_up","round_up_size","rts_array_length","rts_array_max_el_to_read","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_enlarge","try_enlarge","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","write","write","write_into","expected","found","AsMutMatrixParts","AsRefMatrixParts","FromMatrixParts","MatrixScalar","as_mut_parts","as_ref_parts","from_parts","impl_matrix","Length","Truncate","impl_rts_array","length","truncate","AsMutVectorParts","AsRefVectorParts","FromVectorParts","VectorScalar","as_mut_parts","as_ref_parts","from_parts","impl_vector","define_atomic_id","render_resource_wrapper","render_resource_wrapper","EmptyNodeOutputSlot","ErasedRenderDevice","MismatchedInputCount","MismatchedInputSlotType","MissingInput","NodeRunError","RenderAdapter","RenderAdapterInfo","RenderContext","RenderDevice","RenderGraphRunnerError","RenderInstance","RenderQueue","add_command_buffer","align_copy_bytes_per_row","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","begin_tracked_render_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","command_encoder","configure_surface","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_with_data","create_command_encoder","create_compute_pipeline","create_pipeline_layout","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_texture","create_texture_with_data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","features","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_supported_read_only_binding_type","in_current_span","initialize_renderer","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","limits","map_buffer","new","new","poll","provide","render_device","render_system","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","wgpu_device","actual","expected","graph_name","label","node_name","slot_count","slot_index","slot_index","slot_index","slot_name","slot_name","type_name","value_count","ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","BROWSER_WEBGPU","BUFFER_BINDING_ARRAY","Backends","CLEAR_TEXTURE","CONSERVATIVE_RASTERIZATION","Compatibility","DEPTH32FLOAT_STENCIL8","DEPTH_CLIP_CONTROL","DX11","DX12","Dx12Compiler","Dxc","Functionality","Fxc","GL","HighPerformance","INDIRECT_FIRST_INSTANCE","LowPower","MAPPABLE_PRIMARY_BUFFERS","METAL","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PRIMARY","PUSH_CONSTANTS","PowerPreference","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_FLOAT16","SHADER_FLOAT64","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE_RESOURCE_BINDING_ARRAY","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_ASTC_LDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TIMESTAMP_QUERY","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","VERTEX_ATTRIBUTE_64BIT","VERTEX_WRITABLE_STORAGE","VULKAN","WRITE_TIMESTAMP_INSIDE_PASSES","WebGL2","WgpuFeatures","WgpuLimits","WgpuSettings","WgpuSettingsPriority","all","all","all_native_mask","all_webgpu_mask","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","backends","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_limits","check_limits_with_fail_fn","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","complement","complement","constrained_limits","contains","contains","contains_invalid_bits","contains_invalid_bits","default","default","default","default","default","device_label","difference","difference","disabled_features","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","dx12_shader_compiler","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extend","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_world","from_world","from_world","from_world","from_world","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_all","is_all","is_empty","is_empty","limits","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","not","not","partial_cmp","partial_cmp","power_preference","priority","remove","remove","serialize","serialize","serialize","serialize","set","set","settings_priority_from_env","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","using_alignment","using_resolution","dxc_path","dxil_path","ASTC_LDR","Avif","BC","Basis","BevyDefault","Bmp","CachedTexture","CompressedImageFormats","DEFAULT_IMAGE_HANDLE","DataFormat","Dds","Default","DefaultImageSampler","Descriptor","ETC2","Etc1s","Extension","FallbackImage","FallbackImageCubemap","FallbackImageDepthCache","FallbackImageMsaaCache","FallbackImagesDepth","FallbackImagesMsaa","Farbfeld","FileTextureError","FormatRequiresTranscodingError","Gif","GpuImage","Hdr","HdrTextureLoader","Ico","Image","ImageError","ImageFormat","ImagePlugin","ImageSampler","ImageTextureLoader","ImageType","InvalidData","InvalidImageExtension","InvalidImageMimeType","Jpeg","Ktx2","MimeType","NONE","Png","Pnm","R8UnormSrgb","Rg","Rg8UnormSrgb","Rgb","Rgb8","Rgba","Rrr","Rrrg","SAMPLER_ASSET_INDEX","SuperCompressionNotSupported","SuperDecompressionError","TEXTURE_ASSET_INDEX","TextureCache","TextureError","TextureFormatPixelInfo","Tga","Tiff","TranscodeError","TranscodeFormat","Uastc","UnsupportedTextureFormat","Volume","WebP","all","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_image_crate_format","as_reflect","as_reflect_mut","aspect_2d","bevy_default","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","cmp","complement","contains","convert","data","dds_buffer_to_image","dds_format_to_texture_format","default","default","default","default","default","default","default","default","default_linear","default_nearest","default_sampler","default_view","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","empty","eq","equivalent","extend","extensions","extensions","extract_asset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_buffer","from_dynamic","from_extension","from_features","from_iter","from_mime_type","from_reflect","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_hash","get_param","get_param","get_transcoded_formats","get_type_info","get_type_registration","hash","image_for_samplecount","image_for_samplecount","in_current_span","in_current_span","init_state","init_state","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_all","is_compressed","is_empty","ktx2_buffer_to_image","ktx2_dfd_to_texture_format","ktx2_format_to_texture_format","ktx2_get_texture_format","linear","linear_descriptor","load","load","nearest","nearest_descriptor","new","new_archetype","new_archetype","new_fill","not","partial_cmp","pixel_size","prepare_asset","provide","provide","reflect_mut","reflect_owned","reflect_path","reflect_path_mut","reflect_ref","reinterpret_size","reinterpret_stacked_2d_as_array","remove","resize","sampler","sampler_descriptor","set","set","size","size","source","sub","sub_assign","supports","symmetric_difference","texture","texture","texture_descriptor","texture_format","texture_view","texture_view_descriptor","to_image_format","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_dynamic","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","type_name","type_uuid","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_texture_cache_system","volume","CalculateBounds","CalculateBoundsFlush","CheckVisibility","ComputedVisibility","ExtractedView","ExtractedWindow","ExtractedWindows","HIDDEN","Hidden","Inherited","Layer","Msaa","NoFrustumCulling","NonSendMarker","Off","PostProcessWrite","Prepare","PrepareUniforms","RenderLayers","Sample4","TEXTURE_FORMAT_HDR","TOTAL_LAYERS","UpdateOrthographicFrusta","UpdatePerspectiveFrusta","UpdateProjectionFrusta","VIEW_TYPE_HANDLE","ViewDepthTexture","ViewPlugin","ViewSet","ViewTarget","ViewUniform","ViewUniformOffset","ViewUniforms","Visibility","VisibilityBundle","VisibilityPlugin","VisibilityPropagate","VisibilitySystems","Visible","VisibleEntities","WindowRenderPlugin","WindowSurfaces","WindowSystem","after","after","after","all","alpha_mode","ambiguous_with","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","ambiguous_with_all","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","before","before","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","calculate_bounds","check_visibility","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","computed","create_from","default","default","default","default","default","default","default","default","default","default","deref","deref_mut","destination","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_clone","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","entities","entity","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_resource","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_iter","from_layers","from_reflect","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_color_attachment","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_unsampled_color_attachment","handle","hash","hash","hash","hdr","in_base_set","in_base_set","in_base_set","in_default_base_set","in_default_base_set","in_default_base_set","in_set","in_set","in_set","index_of","index_of","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","into_system_set","is_base","is_base","is_base","is_empty","is_hdr","is_system_type","is_system_type","is_system_type","is_visible","is_visible_in_hierarchy","is_visible_in_view","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","layer","len","main_texture","main_texture_format","main_texture_other","name_at","name_at","name_at","name_at","none","offset","out_texture","out_texture_format","partial_cmp","partial_cmp","physical_height","physical_width","post_process_write","prepare_windows","present_mode","present_mode_changed","primary","projection","rangefinder3d","read_from","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","run_if","run_if","run_if","sampled_main_texture","samples","set","set","set","set","set","set_visible_in_view","size","size_changed","source","swap_chain_texture","swap_chain_texture_format","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","uniforms","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_frusta","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","view","view_projection","viewport","visibility","visibility","window","windows","with","without","write_into","CalculateBounds","CalculateBoundsFlush","CheckVisibility","ComputedVisibility","Hidden","Inherited","Layer","NoFrustumCulling","RenderLayers","UpdateOrthographicFrusta","UpdatePerspectiveFrusta","UpdateProjectionFrusta","Visibility","VisibilityBundle","VisibilityPlugin","VisibilityPropagate","VisibilitySystems","Visible","VisibleEntities","calculate_bounds","check_visibility","computed","entities","update_frusta","visibility","ExtractedWindow","ExtractedWindows","NonSendMarker","Prepare","WindowRenderPlugin","WindowSurfaces","WindowSystem","alpha_mode","entity","handle","physical_height","physical_width","prepare_windows","present_mode","present_mode_changed","primary","size_changed","swap_chain_texture","swap_chain_texture_format","windows","DynamicEntity","DynamicScene","DynamicSceneBuilder","DynamicSceneBundle","InstanceId","InstanceInfo","NonExistentRealScene","NonExistentScene","Scene","SceneBundle","SceneInstance","SceneLoader","ScenePlugin","SceneSpawnError","SceneSpawner","UnregisteredComponent","UnregisteredType","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone_into","clone_type_data","clone_with","component_ids","components","computed_visibility","computed_visibility","default","default","default","default","default","deref","deref_mut","despawn","despawn_instance","despawn_instance_sync","despawn_queued_instances","despawn_queued_scenes","despawn_sync","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","entities","entity","entity_map","eq","equivalent","extensions","extract_entities","extract_entity","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_dynamic_scene","from_scene","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world_with_type_registry","get_components","get_hash","global_transform","global_transform","hash","in_current_span","instance_is_ready","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_instance_entities","load","new","prelude","provide","remove_empty_entities","scene","scene","scene_spawner","scene_spawner_system","serde","serialize_ron","serialize_ron","spawn","spawn_as_child","spawn_dynamic","spawn_dynamic_as_child","spawn_dynamic_sync","spawn_queued_scenes","spawn_sync","to_owned","to_string","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_uuid","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_spawned_scenes","visibility","visibility","world","write_to_world","write_to_world_with","write_to_world_with","handle","handle","type_name","type_name","DynamicScene","DynamicSceneBuilder","DynamicSceneBundle","Scene","SceneBundle","SceneSpawner","computed_visibility","computed_visibility","entities","global_transform","global_transform","scene","scene","transform","transform","visibility","visibility","world","ComponentDeserializer","ComponentsSerializer","ENTITY_FIELD_COMPONENTS","ENTITY_STRUCT","EntitiesSerializer","EntitySerializer","SCENE_ENTITIES","SCENE_STRUCT","SceneDeserializer","SceneEntitiesDeserializer","SceneEntityDeserializer","SceneSerializer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","components","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","entities","entity","erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","new","registry","registry","registry","registry","registry","scene","serialize","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_registry","type_registry","type_registry","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","Anchor","BottomCenter","BottomLeft","BottomRight","COLORED","COLOR_MATERIAL_SHADER_HANDLE","Center","CenterLeft","CenterRight","ColorMaterial","ColorMaterialFlags","ColorMaterialPlugin","ColorMaterialUniform","ColorMesh2dBundle","Custom","DEBAND_DITHER","DEBAND_DITHER","DrawMesh2d","DrawSprite","DrawSpriteBatch","DynamicTextureAtlasBuilder","ExtractSprites","ExtractedSprite","ExtractedSprites","HDR","HDR","ImageBindGroups","MESH2D_BINDINGS_HANDLE","MESH2D_FUNCTIONS_HANDLE","MESH2D_SHADER_HANDLE","MESH2D_TYPES_HANDLE","MESH2D_VERTEX_OUTPUT","MESH2D_VIEW_BINDINGS_HANDLE","MESH2D_VIEW_TYPES_HANDLE","MSAA_RESERVED_BITS","MSAA_RESERVED_BITS","Material2d","Material2dKey","Material2dPipeline","Material2dPlugin","MaterialMesh2dBundle","Mesh2dBindGroup","Mesh2dHandle","Mesh2dPipeline","Mesh2dPipelineKey","Mesh2dRenderPlugin","Mesh2dUniform","Mesh2dViewBindGroup","NONE","NONE","NONE","NotEnoughSpace","PRIMITIVE_TOPOLOGY_RESERVED_BITS","PrepareNextFrameMaterials","PreparedMaterial2d","RenderMaterials2d","SPRITE_SHADER_HANDLE","SetMaterial2dBindGroup","SetMesh2dBindGroup","SetMesh2dViewBindGroup","SetSpriteTextureBindGroup","SetSpriteViewBindGroup","Sprite","SpriteAssetEvents","SpriteBatch","SpriteBundle","SpriteMeta","SpritePipeline","SpritePipelineKey","SpritePlugin","SpriteSheetBundle","SpriteSystem","TEXTURE","TONEMAP_IN_SHADER","TONEMAP_IN_SHADER","TextureAtlas","TextureAtlasBuilder","TextureAtlasBuilderError","TextureAtlasBuilderResult","TextureAtlasSprite","TopCenter","TopLeft","TopRight","UNINITIALIZED","WrongFormat","add_texture","add_texture","add_texture","after","all","all","all","ambiguous_with","ambiguous_with_all","anchor","anchor","anchor","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_vec","atlas_allocator","auto_format_conversion","before","bind_group","bind_group_data","bind_group_layout","bindings","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","cmp","collide_aabb","color","color","color","color","color","complement","complement","complement","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","computed_visibility","computed_visibility","computed_visibility","contains","contains","contains","create_from","create_from","custom_size","custom_size","custom_size","debug","debug","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref_mut","difference","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dummy_white_gpu_image","dummy_white_gpu_image","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","empty","empty","empty","entity","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extract_mesh2d","extract_sprite_events","extract_sprites","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","finish","flags","flags","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","fragment_shader","fragment_shader","fragment_shader","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_colored","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_grid","from_hdr","from_hdr","from_iter","from_iter","from_iter","from_msaa_samples","from_msaa_samples","from_primitive_topology","from_reflect","from_reflect","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_image_texture","get_texture_index","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","global_transform","global_transform","global_transform","hash","hash","hash","hash","hash","image_handle_id","images","in_base_set","in_current_span","in_default_base_set","in_set","index","index_of","initial_size","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","inverse_transpose_model","is_all","is_all","is_all","is_base","is_empty","is_empty","is_empty","is_empty","is_system_type","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","key","len","material","material2d_layout","max_size","mesh","mesh2d_pipeline","mesh_key","mesh_layout","msaa_samples","msaa_samples","name_at","name_at","name_at","name_at","name_at","new","new","new_empty","not","not","not","padding","partial_cmp","partial_cmp","partial_cmp","prelude","primitive_topology","provide","queue_material2d_meshes","queue_mesh2d_bind_group","queue_mesh2d_view_bind_groups","queue_sprites","read_from","read_from","rect","rect","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","remove","remove","remove","render","render","render","render","render","render","render","run_if","set","set","set","set","set","set","set","set","set","size","size","size","specialize","specialize","specialize","specialize","sprite","sprite","sprites","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","texture","texture","texture","texture_atlas","texture_handles","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","transform","transform","transform","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","union","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value","variant_index","variant_name","variant_type","vertex_shader","vertex_shader","view_layout","visibility","visibility","visibility","write_into","write_into","Bottom","Collision","Inside","Left","Right","Top","as_any","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","collide","downcast","dyn_eq","eq","equivalent","fmt","from","into","into_any","into_any_arc","into_any_rc","into_sample","try_from","try_into","type_id","upcast","ColorMaterial","ColorMesh2dBundle","Sprite","SpriteBundle","SpriteSheetBundle","TextureAtlas","TextureAtlasBuilder","TextureAtlasSprite","anchor","anchor","color","color","color","computed_visibility","computed_visibility","custom_size","custom_size","flip_x","flip_x","flip_y","flip_y","global_transform","global_transform","index","rect","size","sprite","sprite","texture","texture","texture","texture_atlas","texture_handles","textures","transform","transform","visibility","visibility","AsyncComputeTaskPool","ComputeTaskPool","IoTaskPool","ParallelIterator","ParallelSlice","ParallelSliceMut","Scope","Task","TaskPool","TaskPoolBuilder","ThreadExecutor","ThreadExecutorTicker","all","any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","available_parallelism","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","by_ref","cancel","chain","cloned","collect","copied","count","cycle","default","default","default","deref","deref","deref","detach","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","filter","filter_map","flat_map","flatten","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","for_each","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","fuse","get","get","get","init","init","init","inspect","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_future","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_finished","last","map","max","max_by","max_by_key","min","min_by","min_by_key","new","new","new","new","next_batch","nth","num_threads","on_thread_destroy","on_thread_spawn","par_chunk_map","par_chunk_map_mut","par_splat_map","par_splat_map_mut","partition","poll","position","prelude","product","scope","scope_with_executor","size_hint","spawn","spawn","spawn","spawn_local","spawn_on_external","spawn_on_scope","stack_size","sum","thread_name","thread_num","tick","tick_global_task_pools_on_main_thread","ticker","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_tick","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","with_local_executor","AsyncComputeTaskPool","ComputeTaskPool","IoTaskPool","ParallelIterator","ParallelSlice","ParallelSliceMut","all","any","by_ref","chain","cloned","collect","copied","count","cycle","filter","filter_map","flat_map","flatten","fold","for_each","fuse","inspect","last","map","max","max_by","max_by_key","min","min_by","min_by_key","next_batch","nth","par_chunk_map","par_chunk_map_mut","par_splat_map","par_splat_map_mut","partition","position","product","size_hint","sum","AnyCharacter","BottomToTop","BreakLineOn","Center","FailedToAddGlyph","Font","FontAtlas","FontAtlasSet","FontAtlasWarning","FontLoader","GlyphAtlasInfo","GlyphBrush","Left","NoSuchFont","PositionedGlyph","Right","SubpixelOffset","Text","Text2dBounds","Text2dBundle","TextAlignment","TextError","TextLayoutInfo","TextPipeline","TextPlugin","TextSection","TextSettings","TextStyle","TopToBottom","UNBOUNDED","WordBoundary","YAxisOrientation","add_font","add_glyph","add_glyph_to_atlas","alignment","allow_dynamic_font_size","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","atlas_info","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","byte_index","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","color","component_ids","component_ids","component_ids","compute_glyphs","computed_visibility","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dynamic_texture_atlas_builder","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extensions","extract_text2d_sprite","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","font","font_size","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_section","from_sections","from_style","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_glyph_atlas_info","get_glyph_index","get_hash","get_hash","get_hash","get_or_insert_font_id","get_outlined_glyph_texture","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","global_transform","glyph_index","glyph_to_atlas_index","glyphs","has_glyph","has_glyph","hash","hash","hash","in_current_span","index_of","index_of","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","linebreak_behaviour","load","max_font_atlases","name_at","name_at","name_at","name_at","name_at","name_at","new","new","num_font_atlases","position","prelude","process_glyphs","provide","queue_text","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","scale_value","section_index","sections","serialize","serialize","set","set","set","set","set","set","size","size","size","style","text","text_2d_bounds","text_anchor","texture_atlas","texture_atlas","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_text2d_layout","value","variant_index","variant_index","variant_name","variant_name","variant_type","variant_type","visibility","with_alignment","Center","FailedToAddGlyph","Font","Left","NoSuchFont","Right","Text","Text2dBundle","TextAlignment","TextError","TextSection","TextStyle","alignment","color","computed_visibility","font","font","font_size","global_transform","linebreak_behaviour","sections","style","text","text_2d_bounds","text_anchor","transform","value","visibility","Automatic","ManualDuration","ManualInstant","Once","Repeating","Stopwatch","Time","TimePlugin","TimeReceiver","TimeSender","TimeSystem","TimeUpdateStrategy","Timer","TimerMode","after","ambiguous_with","ambiguous_with_all","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","before","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","create_time_channels","default","default","default","default","default","default","delta","delta_seconds","delta_seconds_f64","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","duration","dyn_clone","dyn_eq","dyn_eq","dyn_hash","dyn_hash","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds_f64","elapsed_seconds_wrapped","elapsed_seconds_wrapped_f64","elapsed_secs","elapsed_secs","elapsed_secs_f64","elapsed_wrapped","eq","eq","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","field","field","field","field","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","finished","first_update","fixed_timestep","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_reflect","from_reflect","from_reflect","from_reflect","from_seconds","from_world","from_world","from_world","from_world","from_world","from_world","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","in_base_set","in_default_base_set","in_set","index_of","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","is_base","is_paused","is_system_type","iter_fields","iter_fields","iter_fields","iter_fields","just_finished","last_update","mode","name_at","name_at","name_at","name_at","new","new","new","pause","pause","pause","paused","paused","percent","percent_left","prelude","raw_delta","raw_delta_seconds","raw_delta_seconds_f64","raw_elapsed","raw_elapsed_seconds","raw_elapsed_seconds_f64","raw_elapsed_seconds_wrapped","raw_elapsed_seconds_wrapped_f64","raw_elapsed_wrapped","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","relative_speed","relative_speed_f64","remaining","remaining_secs","reset","reset","run_if","serialize","serialize","serialize","set","set","set","set","set_duration","set_elapsed","set_elapsed","set_mode","set_relative_speed","set_relative_speed_f64","set_wrap_period","startup","tick","tick","times_finished_this_tick","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","unpause","unpause","unpause","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_with_instant","variant_index","variant_name","variant_type","wrap_period","FixedTime","FixedUpdateError","NotEnoughTime","accumulated","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","default","downcast","downcast","expend","fmt","fmt","fmt","from","from","from_world","in_current_span","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new","new_from_secs","period","provide","run_fixed_update_schedule","tick","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","accumulated","period","FixedTime","Once","Repeating","Time","Timer","TimerMode","period","IDENTITY","TransformBundle","TransformPlugin","TransformPropagate","TransformSystem","after","ambiguous_with","ambiguous_with_all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","before","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","commands","components","default","default","downcast","downcast","downcast","dyn_clone","dyn_eq","dyn_hash","eq","equivalent","fmt","fmt","from","from","from","from","from_transform","from_world","from_world","get_hash","global","hash","in_base_set","in_default_base_set","in_set","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_config","into_sample","into_sample","into_sample","into_system_set","is_base","is_system_type","local","run_if","systems","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","AddChildInPlace","BuildChildrenTransformExt","RemoveParentInPlace","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","child","child","downcast","downcast","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","parent","remove_parent_in_place","set_parent_in_place","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","write","write","GlobalTransform","IDENTITY","IDENTITY","Transform","affine","apply","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","back","back","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_type_data","clone_type_data","clone_value","clone_value","component_ids","component_ids","compute_affine","compute_matrix","compute_matrix","compute_transform","default","default","deserialize","deserialize","down","down","downcast","downcast","eq","eq","erased_serialize","erased_serialize","field","field","field_at","field_at_mut","field_len","field_len","field_mut","field_mut","fmt","fmt","forward","forward","from","from","from","from","from","from","from_components","from_components","from_matrix","from_reflect","from_reflect","from_rotation","from_scale","from_translation","from_world","from_world","from_xyz","get_components","get_components","get_field","get_field","get_field_mut","get_field_mut","get_type_info","get_type_info","get_type_registration","get_type_registration","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_sample","into_sample","iter_fields","iter_fields","left","left","local_x","local_y","local_z","look_at","look_to","looking_at","looking_to","mul","mul","mul","mul","mul","mul_transform","mul_transform","name_at","radius_vec3a","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reparented_to","right","right","rotate","rotate_around","rotate_axis","rotate_local","rotate_local_axis","rotate_local_x","rotate_local_y","rotate_local_z","rotate_x","rotate_y","rotate_z","rotation","scale","serialize","serialize","set","set","to_owned","to_owned","to_scale_rotation_translation","transform_point","transform_point","translate_around","translation","translation","translation_vec3a","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","type_name","type_name","up","up","upcast","upcast","with_rotation","with_scale","with_translation","propagate_transforms","sync_simple_transforms","AUTO","Absolute","AlignContent","AlignItems","AlignSelf","Auto","Auto","BackgroundColor","Baseline","Baseline","Block","CalculatedClip","CalculatedSize","Center","Center","Center","Center","Clicked","Column","ColumnReverse","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DEFAULT","DefaultCameraView","Direction","Display","DrawUi","DrawUiNode","ExtractNode","ExtractedUiNode","ExtractedUiNodes","Flex","Flex","FlexDirection","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexError","FlexStart","FlexStart","FlexStart","FlexStart","FlexSurface","FlexWrap","Focus","FocusPolicy","Global","Hidden","Hovered","IN_VIEW","Inherit","Interaction","InvalidHierarchy","JustifyContent","LeftToRight","Local","NoWrap","Node","NodeQuery","NodeQueryItem","NodeQueryReadOnly","NodeQueryReadOnlyItem","NonEvaluateable","NonIdenticalVariants","None","None","Overflow","Pass","Percent","PositionType","Px","Relative","RelativeCursorPosition","RenderUiSystem","RightToLeft","Row","RowReverse","SetUiTextureBindGroup","SetUiViewBindGroup","Size","SpaceAround","SpaceAround","SpaceBetween","SpaceBetween","SpaceEvenly","Stack","Stretch","Stretch","Stretch","Style","TaffyError","TransparentUi","UI_SHADER_HANDLE","UNDEFINED","UiBatch","UiImage","UiImageBindGroups","UiMeta","UiPassNode","UiPipeline","UiPipelineKey","UiPlugin","UiRect","UiScale","UiStack","UiSystem","Undefined","Val","ValArithmeticError","Visible","Wrap","WrapReverse","ZIndex","after","after","align_content","align_items","align_self","all","all","ambiguous_with","ambiguous_with","ambiguous_with_all","ambiguous_with_all","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","aspect_ratio","atlas_size","before","before","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","build","build_ui_render","cached_pipeline","camera_config","clip","clip","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fetch","clone_fetch","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","color","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","compute_window_layouts","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","display","div","div","div_assign","div_assign","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw_function","draw_function","draw_ui_graph","dyn_clone","dyn_clone","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","entity","entity","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","evaluate","extract_default_ui_camera_view","extract_text_uinodes","extract_uinodes","fetch","fetch","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_fetch","filter_fetch","flex_basis","flex_direction","flex_grow","flex_node_system","flex_shrink","flex_wrap","flip_x","flip_x","flip_y","flip_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","gap","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_layout","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","hash","hash","hash","hdr","height","height","horizontal","image","image","image_layout","in_base_set","in_base_set","in_current_span","in_default_base_set","in_default_base_set","in_set","in_set","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","init_fetch","init_fetch","init_state","init_state","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_config","into_config","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system_set","into_system_set","is_base","is_base","is_system_type","is_system_type","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","justify_content","left","left","margin","matches_component_set","matches_component_set","max_size","min_size","mouse_over","mul","mul","mul_assign","mul_assign","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","new","new","node","node_bundles","normalized","overflow","padding","pipeline","position","position_type","prepare_uinodes","preserve_aspect_ratio","provide","queue_uinodes","range","rect","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","remove_entities","render","render","render","right","right","run","run_if","run_if","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_archetype","set_archetype","set_table","set_table","set_window_children","shrink","shrink","size","size","size","sort_key","sort_key","specialize","stack_index","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","top","top","transform","try_add","try_add_assign","try_add_assign_with_size","try_add_with_size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_remove_children","try_sub","try_sub_assign","try_sub_assign_with_size","try_sub_with_size","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","ui_focus_system","uinodes","uinodes","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update_archetype_component_access","update_archetype_component_access","update_children","update_component_access","update_component_access","update_window","upsert_leaf","upsert_node","values","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","vertical","view_layout","widget","width","width","z","UiCameraConfig","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","component_ids","default","downcast","extract_component","from","from_components","from_world","get_components","into","into_any","into_any_arc","into_any_rc","into_sample","show_ui","to_owned","try_from","try_into","type_id","upcast","NAME","input","node","VIEW_ENTITY","UI_PASS","UI_PASS_DRIVER","ButtonBundle","ImageBundle","NodeBundle","TextBundle","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","background_color","background_color","background_color","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","calculated_size","calculated_size","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","computed_visibility","computed_visibility","computed_visibility","computed_visibility","default","default","default","default","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","focus_policy","focus_policy","focus_policy","focus_policy","from","from","from","from","from_section","from_sections","from_world","from_world","from_world","from_world","global_transform","global_transform","global_transform","global_transform","image","image","interaction","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","node","node","node","node","style","style","style","style","text","to_owned","to_owned","to_owned","to_owned","transform","transform","transform","transform","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","visibility","visibility","visibility","visibility","with_style","with_text_alignment","z_index","z_index","z_index","z_index","update_clipping_system","Button","apply","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","component_ids","default","downcast","field","field_at","field_at_mut","field_len","field_mut","fmt","from","from_components","from_world","get_components","get_field","get_field_mut","get_type_info","get_type_registration","into","into_any","into_any","into_any_arc","into_any_rc","into_reflect","into_sample","iter_fields","name_at","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","set","text_constraint","text_system","to_owned","try_from","try_into","type_id","type_info","type_name","upcast","update_image_calculated_size_system","AHasher","BoxedFuture","Duration","Entry","FixedState","FloatOrd","HashMap","HashSet","Hashed","Instant","MAX","MICROSECOND","MILLISECOND","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","NANOSECOND","OnDrop","PassHash","PassHasher","PreHashMap","PreHashMapExt","SECOND","StableHashMap","StableHashSet","Uuid","ZERO","add","add_assign","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_braced","as_bytes","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_fields","as_hyphenated","as_micros","as_millis","as_nanos","as_ref","as_reflect","as_reflect_mut","as_secs","as_secs_f32","as_secs_f64","as_simple","as_u128","as_u64_pair","as_urn","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","build_hasher","build_hasher","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","cmp","cmp","cmp","debug","default","default","default","default","default","default","default","define_boxed_label","define_label","deref","deserialize","deserialize","detailed_trace","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","encode_buffer","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_micros","from_millis","from_nanos","from_reflect","from_secs","from_secs_f32","from_secs_f64","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","from_world","from_world","from_world","from_world","from_world","from_world","futures","get_hash","get_hash","get_hash","get_hash","get_or_insert_with","get_short_name","get_timestamp","get_type_info","get_type_registration","get_variant","get_version","get_version_num","hash","hash","hash","hash","hash","hyphenated","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_nil","is_zero","label","mul","mul_assign","mul_f32","mul_f64","neg","new","new","new","new_v4","new_with_keys","nil","parse_str","partial_cmp","partial_cmp","partial_cmp","prelude","reflect_hash","reflect_mut","reflect_owned","reflect_partial_eq","reflect_path","reflect_path_mut","reflect_ref","saturating_add","saturating_mul","saturating_sub","serialize","serialize","set","simple","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","synccell","syncunsafecell","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_u128_le","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","urn","write","write","write_u128","write_u16","write_u32","write_u64","write_u64","write_u8","write_usize","now_or_never","AllocError","CapacityOverflow","HashMap","HashSet","TryReserveError","allocator","allocator","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","bitand","bitor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone_dynamic","clone_from","clone_from","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","contains","contains_key","default","default","deserialize","deserialize","difference","downcast","downcast","downcast","drain","drain","drain","drain_filter","drain_filter","dyn_eq","dyn_eq","dyn_eq","entry","entry","entry_ref","eq","eq","eq","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","extend","extend","extend","extend","extend","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","from_iter","from_reflect","from_reflect","from_world","from_world","get","get","get","get_at","get_key_value","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_or_insert","get_or_insert_owned","get_or_insert_with","get_or_insert_with","get_type_info","get_type_info","get_type_registration","get_type_registration","hash_map","hash_set","hasher","hasher","index","insert","insert","insert_boxed","insert_unique_unchecked","insert_unique_unchecked","intersection","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_keys","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_values","is_disjoint","is_empty","is_empty","is_subset","is_superset","iter","iter","iter","iter_mut","keys","len","len","len","new","new","new_in","new_in","raw","raw_entry","raw_entry_mut","raw_table","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_partial_eq","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","remove","remove","remove","remove_entry","replace","reserve","reserve","retain","retain","serialize","serialize","set","set","shrink_to","shrink_to","shrink_to_fit","shrink_to_fit","sub","symmetric_difference","take","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_reserve","try_reserve","type_id","type_id","type_id","type_info","type_info","type_name","type_name","union","upcast","upcast","upcast","values","values_mut","with_capacity","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_and_hasher_in","with_capacity_in","with_capacity_in","with_hasher","with_hasher","with_hasher_in","with_hasher_in","layout","DefaultHashBuilder","Drain","DrainFilter","Entry","EntryRef","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get_key_value","get_key_value_mut","get_mut","get_mut","get_mut","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_mut","into_mut","into_mut","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","key","key","key","key","key","key","key","key_mut","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","remove","remove","remove","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","Difference","Drain","DrainFilter","Entry","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get","get","get","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_value","len","len","len","next","next","next","next","next","next","next","next","or_insert","remove","replace","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","Bucket","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","allocator","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","copy_from_nonoverlapping","data_end","default","downcast","downcast","downcast","downcast","downcast","downcast","drain","drain_iter_from","drop","drop","drop","drop","erase","erase_entry","erase_no_drop","find","from","from","from","from","from","from","from_world","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert_entry","insert_no_grow","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","iter","iter","iter","iter_hash","len","new","new_in","next","next","next","next","read","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","with_capacity","with_capacity_in","write","DynEq","DynHash","as_any","as_dyn_eq","define_boxed_label","define_label","dyn_eq","dyn_hash","Directed","Direction","EdgeDirection","EdgeType","Graph","Incoming","Incoming","IntoWeightedEdge","NodeId","Outgoing","Outgoing","Undirected","add_edge","add_edge","add_node","add_node","adj","adjacency_matrix","algo","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","contains_edge","csr","data","default","dot","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","edge_bound","edge_count","edge_count","edge_endpoints","edge_indices","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","eq","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","first_edge","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_world","get_hash","graph","graphmap","hash","index","index","index","index_mut","index_mut","index_twice_mut","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_edge_type","into_nodes_edges","into_sample","into_sample","into_sample","into_sample","into_weighted_edge","is_adjacent","is_directed","is_directed","is_directed","is_directed","map","matrix_graph","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","new_undirected","next_edge","node_bound","node_count","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","operator","opposite","partial_cmp","prelude","raw_edges","raw_nodes","remove_edge","remove_node","reserve_edges","reserve_exact_edges","reserve_exact_nodes","reserve_nodes","reset_map","retain_edges","retain_nodes","reverse","shrink_to_fit","shrink_to_fit_edges","shrink_to_fit_nodes","stable_graph","to_index","to_index","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unionfind","upcast","upcast","upcast","upcast","update_edge","update_edge","visit","visit_map","with_capacity","with_capacity","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","IndexType","List","Neighbors","NodeIndex","NodeIndices","OutgoingEdgeIndices","OutgoingEdgeReferences","UnweightedList","add_edge","add_edge","add_node","add_node","add_node_from_edges","add_node_with_capacity","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","contains_edge","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","edge_count","edge_count","edge_endpoints","edge_indices","edge_indices_from","edge_references","edge_weight","edge_weight_mut","edges","eq","eq","equivalent","equivalent","find_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_index","from_world","get_hash","hash","id","index","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","len","len","max","neighbors","new","new","next","next","next","next","next","next","next_back","next_back","node_bound","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight_mut","partial_cmp","partial_cmp","reset_map","rfind","rfind","rfold","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_edge","visit_map","weight","with_capacity","BoundedMeasure","Cycle","DfsSpace","FloatMeasure","Matching","Measure","MinSpanningTree","NegativeCycle","TarjanScc","all_simple_paths","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","astar","astar","bellman_ford","bellman_ford","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","condensation","connected_components","contains_edge","contains_node","default","default","dijkstra","dijkstra","dominators","downcast","downcast","downcast","downcast","downcast","downcast","edges","eq","eq","feedback_arc_set","find_negative_cycle","floyd_warshall","floyd_warshall","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_world","from_world","greedy_feedback_arc_set","greedy_matching","has_path_connecting","infinite","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_bipartite_undirected","is_cyclic_directed","is_cyclic_undirected","is_empty","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","is_perfect","isomorphism","k_shortest_path","k_shortest_path","kosaraju_scc","len","matching","mate","max","maximum_matching","min","min_spanning_tree","new","new","next","node_component_index","node_id","nodes","overflowing_add","run","scc","simple_paths","subgraph_isomorphisms_iter","tarjan_scc","to_owned","to_owned","to_owned","to_owned","toposort","tred","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","zero","astar","Paths","as_any","as_any_mut","as_bind_group_shader_type","bellman_ford","borrow","borrow_mut","clone","clone_into","clone_type_data","distances","downcast","find_negative_cycle","fmt","from","into","into_any","into_any_arc","into_any_rc","into_sample","predecessors","to_owned","try_from","try_into","type_id","upcast","dijkstra","DominatedByIter","Dominators","DominatorsIter","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","dominators","downcast","downcast","downcast","fmt","fmt","fmt","from","from","from","immediate_dominator","immediately_dominated_by","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","next","next","root","simple_fast","size_hint","strict_dominators","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","greedy_feedback_arc_set","floyd_warshall","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","subgraph_isomorphisms_iter","k_shortest_path","MatchedEdges","MatchedNodes","Matching","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","greedy_matching","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","maximum_matching","next","next","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","all_simple_paths","dag_to_toposorted_adjacency_list","dag_transitive_reduction_closure","Csr","DefaultIx","EdgeIndex","EdgeReference","EdgeReferences","Edges","EdgesNotSorted","IndexType","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","add_edge","add_node","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains_edge","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","edge_count","edge_count","edge_references","edges","edges","edges_slice","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_index","from_sorted_edges","from_world","id","index","index","index_mut","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","max","neighbors","neighbors_slice","new","new","next","next","next","next","next","next_back","node_bound","node_count","node_count","node_identifiers","node_references","out_degree","reset_map","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit_map","weight","weight","with_nodes","Build","Create","DataMap","DataMapMut","Edge","Element","ElementIterator","FilterElements","FromElements","Node","add_edge","add_node","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","downcast","downcast","dyn_eq","edge_weight","edge_weight_mut","eq","equivalent","filter_elements","fmt","fmt","from","from","from_elements","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","into_sample","into_sample","next","node_weight","node_weight_mut","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_edge","with_capacity","source","target","weight","weight","Config","Dot","EdgeIndexLabel","EdgeNoLabel","GraphContentOnly","NodeIndexLabel","NodeNoLabel","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","dyn_eq","eq","equivalent","fmt","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","with_attr_getters","with_config","DefaultIx","DiGraph","Edge","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","EdgeWeightsMut","Edges","EdgesConnecting","Externals","Frozen","Graph","GraphIndex","IndexType","Neighbors","Node","NodeIndex","NodeIndices","NodeReferences","NodeWeightsMut","UnGraph","WalkNeighbors","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","detach","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","edge_bound","edge_count","edge_index","edge_references","edge_weight","edge_weight_mut","edges","edges_directed","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_index","from_index","id","index","index","index_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","max","neighbors","neighbors_directed","new","new","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_edge","next_edge","next_node","node_bound","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","reset_map","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","target","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit_map","weight","weight","weight","weight","AllEdges","AllEdgesMut","DiGraphMap","Edges","EdgesDirected","GraphMap","Neighbors","NeighborsDirected","NodeIdentifiers","NodeReferences","NodeTrait","Nodes","Ptr","UnGraphMap","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","count","count","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_hash","hash","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","last","last","len","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","nth","nth","partial_cmp","rfind","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","DiMatrix","EdgeReferences","Edges","IndexType","MatrixGraph","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","NotZero","Nullable","UnMatrix","Zero","add_edge","add_edge","add_node","add_node","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","extend_with_edges","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_edges","from_index","from_world","from_world","has_edge","index","index","index","index_mut","index_mut","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","is_zero","max","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new","new_undirected","next","next","next","next","next","node_bound","node_count","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","remove_edge","remove_node","reset_map","size_hint","size_hint","size_hint","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_edge","update_edge","visit_map","with_capacity","zero","complement","Bfs","Dfs","DfsPostOrder","DiGraph","DiGraphMap","Directed","Direction","EdgeId","EdgeIndex","EdgeRef","Graph","GraphMap","Incoming","NodeId","NodeIndex","Outgoing","StableDiGraph","StableGraph","StableUnGraph","UnGraph","UnGraphMap","Undirected","Weight","add_edge","add_edge","add_node","add_node","adjacency_matrix","all_edges","all_edges_mut","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","contains_edge","contains_node","default","default","default","default","discovered","discovered","discovered","downcast","downcast","downcast","downcast","edge_bound","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","empty","empty","extend","finished","fmt","fmt","fmt","from","from","from","from","from_edges","from_elements","from_graph","from_index","from_index","from_iter","from_parts","from_world","from_world","from_world","from_world","id","index","index_mut","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_graph","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","move_to","move_to","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new","new","new","next","next","next","node_bound","node_count","node_count","node_identifiers","node_references","nodes","remove_edge","remove_node","reset","reset","reset_map","source","stack","stack","stack","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update_edge","visit_map","walk_next","walk_next","walk_next","weight","with_capacity","with_capacity","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","Edges","EdgesConnecting","Externals","GraphIndex","IndexType","Neighbors","NodeIndex","NodeIndices","NodeReferences","StableDiGraph","StableGraph","StableUnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","contains_edge","contains_node","default","default","default","detach","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","dyn_hash","edge_bound","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","end","end","eq","eq","eq","equivalent","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_world","from_world","from_world","get_hash","get_hash","hash","hash","id","id","index","index","index","index","index","index","index_mut","index_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_adjacent","is_directed","map","max","max","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","new","new","new","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_node","node_bound","node_count","node_count","node_identifiers","node_index","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","partial_cmp","partial_cmp","remove_edge","remove_node","reset_map","retain_edges","retain_nodes","reverse","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_edge","update_edge","visit_map","weight","weight","weight","with_capacity","with_capacity","UnionFind","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","downcast","equiv","find","find_mut","fmt","from","into","into_any","into_any_arc","into_any_rc","into_labeling","into_sample","new","to_owned","try_from","try_into","type_id","union","upcast","AdjMatrix","BackEdge","Bfs","Break","Continue","Control","ControlFlow","CrossForwardEdge","Data","Dfs","DfsEvent","DfsPostOrder","Discover","EdgeCount","EdgeFiltered","EdgeFilteredEdges","EdgeFilteredNeighbors","EdgeFilteredNeighborsDirected","EdgeId","EdgeId","EdgeIndexable","EdgeRef","EdgeRef","EdgeReferences","EdgeType","EdgeWeight","Edges","EdgesDirected","FilterEdge","FilterNode","Finish","GetAdjacencyMatrix","GraphBase","GraphProp","GraphRef","IntoEdgeReferences","IntoEdges","IntoEdgesDirected","IntoNeighbors","IntoNeighborsDirected","IntoNodeIdentifiers","IntoNodeReferences","Item","Map","Neighbors","NeighborsDirected","NodeCompactIndexable","NodeCount","NodeFiltered","NodeFilteredEdgeReferences","NodeFilteredEdges","NodeFilteredNeighbors","NodeFilteredNodes","NodeId","NodeId","NodeId","NodeIdentifiers","NodeIndexable","NodeRef","NodeRef","NodeReferences","NodeWeight","Prune","Reversed","ReversedEdgeReference","ReversedEdgeReferences","ReversedEdges","Time","Topo","TreeEdge","VisitMap","Visitable","Walker","WalkerIter","Weight","Weight","adjacency_matrix","adjacency_matrix","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_unreversed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_value","breaking","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","context","continuing","continuing","default","default","default","depth_first_search","discovered","discovered","discovered","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_hash","edge_bound","edge_bound","edge_bound","edge_bound","edge_count","edge_count","edge_references","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edges","edges","edges","edges","edges_directed","edges_directed","edges_directed","edges_directed","eq","equivalent","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fn","from_fn","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_world","from_world","from_world","get_hash","hash","id","id","id","include_edge","include_node","inner_mut","inner_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_unreversed","is_adjacent","is_adjacent","is_directed","is_visited","iter","neighbors","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_directed","new","next","next","next","next","next","next","next","next","next","next","next","node_bound","node_bound","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_identifiers","node_identifiers","node_references","node_references","node_references","node_references","node_weight","node_weight","node_weight_mut","partial_cmp","reset","reset_map","reset_map","reset_map","reset_map","should_break","should_break","should_prune","should_prune","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","stack","stack","stack","target","target","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visit","visit_map","visit_map","visit_map","visit_map","walk_next","walk_next","weight","weight","weight","default","SyncCell","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","downcast","from","from_mut","get","into","into_any","into_any_arc","into_any_rc","into_sample","new","to_inner","try_from","try_into","type_id","upcast","SyncUnsafeCell","UnsafeCell","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_slice_of_cells","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref_mut","downcast","downcast","fmt","from","from","from","from","from","from","from_mut","from_world","from_world","get","get","get_mut","get_mut","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_inner","into_inner","into_sample","into_sample","new","new","raw_get","raw_get","read","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","Error","Callsite","DEBUG","Dispatch","ERROR","Event","INFO","Id","Instrument","Level","Metadata","Span","Subscriber","TRACE","Value","WARN","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_log","as_log","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","child_of","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_span","clone_span","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","current","current_span","current_span","debug","debug_span","default","dispatcher","downcast","downcast","downcast","downcast","downcast","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downgrade","drop","drop_span","drop_span","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","enabled","enabled","enabled","enter","enter","enter","entered","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","error","error_span","event","event","event","event","event_enabled","event_enabled","exit","exit","field","field","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from","from","from_non_zero_u64","from_str","from_u64","from_world","ge","ge","get_hash","get_hash","get_hash","gt","gt","has_field","hash","hash","hash","id","in_current_span","in_scope","info","info_span","instrument","instrument","instrument","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_non_zero_u64","into_sample","into_sample","into_sample","into_sample","into_sample","into_u64","is","is","is","is","is","is_disabled","is_event","is_none","is_span","le","le","level","level_filters","line","lt","lt","max_level_hint","metadata","metadata","metadata","metadata","module_path","name","new","new","new","new_disabled","new_root","new_span","new_span","none","none","on_register_dispatch","or_current","partial_cmp","partial_cmp","record","record","record","record","record_all","record_follows_from","record_follows_from","register_callsite","register_callsite","set_interest","span","span","span_enabled","subscriber","target","to_owned","to_owned","to_owned","to_owned","to_string","trace","trace_span","try_close","try_close","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","warn","warn_span","with_subscriber","Callsite","DefaultCallsite","Identifier","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","downcast","downcast","dyn_eq","dyn_hash","eq","equivalent","fmt","fmt","from","from","get_hash","hash","interest","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","metadata","metadata","new","rebuild_interest_cache","register","register","set_interest","set_interest","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","DefaultGuard","Dispatch","SetGlobalDefaultError","WeakDispatch","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","downcast","fmt","from","get_default","into","into_any","into_any_arc","into_any_rc","into_sample","set_default","set_global_default","to_owned","try_from","try_into","type_id","upcast","upgrade","with_default","Event","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","child_of","dispatch","downcast","fields","fmt","from","into","into_any","into_any_rc","into_sample","is_contextual","is_log","is_root","metadata","new","new_child_of","normalized_metadata","parent","record","record","try_from","try_into","type_id","upcast","AsField","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_field","as_field","as_field","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","contains","debug","display","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_hash","hash","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_error","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","Instrument","Instrumented","WithDispatch","WithSubscriber","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","dispatcher","downcast","downcast","fmt","fmt","from","from","in_current_span","inner","inner","inner_mut","inner_mut","inner_pin_mut","inner_pin_mut","inner_pin_ref","inner_pin_ref","instrument","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_future","into_future","into_inner","into_inner","into_sample","into_sample","poll","poll","span","span_mut","to_owned","to_owned","try_from","try_from","try_into","try_into","try_poll","try_poll","type_id","type_id","upcast","upcast","with_current_subscriber","with_subscriber","LevelFilter","ParseLevelFilterError","STATIC_MAX_LEVEL","DEBUG","ERROR","EVENT","HINT","INFO","Kind","Level","LevelFilter","Metadata","OFF","ParseLevelError","ParseLevelFilterError","SPAN","TRACE","WARN","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_log","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite_enabled","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","cmp","current","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_hash","enabled","enabled","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_level","from_str","ge","ge","get_hash","gt","gt","hash","hint","in_current_span","in_current_span","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_level","into_sample","into_sample","into_sample","into_sample","is_event","is_hint","is_span","le","le","lt","lt","max_level_hint","partial_cmp","partial_cmp","provide","provide","register_callsite","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_id","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","contains","contains","deref","downcast","downcast","downcast","downcast","drop","drop","exit","fields","fmt","fmt","fmt","fmt","from","from","from","from","id","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_contextual","is_empty","is_empty","is_root","len","metadata","new","new","new_root","parent","record","record","record","record","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","values","DefaultGuard","Interest","NoSubscriber","SetGlobalDefaultError","Subscriber","always","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_span","clone_type_data","clone_type_data","current_span","default","downcast","downcast","downcast","downcast","downcast_raw","drop","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_world","in_current_span","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_always","is_never","is_sometimes","max_level_hint","never","new_span","new_span","on_register_dispatch","provide","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","set_default","set_global_default","sometimes","to_owned","to_owned","to_string","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","with_default","Alias","AllScroll","AlwaysOnBottom","AlwaysOnTop","Arrow","At","Auto","AutoNoVsync","AutoVsync","Automatic","BorderlessFullscreen","Cell","Centered","ColResize","Commit","CompositeAlphaMode","Confined","ContextMenu","Copy","Crosshair","Current","Cursor","CursorEntered","CursorGrabMode","CursorIcon","CursorLeft","CursorMoved","Default","Disabled","DontExit","DroppedFile","EResize","Enabled","Entity","EwResize","ExitCondition","Fifo","FileDragAndDrop","Fullscreen","Grab","Grabbing","Hand","Help","HoveredFile","HoveredFileCancelled","Ime","Immediate","Index","Inherit","InternalWindowState","Locked","Mailbox","MonitorSelection","Move","NResize","NeResize","NeswResize","NoDrop","None","Normal","NormalizedWindowRef","NotAllowed","NsResize","NwResize","NwseResize","OnAllClosed","OnPrimaryClosed","Opaque","PostMultiplied","PreMultiplied","Preedit","PresentMode","Primary","Primary","PrimaryWindow","Progress","RawHandleWrapper","ReceivedCharacter","RequestRedraw","RowResize","SResize","SeResize","SizedFullscreen","SwResize","Text","ThreadLockedRawWindowHandleWrapper","VerticalText","WResize","Wait","Window","WindowBackendScaleFactorChanged","WindowCloseRequested","WindowClosed","WindowCreated","WindowFocused","WindowLevel","WindowMode","WindowMoved","WindowPlugin","WindowPosition","WindowRef","WindowResizeConstraints","WindowResized","WindowResolution","WindowScaleFactorChanged","Windowed","ZoomIn","ZoomOut","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","base_scale_factor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","canvas","center","char","check_constraints","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","close_on_esc","close_when_requested","close_when_requested","cmp","cmp","component_ids","component_ids","component_ids","composite_alpha_mode","cursor","cursor_position","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decorations","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","display_handle","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","entity","entity","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exit_condition","exit_on_all_closed","exit_on_primary_closed","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","fit_canvas_to_parent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","focused","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_components","from_components","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_components","get_components","get_components","get_display_handle","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_handle","get_hash","get_hash","get_hash","get_hash","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_window_handle","grab_mode","hash","hash","hash","hash","height","height","height","hit_test","icon","ime_enabled","ime_position","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","map_entities","max_height","max_width","min_height","min_width","mode","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","new","new","normalize","partial_cmp","partial_cmp","physical_cursor_position","physical_height","physical_height","physical_width","physical_width","position","position","position","prelude","present_mode","prevent_default_event_handling","primary_window","raw_display_handle","raw_window_handle","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_path_mut","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","resizable","resize_constraints","resolution","scale_factor","scale_factor","scale_factor","scale_factor","scale_factor_override","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_cursor_position","set_maximized","set_minimized","set_physical_cursor_position","set_physical_resolution","set_scale_factor","set_scale_factor_override","take_maximize_request","take_minimize_request","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","visible","width","width","width","window","window","window","window","window","window","window","window","window","window","window","window_handle","window_level","with_scale_factor_override","path_buf","path_buf","window","window","window","cursor","value","value","window","window","window","window","Alias","AllScroll","Arrow","At","Automatic","Cell","Centered","ColResize","Commit","ContextMenu","Copy","Crosshair","Current","CursorEntered","CursorIcon","CursorLeft","CursorMoved","Default","Disabled","DroppedFile","EResize","Enabled","EwResize","FileDragAndDrop","Grab","Grabbing","Hand","Help","HoveredFile","HoveredFileCancelled","Ime","Index","MonitorSelection","Move","NResize","NeResize","NeswResize","NoDrop","NotAllowed","NsResize","NwResize","NwseResize","Preedit","Primary","Progress","ReceivedCharacter","RowResize","SResize","SeResize","SwResize","Text","VerticalText","WResize","Wait","Window","WindowMoved","WindowPlugin","WindowPosition","WindowResizeConstraints","ZoomIn","ZoomOut","canvas","char","close_when_requested","composite_alpha_mode","cursor","decorations","entity","exit_condition","fit_canvas_to_parent","focused","ime_enabled","ime_position","internal","max_height","max_width","min_height","min_width","mode","position","position","position","present_mode","prevent_default_event_handling","primary_window","resizable","resize_constraints","resolution","title","transparent","window","window","window","window","window_level","path_buf","path_buf","window","window","window","cursor","value","value","window","window","window","window","Continuous","Reactive","ReactiveLowPower","UpdateMode","WinitPlugin","WinitSettings","WinitWindows","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","create_window","default","default","default","desktop_app","downcast","downcast","downcast","downcast","entity_to_winit","fmt","fmt","fmt","focused_mode","from","from","from","from","from_world","from_world","from_world","game","get_best_videomode","get_fitting_videomode","get_window","get_window_entity","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","remove_window","return_from_run","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unfocused_mode","upcast","upcast","upcast","upcast","update_mode","windows","winit_runner","winit_to_entity","winit_window_position","max_wait","max_wait"],"q":["bevy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::animationbevy::animation::prelude","","","","","","","","","","","","bevy::appbevy::app::RunMode","bevy::app::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::assetbevy::asset::AssetEvent","","","bevy::asset::AssetServerError","bevy::asset::debug_asset_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::asset::diagnostic","","","","","","","","","","","","","","","","","","","","","","","bevy::asset::prelude","","","","","","","","","","","","","","","","","","bevy::asset::prelude::AssetEvent","","","bevy::audiobevy::audio::prelude","","","","","","","","","","","","bevy::corebevy::core::prelude","","","","","","","","","","","","","","bevy::core_pipeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::core_pipeline::bloom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::core_pipeline::clear_color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::core_pipeline::core_2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::core_pipeline::core_2d::graph","","","bevy::core_pipeline::core_2d::graph::input","bevy::core_pipeline::core_2d::graph::node","","","","","","bevy::core_pipeline::core_3dbevy::core_pipeline::core_3d::graph","","","bevy::core_pipeline::core_3d::graph::input","bevy::core_pipeline::core_3d::graph::node","","","","","","","bevy::core_pipeline::fullscreen_vertex_shader","","bevy::core_pipeline::fxaabevy::core_pipeline::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::core_pipeline::prepassbevy::core_pipeline::prepass::node","","","","","","","","","","","","","","","","","","","","","","bevy::core_pipeline::tonemappingbevy::core_pipeline::tonemapping::Tonemapping","bevy::core_pipeline::upscaling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::diagnosticbevy::dynamic_plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ecs","","","","","","","","","","","","","","","bevy::ecs::archetypebevy::ecs::bundle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ecs::change_detection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ecs::componentbevy::ecs::entitybevy::ecs::eventbevy::ecs::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ecs::ptr","","","","","","","","","","","","bevy::ecs::querybevy::ecs::reflect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ecs::removal_detection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ecs::schedulebevy::ecs::schedule::ScheduleBuildError","","","","","","bevy::ecs::schedule::common_conditions","","","","","","","","bevy::ecs::storagebevy::ecs::systembevy::ecs::system::lifetimeless","","","","","","bevy::ecs::worldbevy::ecs::world::unsafe_world_cell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::gilrs","","","","","","","","","","","","","","","","","","","","bevy::gltfbevy::gltf::GltfError","bevy::hierarchybevy::hierarchy::HierarchyEvent","","","","","","","bevy::inputbevy::input::gamepad","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::input::gamepad::AxisSettingsError","","","","bevy::input::gamepad::ButtonSettingsError","","bevy::input::keyboardbevy::input::mousebevy::input::preludebevy::input::touchbevy::input::touch::ForceTouch","","","bevy::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::log::prelude","","","","","","","","","","bevy::mathbevy::math::boolbevy::math::fbevy::math::f64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::math::ibevy::math::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::math::swizzlesbevy::math::ubevy::pbrbevy::pbr::ClusterConfig","","","","","","","bevy::pbr::FogFalloff","","","","","","bevy::pbr::LightEntity","","","","","bevy::pbr::draw_3d_graph","bevy::pbr::draw_3d_graph::node","bevy::pbr::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::pbr::prelude::FogFalloff","","","","","","bevy::pbr::wireframe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::preludebevy::prelude::AssetEvent","","","bevy::prelude::Color","","","","","","","","","","","","","","","","bevy::prelude::FileDragAndDrop","","","","","bevy::prelude::FogFalloff","","","","","","bevy::prelude::Ime","","","","","","","bevy::prelude::shapebevy::prelude::system_adapter","","","","","","","bevy::ptr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::reflectbevy::reflect::ReflectPathError","","","","","","","","","","","","","","","","","","","","","","","bevy::reflect::erased_serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::reflect::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::reflect::serdebevy::reflect::std_traits","","","","","","","","","","","","","","","","","","","","","","","bevy::reflect::utility","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::renderbevy::render::camerabevy::render::camera::ScalingMode","","","","","","bevy::render::colorbevy::render::color::Color","","","","","","","","","","","","","","","","bevy::render::extract_component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::extract_resource","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::globals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::main_graph","bevy::render::main_graph::node","bevy::render::meshbevy::render::mesh::GpuBufferInfo","","","","bevy::render::mesh::skinning","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::once_cell","","","bevy::render::once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::once_cell::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::pipelined_rendering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::prelude::Color","","","","","","","","","","","","","","","","bevy::render::primitivesbevy::render::render_asset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::render_graphbevy::render::render_graph::Edge","","","","","","bevy::render::render_graph::InputSlotError","","","bevy::render::render_graph::OutputSlotError","","","bevy::render::render_graph::RenderGraphError","","","","","","","","","","","bevy::render::render_graph::RunSubGraphError","","","","","","","","bevy::render::render_phasebevy::render::render_resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::render_resource::BindingType","","","","","","","","","bevy::render::render_resource::BufferBindingType","bevy::render::render_resource::ProcessShaderError","","","","","bevy::render::render_resource::TextureFormat","","bevy::render::render_resource::TextureSampleType","bevy::render::render_resource::TextureViewValue","","bevy::render::render_resource::encase","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::render_resource::encase::internalbevy::render::render_resource::encase::internal::Error","","bevy::render::render_resource::encase::matrix","","","","","","","","bevy::render::render_resource::encase::rts_array","","","","","bevy::render::render_resource::encase::vector","","","","","","","","bevy::render::render_resource::resource_macros","","","bevy::render::rendererbevy::render::renderer::RenderGraphRunnerError","","","","","","","","","","","","","bevy::render::settingsbevy::render::settings::Dx12Compiler","","bevy::render::texturebevy::render::view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::view::visibility","","","","","","","","","","","","","","","","","","","","","","","","","bevy::render::view::window","","","","","","","","","","","","","","","","","","","","bevy::scenebevy::scene::SceneSpawnError","","","","bevy::scene::prelude","","","","","","","","","","","","","","","","","","bevy::scene::serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::spritebevy::sprite::collide_aabb","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::sprite::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::tasksbevy::tasks::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::textbevy::text::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::timebevy::time::fixed_timestep","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::time::fixed_timestep::FixedUpdateError","","bevy::time::prelude","","","","","","","bevy::transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::transform::commands","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::transform::componentsbevy::transform::systems","","bevy::uibevy::ui::camera_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ui::draw_ui_graph","","","bevy::ui::draw_ui_graph::input","bevy::ui::draw_ui_graph::node","bevy::ui::node","bevy::ui::node_bundles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::ui::update","bevy::ui::widget","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utilsbevy::utils::futures","bevy::utils::hashbrownbevy::utils::hashbrown::TryReserveError","bevy::utils::hashbrown::hash_mapbevy::utils::hashbrown::hash_setbevy::utils::hashbrown::rawbevy::utils::label","","","","","","","","bevy::utils::petgraphbevy::utils::petgraph::adjbevy::utils::petgraph::algo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::algo::astar","bevy::utils::petgraph::algo::bellman_ford","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::algo::dijkstra","bevy::utils::petgraph::algo::dominators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::algo::feedback_arc_set","bevy::utils::petgraph::algo::floyd_warshall","bevy::utils::petgraph::algo::isomorphism","","","","","bevy::utils::petgraph::algo::k_shortest_path","bevy::utils::petgraph::algo::matching","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::algo::simple_paths","bevy::utils::petgraph::algo::tred","","bevy::utils::petgraph::csrbevy::utils::petgraph::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::data::Element","","","","bevy::utils::petgraph::dot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::graphbevy::utils::petgraph::graphmapbevy::utils::petgraph::matrix_graphbevy::utils::petgraph::operator","bevy::utils::petgraph::preludebevy::utils::petgraph::stable_graphbevy::utils::petgraph::unionfind","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::petgraph::visitbevy::utils::prelude","bevy::utils::synccell","","","","","","","","","","","","","","","","","","","","","bevy::utils::syncunsafecell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::thiserror","bevy::utils::tracingbevy::utils::tracing::callsite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::tracing::dispatcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::tracing::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::tracing::fieldbevy::utils::tracing::instrument","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::tracing::level_filters","","","bevy::utils::tracing::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::tracing::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::utils::tracing::subscriber","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::windowbevy::window::FileDragAndDrop","","","","","bevy::window::Ime","","","","","","","bevy::window::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::window::prelude::FileDragAndDrop","","","","","bevy::window::prelude::Ime","","","","","","","bevy::winit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bevy::winit::UpdateMode",""],"d":["This plugin group will add all the default plugins for a …","This plugin group will add the minimal plugins for a <em>Bevy</em> …","Provides types and plugins for animations.","Build bevy apps, create plugins, and read events.","","","","","","","Load and store assets and resources for Apps.","Provides types and plugins for audio playback.","","","","","","","Contains core plugins.","Core render pipeline.","Useful diagnostic plugins and types for bevy apps.","","","Dynamic linking of plugins","Bevy’s entity-component-system.","Returns the argument unchanged.","Returns the argument unchanged.","Bevy interface with <code>GilRs</code> - “Game Input Library for Rust…","Support for GLTF file loading.","Entity hierarchies and property inheritance","Resources and events for inputs, e.g. mouse/keyboard, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Logging capabilities","Math types (Vec3, Mat4, Quat, etc) and helpers.","Physically based rendering.","<code>use bevy::prelude::*;</code> to import common components, …","Utilities for working with untyped pointers in a more safe …","Type reflection used for dynamically interacting with rust …","Cameras, meshes, textures, shaders, and pipelines. Use …","Save/load collections of entities and components to/from …","Items for sprites, rects, texture atlases, etc.","Pools for async, IO, and compute tasks.","Text drawing, styling, and font assets.","Contains time utilities.","Local and global transforms (e.g. translation, scale, …","","","","","","","User interface components and widgets.","","","Various miscellaneous utilities for easing development","Configuration, creation, and management of one or more …","Window creation, configuration, and handling","A list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …","Animation controls","Adds animation support to an app","Path to an entity, with <code>Name</code>s. Each entity in a path must …","List of keyframes for one of the attribute of a <code>Transform</code>.","Keyframes for rotation.","Keyframes for scale.","Keyframes for translation.","Describes how an attribute of a <code>Transform</code> should be …","Add a <code>VariableCurve</code> to an <code>EntityPath</code>.","System that will play all animations, using any entity …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>VariableCurve</code>s for each bone. Indexed by the bone ID.","","","","","","","","","","","Duration of the clip, represented in seconds","","","Time elapsed playing the animation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Gets the curves for a bone.","Gets the curves by it’s <code>EntityPath</code>.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is the animation paused","","","","","","Timestamp for each of the keyframes.","List of the keyframes.","","","","","","Parts of the path","Pause the animation","Start playing an animation, resetting state of the player, …","Start playing an animation, resetting state of the player, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the animation to repeat","Unpause the animation","","","","","","Seek to a specific time in the animation","Set the speed of the animation playback","Speed of the animation playback","Start playing an animation, resetting state of the player …","Start playing an animation, resetting state of the player …","Stop the animation from repeating","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","","Returns the UUID associated with this value’s type.","","","","","","","","","","A list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …","Animation controls","Adds animation support to an app","Path to an entity, with <code>Name</code>s. Each entity in a path must …","List of keyframes for one of the attribute of a <code>Transform</code>.","Keyframes for rotation.","Keyframes for scale.","Keyframes for translation.","Describes how an attribute of a <code>Transform</code> should be …","Timestamp for each of the keyframes.","List of the keyframes.","Parts of the path","A container of app logic and data.","An event that indicates the <code>App</code> should exit. This will …","A strongly-typed class of labels used to identify an <code>App</code>.","Generates an impl of the <code>AppLabel</code> trait.","A strongly-typed identifier for an <code>AppLabel</code>.","The <code>Resource</code> that stores the <code>App</code>’s <code>TypeRegistry</code>.","The names of the default <code>App</code> schedules.","The names of the default <code>App</code> system sets.","A type representing an unsafe function that returns a …","Generates a dynamic plugin entry point function for the …","Runs before all other members of this set.","The copy of <code>apply_system_buffers</code> that runs immediately …","The schedule that contains systems which only run after a …","Runs systems that should only occur after a fixed period …","Runs after all other members of this set.","The copy of <code>apply_system_buffers</code> that runs immediately …","Indicates that the <code>App</code>’s schedule should run repeatedly.","The schedule that contains the app logic that is evaluated …","Indicates that the <code>App</code>’s schedule should run only once.","The schedule that controls which schedules run.","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","Facilitates the creation and configuration of a <code>PluginGroup</code>…","Runs once after <code>StartupSet::Startup</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs after <code>CoreSet::Update</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs once before <code>StartupSet::Startup</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs before <code>CoreSet::Update</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Determines the method used to run an <code>App</code>’s <code>Schedule</code>.","Configures an <code>App</code> to run its <code>Schedule</code> according to a given …","The configuration information for the <code>ScheduleRunnerPlugin</code>.","The schedule that runs once when the app starts.","Runs once when an <code>App</code> starts up.","The copy of <code>apply_system_buffers</code> that runs immediately …","The names of the default <code>App</code> startup sets, which live in …","Applies <code>State</code> transitions","A <code>SubApp</code> contains its own <code>Schedule</code> and <code>World</code> separate from …","Responsible for doing most app logic. Systems should be …","The copy of <code>apply_system_buffers</code> that runs immediately …","Adds the plugin <code>Plugin</code> at the end of this …","Adds a <code>Plugin</code> in this <code>PluginGroupBuilder</code> after the plugin …","","","","Adds a <code>Plugin</code> in this <code>PluginGroupBuilder</code> before the plugin …","","Adds standardized schedules and labels to an <code>App</code>.","Setup the application to manage events of type <code>T</code>.","Adds a single <code>Plugin</code>.","Adds a group of <code>Plugin</code>s.","","Adds a new <code>schedule</code> to the <code>App</code> under the provided <code>label</code>.","adds a single threaded outer schedule to the <code>App</code> that just …","Adds a system to <code>CoreSchedule::Startup</code>.","Adds a collection of systems to <code>CoreSchedule::Startup</code>.","Adds <code>State&lt;S&gt;</code> and <code>NextState&lt;S&gt;</code> resources, <code>OnEnter</code> and …","Adds a system to the default system set and schedule of …","Adds a system to the provided <code>Schedule</code>.","Adds a system to the default system set and schedule of …","Adds a collection of system to the provided <code>Schedule</code>.","","","","","","","The <code>SubApp</code>’s instance of <code>App</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this type into an opaque, strongly-typed label.","","Returns the representation of this label as a string …","","Sets up the base structure of <code>CoreSchedule::Main</code>.","Sets up the base structure of <code>CoreSchedule::Startup</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","","","","","","","","","","","","","","","","","","","","","","","","","","","Configures a system set in the default schedule, adding …","Configures a collection of system sets in the default …","","","","","","","The schedule that systems are added to by default.","","","Disables a <code>Plugin</code>, preventing it from being added to the …","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","Applies the function to the <code>Schedule</code> associated with <code>label</code>.","Creates a new empty <code>App</code> with minimal default configuration.","Enables a <code>Plugin</code>.","","","","","","","","","Extracts data from main world to this sub-app.","Consumes the <code>PluginGroupBuilder</code> and builds the contained …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a vector of references to any plugins of type <code>T</code> …","","","","","Gets read-only access to the <code>Schedule</code> with the provided …","Gets read-write access to a <code>Schedule</code> with the provided …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","","","","","","","","","","","","","Initialize a non-send <code>Resource</code> with standard starting …","Initialize a <code>Resource</code> with standard starting values by …","Initializes a new empty <code>schedule</code> to the <code>App</code> under the …","Inserts a non-send resource to the app.","Inserts a <code>Resource</code> to the current <code>App</code> and overwrites any …","Inserts an existing sub app into the app","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","Checks if a <code>Plugin</code> has already been added.","","","If the plugin can be meaningfully instantiated several …","","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","Creates a new <code>App</code> with some default structure to enable …","Creates a new <code>SubApp</code>.","An exclusive system that controls which schedule should be …","Initializes a single threaded schedule for …","The schedule that controls the outer loop of schedule …","","","Registers the type <code>T</code> in the <code>TypeRegistry</code> resource, adding …","Adds the type data <code>D</code> to type <code>T</code> in the <code>TypeRegistry</code> …","Removes a sub app from the app. Returns <code>None</code> if the label …","Starts the application by calling the app’s runner …","Runs the <code>SubApp</code>’s default schedule.","","","See <code>RunMode::Loop</code>.","Determines whether the <code>Schedule</code> is run once or repeatedly.","See <code>RunMode::Once</code>.","The runner function is primarily responsible for managing …","Sets the value of the given <code>Plugin</code>, if it exists","Sets the value of the given <code>Plugin</code>, if it exists.","Sets the function that will be called when the app is run.","Run <code>Plugin::setup</code> for each plugin. This is usually called …","Runs after all plugins are built, but before the app …","Start a new builder for the <code>PluginGroup</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the [<code>TypeId</code>] used to differentiate labels.","","","","","","","","","","","","","","","","","","","","","","","Advances the execution of the <code>Schedule</code> by one cycle.","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","The minimum <code>Duration</code> to wait after a <code>Schedule</code> has …","A container of app logic and data.","The <code>Resource</code> that stores the <code>App</code>’s <code>TypeRegistry</code>.","The names of the default <code>App</code> schedules.","The names of the default <code>App</code> system sets.","Generates a dynamic plugin entry point function for the …","Runs before all other members of this set.","The copy of <code>apply_system_buffers</code> that runs immediately …","The schedule that contains systems which only run after a …","Runs systems that should only occur after a fixed period …","Runs after all other members of this set.","The copy of <code>apply_system_buffers</code> that runs immediately …","The schedule that contains the app logic that is evaluated …","The schedule that controls which schedules run.","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","Runs once after <code>StartupSet::Startup</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs after <code>CoreSet::Update</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs once before <code>StartupSet::Startup</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs before <code>CoreSet::Update</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","The schedule that runs once when the app starts.","Runs once when an <code>App</code> starts up.","The copy of <code>apply_system_buffers</code> that runs immediately …","The names of the default <code>App</code> startup sets, which live in …","Applies <code>State</code> transitions","Responsible for doing most app logic. Systems should be …","The copy of <code>apply_system_buffers</code> that runs immediately …","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","The schedule that systems are added to by default.","If the plugin can be meaningfully instantiated several …","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","The schedule that controls the outer loop of schedule …","The runner function is primarily responsible for managing …","Sets the value of the given <code>Plugin</code>, if it exists","Runs after all plugins are built, but before the app …","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","<code>App</code> extension methods for adding new asset types.","An essential piece of data of an application.","An untyped version of the <code>Asset</code> trait.","Events that involve assets of type <code>T</code>.","Asset events are generated.","Asset folder is not a directory.","A storage provider for an <code>AssetServer</code>.","Errors that occur while loading assets.","Encountered an error while reading an asset from disk.","A trait for sending lifecycle notifications from assets in …","An event channel used by asset server to update the asset …","Events for the <code>AssetLifecycleChannel</code>.","A loader for an asset source.","Encountered an error while processing an asset.","Metadata for an asset.","Represents a path to an asset in the file system.","An unique identifier to an asset path.","A handle id of a pending asset.","Adds support for <code>Assets</code> to an App.","The result of loading an asset of type <code>T</code>.","Loads assets from the filesystem in the background.","Errors that occur while loading assets with an <code>AssetServer</code>.","Internal data for the asset server.","<code>SystemSet</code>s for asset loading in an <code>App</code> schedule.","Stores Assets of a given type and tracks changes to them.","An owned and dynamically typed Future used when you can’…","An asset was created.","","A directory.","The <code>Error</code> type, a wrapper around a dynamic error type.","The asset failed to load.","A file.","I/O implementation for the local filesystem.","A enum representing a type of file.","An asset was freed.","A handle into a specific <code>Asset</code> of type <code>T</code>.","A unique, stable asset id.","A non-generic version of <code>Handle</code>.","A handle id of a loaded asset.","The handle type does not match the type of the loaded …","Encountered an I/O error while loading an asset.","An unique identifier to a sub-asset label.","Asset storages are updated.","An asynchronous context where an <code>Asset</code> is processed.","The load state of an asset.","The asset has been loaded and is living inside an <code>Assets</code> …","A complete asset processed in an <code>AssetLoader</code>.","The asset is in the process of loading.","Metadata information about a file.","No asset loader was found for the specified extensions.","","Path not found.","The asset has not been loaded.","Failed to watch path.","Type data for the <code>TypeRegistry</code> used to operate on …","Reflect type data struct relating a <code>Handle&lt;T&gt;</code> back to the <code>T</code>…","","Information about an asset source, such as its path, load …","Metadata for an asset source.","An unique identifier to the source path of an asset.","The asset was previously loaded, however all handles were …","Adds an asset to the collection, returning a Strong handle …","Equivalent of <code>Assets::add</code>","Registers <code>T</code> as a supported asset in the application.","Adds the provided asset loader to the application.","Registers <code>T</code> as a supported internal asset in the …","Adds a dependency on another asset at the provided path.","Adds the provided asset loader to the server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The asset itself.","A system that creates <code>AssetEvent</code>s at the end of the frame …","The base folder where assets are loaded from, relative to …","Gets the asset I/O associated with this load context.","Returns the associated asset I/O.","The <code>TypeId</code> of the asset","A map of assets and their type identifiers.","A collection of asset metadata.","The <code>TypeId</code> of the <code>Assets&lt;T&gt;</code> resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recasts this handle as a weak handle of an Asset <code>U</code>.","An iterator of the chain of source errors contained by …","Clears the inner asset map, removing all key-value pairs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an untyped copy of this handle.","","","","","","Creates a weak copy of this handle.","Creates a weak copy of this handle.","Creates a weak, untyped copy of this handle.","","","","","","","A collection to track which assets were sent to their …","","Checks if an asset exists for the given handle","Wrap the error value with additional context.","Notifies the asset server that a new asset was created.","","Creates an instance of the platform’s default <code>AssetIo</code>.","Support for hot reloading internal assets.","Creates the default id for an asset of type <code>T</code>.","","","","Asset dependencies.","","","","","","","","","","Diagnostic providers for <code>bevy_diagnostic</code>.","","","Attempt to downcast the error object to a concrete type.","","","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","A way to go from a <code>Handle&lt;T&gt;</code> in a <code>dyn Any</code> to a …","Downcast this error object by mutable reference.","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Downcast this error object by reference.","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of extensions supported by this asset …","","","","","","","Returns the file type.","Watches for file changes in the local file system.","","","","","","","","","","","","","","","","","","","","","","","","","","Notifies the asset server that an asset was freed.","","Frees unused assets, unloading them from memory.","A system for freeing assets that have no active handles.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Gets the asset for the given handle.","Equivalent of <code>Assets::get</code>","Generates metadata for the assets managed by this load …","Gets the type identifier for an asset identified by …","Returns the base path of the assets directory, which is …","","","","Gets the overall load state of a group of assets from the …","Gets a handle to an asset of type <code>T</code> from its id.","Gets a strong handle for an asset with the provided id.","Gets a <em>Strong</em> handle pointing to the same asset as the …","Gets the source path of an asset from the provided handle.","Gets an untyped strong handle for an asset with the …","","","","","","","","","","Constructs an identifier from this asset path.","Gets the load state of an asset from the provided handle.","Returns metadata about the filesystem entry at the …","","Get mutable access to the asset for the given handle.","Equivalent of <code>Assets::get_mut</code>","Gets mutable access to an asset for the given handle, …","","","","","","","","","","","Equivalent of <code>Assets::get_mut</code>, but works with an …","The <code>TypeId</code> of the <code>Handle&lt;T&gt;</code> for this asset","Returns <code>true</code> if the load context contains an asset with …","","","","","","","","","","The ID of the asset as contained within its respective …","The ID of the asset.","The unique id of the asset.","Gets an iterator over all <code>HandleId</code>’s in the collection.","Equivalent of <code>Assets::ids</code>","","","","","","Adds an asset loader <code>T</code> using default values.","Adds an asset loader <code>T</code> for internal assets using default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","","Returns <code>true</code> if the path is a directory.","Returns <code>true</code> if the entry is a directory.","Returns <code>true</code> if the entry is a directory.","Returns <code>true</code> if there are no stored assets.","Equivalent of <code>Assets::is_empty</code>","Returns <code>true</code> if the path is a file.","Returns <code>true</code> if the entry is a file.","Returns <code>true</code> if the entry is a file.","Returns <code>true</code> if all assets tracked by the source were …","Returns <code>true</code> if this is a strong handle.","Returns <code>true</code> if this is a strong handle.","","Returns <code>true</code> if this is a weak handle.","Returns <code>true</code> if this is a weak handle.","Gets an iterator over all assets in the collection.","","Gets a mutable iterator over all assets in the collection.","Gets the sub-asset label.","Asset label.","Gets the id of the sub-asset label.","Gets the number of assets in the collection.","Equivalent of <code>Assets::len</code>","Processes the asset in an asynchronous closure.","Queues an <code>Asset</code> at the provided relative path for …","Loads assets from the specified folder recursively.","Loads an internal asset.","Loads an internal binary asset.","Returns a future to load the full file data at the …","","The load state of the source.","Queues the <code>Asset</code> at the provided path for loading and …","Makes this handle Strong if it wasn’t already.","Iterates through asset references and marks assets with no …","Metadata for the source.","Create a new error object from a printable error message.","","Create a new error object from any error type.","Creates a new <code>FileAssetIo</code> at a path relative to the …","Creates a new loaded asset.","Creates a new asset server with the provided asset I/O.","Creates an arbitrary asset id without an explicit type …","Creates new metadata information.","Creates a new asset path.","Creates a new asset path using borrowed information.","","","","","","","Gets the source path for this load context.","Gets the path to the asset in the filesystem.","The path of the source.","The <code>bevy_asset</code> prelude.","","","Creates a random id for an asset of type <code>T</code>.","Reads the contents of the file at the specified path …","Returns an iterator of directory entry names at the …","","The receiver endpoint of the channel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","Force an <code>Asset</code> to be reloaded.","Removes an asset for the given handle.","Equivalent of <code>Assets::remove</code>","Reserves capacity for at least additional more elements to …","The lowest level cause of this error — this error’s …","Returns the root directory where assets are loaded from.","","The sender endpoint of the channel.","","","","","","","","Add/modify the asset pointed to by the given handle.","","","","","","Equivalent of <code>Assets::set</code>","Sets the primary asset loaded from the asset source.","Sets a secondary asset loaded from the asset source.","Add/modify the asset pointed to by the given handle.","Shrinks the capacity of the asset map as much as possible.","","","Gets the id of the source path.","","","","","","","","","","","","Converts the borrowed path data to owned.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The [<code>bevy_reflect::TypeUuid</code>] of the asset","The [<code>bevy_reflect::TypeUuid</code>] of the asset","An unique identifier for an asset type.","Converts this handle into a typed <code>Handle</code> of an <code>Asset</code> <code>T</code>.","A way to go from a <code>HandleUntyped</code> to a <code>Handle&lt;T&gt;</code> in a …","Create a weak typed <code>Handle</code> from this handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>Assets</code> collection according to the changes …","Current version of the source.","Change version.","Enables change tracking in this asset I/O.","","Whether to watch for changes in asset files. Requires the …","Tells the asset I/O to watch for changes recursively at …","","Creates a weak handle into an Asset identified by <code>id</code>.","Create a weak, untyped handle into an Asset identified by …","Creates a weak untyped handle with an arbitrary id.","Creates a new asset server with a boxed asset I/O.","Adds dependencies on other assets at the provided paths.","Adds a dependency on another asset at the provided path.","","","","The list of extensions detected on the asset source path …","A helper <code>App</code> used for hot reloading internal assets, which …","A label describing the system that runs <code>DebugAssetApp</code>.","Facilitates the creation of a “debug asset app”, whose …","A collection that maps internal assets in a <code>DebugAssetApp</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The collection of asset handles.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Uses the return type of the given loader to register the …","","","","","","","","","","","","","","","","","","","Adds an asset count diagnostic to an <code>App</code> for assets of …","","","","","","","","Gets unique id of this diagnostic.","Updates the asset count of <code>T</code> assets.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Registers the asset count diagnostic for the current …","","","","","<code>App</code> extension methods for adding new asset types.","Events that involve assets of type <code>T</code>.","Adds support for <code>Assets</code> to an App.","Loads assets from the filesystem in the background.","Stores Assets of a given type and tracks changes to them.","","A handle into a specific <code>Asset</code> of type <code>T</code>.","A non-generic version of <code>Handle</code>.","","","Registers <code>T</code> as a supported asset in the application.","Adds the provided asset loader to the application.","Registers <code>T</code> as a supported internal asset in the …","The base folder where assets are loaded from, relative to …","Adds an asset loader <code>T</code> using default values.","Adds an asset loader <code>T</code> for internal assets using default …","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","Whether to watch for changes in asset files. Requires the …","","","","A trait that allows adding a custom audio source to the …","Use this <code>Resource</code> to play audio.","Loads files as <code>AudioSource</code> <code>Assets</code>","Used internally to play audio on the current “audio …","Adds support for audio playback to a Bevy Application","Asset controlling the playback of a sound","A source of audio data","Trait for containers that contain PCM data.","A type implementing this trait can be converted to a […","The type of the iterator of the audio samples, which …","The type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …","The <code>SampleFormat</code> corresponding to this data type.","Will play the associate audio source in a loop.","Will play the associate audio source once.","Settings to control playback from the start.","Represents a value of a single sample.","A source of samples.","Registers an audio source. The type must implement …","Multiplies the value of this sample by the given amount.","Amplifies the sound by the given value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores the source in a buffer in addition to returning it. …","","Raw data of the audio source.","Returns the number of channels. Channels are always …","","","","","","","Converts the samples of this source to another type.","Returns the number of samples before the current frame …","Build and return a <code>Self::Decoder</code> of the implementing type","","","","","","","Delays the sound by a certain duration.","","","","","","","","","","Fades in the sound.","","","","Converts any sample type to this one by calling <code>to_i16</code>, …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this sink paused?","Linear interpolation between two samples.","","Applies a low-pass filter to the source. <strong>Warning</strong>: Probably …","Mixes this source with another one.","Makes the sound pausable.","Pauses playback of this sink.","Calls the <code>access</code> closure on <code>Self</code> the first time the source …","Play audio from a <code>Handle</code> to the audio source","Resumes playback of a paused sink.","Plays audio currently queued in the <code>Audio</code> resource through …","Play audio from a <code>Handle</code> to the audio source with …","","Play in repeat","Repeats this source forever.","Adds a basic reverb effect.","Returns the rate at which the source should be played. In …","Calls <code>saturating_add</code> on the sample.","Changes the speed of the sound.","Changes the volume of the sound.","Immediately skips a certain duration of this source.","Gets the speed of the sound.","Changes the play speed of the sound. Does not adjust the …","Speed to play at.","Stops the sink.","Makes the sound stoppable.","Mixes this sound fading out with another sound fading in …","Takes a certain duration of this source and then stops.","Turns the sample into its equivalent as a floating-point.","Converts this sample into a standard i16 sample.","","","Converts this sample into a standard u16 sample.","Toggles the playback of this sink.","Returns the total duration of this source, if known.","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","Gets the volume of the sound.","Volume to play at.","Helper to set the speed from start of playback.","Helper to set the volume from start of playback.","Returns the value corresponding to the absence of sound.","Use this <code>Resource</code> to play audio.","Used internally to play audio on the current “audio …","A source of audio data","A type implementing this trait can be converted to a […","The type of the iterator of the audio samples, which …","The type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …","Settings to control playback from the start.","Raw data of the audio source.","Build and return a <code>Self::Decoder</code> of the implementing type","Play in repeat","Speed to play at.","Volume to play at.","Convenient query for giving a human friendly name to an …","Automatically generated <code>WorldQuery</code> item type for <code>DebugName</code>…","Maintains a count of frames rendered since the start of …","Adds frame counting functionality to Apps.","Component used to identify an entity. Stores a hash for …","A dummy type that is <code>!Send</code>, to force systems to run on the …","Marker trait for “plain old data”.","Derive the <code>Pod</code> trait for a struct","Helper for configuring and creating the default task …","Setup of default task pools: <code>AsyncComputeTaskPool</code>, …","Defines a simple way to determine how many threads to use …","Registration of default types to the <code>TypeRegistry</code> …","Trait for types that can be safely created with <code>zeroed</code>.","Derive the <code>Zeroable</code> trait for a struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the name of the entity as a <code>&amp;str</code>.","Used to determine number of async compute threads to …","","","","","","","","","","","","","","","","","","","","","","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","","","","","","","","","","","","","","","","","","Used to determine number of compute threads to allocate","Inserts the default thread pools into the given resource …","","","","","","","","","","","","","","","","","","","","","The unique identifier of the entity as a fallback.","The unique identifier of the entity as a fallback.","","","","SAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to determine number of IO threads to allocate","","","Under no circumstance use more than this many threads for …","If the number of physical cores is greater than …","Force using at least this many threads","If the number of physical cores is less than …","Updates the name of the entity in place.","A <code>Name</code> that the entity might have that is displayed if …","A <code>Name</code> that the entity might have that is displayed if …","","Creates a new <code>Name</code> from any string-like type.","","Target using this percentage of total cores, clamped by …","The Bevy Core Prelude.","","","","","","","","Sets the entity’s name.","","SAFETY: we call <code>set_archetype</code> for each member that …","SAFETY: we call <code>set_table</code> for each member that implements …","","Options for the <code>TaskPool</code> created at application start.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a configuration that forces using the given number …","Calls <code>zeroed</code>.","Convenient query for giving a human friendly name to an …","Adds frame counting functionality to Apps.","Component used to identify an entity. Stores a hash for …","Helper for configuring and creating the default task …","Setup of default task pools: <code>AsyncComputeTaskPool</code>, …","Registration of default types to the <code>TypeRegistry</code> …","Used to determine number of async compute threads to …","Used to determine number of compute threads to allocate","The unique identifier of the entity as a fallback.","Used to determine number of IO threads to allocate","If the number of physical cores is greater than …","If the number of physical cores is less than …","A <code>Name</code> that the entity might have that is displayed if …","Options for the <code>TaskPool</code> created at application start.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Run a prepass before the main pass to generate depth …","","","","","","","","","Applies a bloom effect to a HDR-enabled 2d or 3d camera.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Intensity of the bloom effect (default: 0.3).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Knee of the threshold curve (default: 0.1).","","","","","","","","","","Scale used when upsampling (default: 1.0).","","Baseline of the threshold curve (default: 1.0).","","","","","","","","","","","","","","","","","A <code>Resource</code> that stores the color that is used to clear the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Range in the vertex buffer of this item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Create an orthographic projection camera with a custom <code>Z</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the “main 3d render graph”.","","The depth clear operation to perform for the main 3d pass.","Clear with a specified value. Note that 0.0 is the far …","","","Load from memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The clear color operation to perform for the main 3d pass.","","","","","","","","","","","","","","","The depth clear operation to perform for the main 3d pass.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uses the <code>FULLSCREEN_SHADER_HANDLE</code> to output a","","","","","","","Adds support for Fast Approximate Anti-Aliasing (FXAA)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use lower sensitivity for a sharper, faster, result. Use …","Trims the algorithm from processing darks.","Enable render passes for FXAA.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration for the “main 3d render graph”.","","A <code>Resource</code> that stores the color that is used to clear the …","","","","","","","","The clear color operation to perform for the main 3d pass.","The depth clear operation to perform for the main 3d pass.","","","","","","","","","","","","","Alpha mask phase of the 3D prepass.","","If added to a <code>crate::prelude::Camera3d</code> then depth values …","","If added to a <code>crate::prelude::Camera3d</code> then vertex world …","Opaque phase of the 3D prepass.","Textures that are written to by the prepass.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The depth texture generated by the prepass. Exists only if …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The normals texture generated by the prepass. Exists only …","","","","","","","","","","","","","","","","","The size of the textures.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render node used by the prepass.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A timeline of <code>DiagnosticMeasurement</code>s of a specific type. …","Unique identifier for a Diagnostic","A single measurement of a Diagnostic","A collection of Diagnostics","Adds core diagnostics resources to an App.","","Adds “entity count” diagnostic to an App","","","","Adds “frame time” diagnostic to an App, specifically …","An App Plugin that logs diagnostics to the console","The width which diagnostic names will be printed as Plugin …","","Adds a System Information Diagnostic, specifically …","Add a new <code>Diagnostic</code>.","Add a new value as a <code>DiagnosticMeasurement</code>. Its timestamp …","Add a measurement to an enabled <code>Diagnostic</code>. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the simple moving average of this diagnostic’s …","","","","","","","","","","","","","","","","","","","","","","","","Clear the history of this diagnostic.","","","","","","","","","","","","","","","","","","","","","","","","Return the duration between the oldest and most recent …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Return the maximum number of elements for this diagnostic.","Get the latest <code>DiagnosticMeasurement</code> from an enabled …","","","Return the number of elements for this diagnostic.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over all <code>Diagnostic</code>.","Get the latest measurement from this diagnostic.","","","Create a new diagnostic with the given ID, name and …","","","","Return the exponential moving average of this diagnostic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the latest value from this diagnostic.","","","","The smoothing factor used for the exponential smoothing …","Add a suffix to use when logging the value, can be used to …","","Errors that can occur when loading a dynamic plugin","","","","","","","","","Dynamically links a plugin at the given path. The plugin …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Safety","","","","","","","","Types for defining <code>Archetype</code>s, collections of entities …","Types for handling <code>Bundle</code>s.","Types that detect when their internal data mutate.","Types for declaring and storing <code>Component</code>s.","Entity handling types.","Event handling types.","Most commonly used re-exported types.","","Types that enable reflection support.","Alerting events when a component is removed from an entity.","","Storage layouts for ECS data.","Tools for controlling behavior in an ECS application.","","Metadata for a single archetype within a <code>World</code>.","An opaque unique joint ID for a <code>Component</code> in an <code>Archetype</code> …","Metadata about an <code>Entity</code> in a <code>Archetype</code>.","An opaque generational id that changes every time the set …","An opaque unique ID for a single <code>Archetype</code> within a <code>World</code>.","An opaque location within a <code>Archetype</code>.","The backing store of all <code>Archetype</code>s within a <code>World</code>.","The ID for the <code>Archetype</code> without any components.","Archetypes and bundles form a graph. Adding or removing a …","","Safety:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator of all of the components in the archetype.","Checks if the archetype contains a specific component. …","","","","","","","","","","","","","","","","Fetches a immutable reference to the archetype’s <code>Edges</code>, …","Fetches an immutable reference to the archetype without …","","The ID of the entity.","Fetches the row in the <code>Table</code> where the components for the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Fetches an immutable reference to an <code>Archetype</code> using its …","Checks the cache for the target archetype when adding a …","Fetches the corresponding <code>ArchetypeComponentId</code> for a …","","","","Checks the cache for the target archetype when removing a …","Checks the cache for the target archetype when removing a …","","Gets the type of storage where a component in the …","","","Fetches the ID for the archetype.","","Gets the index of the row.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the archetype has any entities.","Returns a read-only iterator over all archetypes.","Gets the total number of entities that belong to the …","Fetches the total number of <code>Archetype</code>s within the world.","Creates a <code>ArchetypeRow</code>.","","Gets an iterator of all of the components stored in …","","Gets an iterator of all of the components stored in <code>Table</code>s.","Fetches the archetype’s <code>Table</code> ID.","The row in the <code>Table</code> where the entity’s components are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The (arbitrarily chosen) minimum number of world tick …","Types that can read change detection information. This …","Types that implement reliable change detection.","The type contained within this smart pointer","The maximum change tick difference that won’t overflow …","Unique mutable borrow of an entity’s component","Unique mutable borrow of resources or an entity’s …","Unique borrow of a non-<code>Send</code> resource.","Shared borrow of an entity’s component with access to …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","","","","Returns a pointer to the value without taking ownership of …","Returns an immutable pointer to the value without taking …","","","Manually bypasses change detection, allowing you to mutate …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Returns the pointer to the value, marking it as changed.","","Returns <code>true</code> if this value was added after the system last …","","Returns <code>true</code> if this value was added or mutably …","","Returns the change tick recording the time this data was …","","Returns a <code>MutUntyped</code> with a smaller lifetime. This is …","Flags this value as having been changed.","","Sets <code>self</code> to <code>value</code>, if and only if <code>*self != *value</code>","","Manually sets the change tick recording the time when this …","","","","","","Transforms this <code>MutUntyped</code> into a <code>Mut&lt;T&gt;</code> with the same …","A data type that can be used to store data for an entity.","","","A semi-opaque value which uniquely identifies the type of …","Initialize and fetch a <code>ComponentId</code> for a specific type.","","","Records when a component was added and when it was last …","","","Provides fast addition and removal of components, but …","","","The storage used for a specific component type.","Provides fast and cache-friendly iteration, but slower …","","Used to track changes in state between system runs, e.g. …","Wrapper around <code>Tick</code>s for a single component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","","","","","","","","","","","","","","","Get the function which should be called to clean up values …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Type-erased equivalent of <code>Components::component_id</code>.","","Safety","","","Type-erased equivalent of <code>Components::resource_id</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the component was added after the system …","Returns <code>true</code> if the component was added or mutably …","","Returns <code>true</code> if this <code>Tick</code> occurred since the system’s …","","","","","","","Create a new <code>ComponentDescriptor</code> for the type <code>T</code>.","","","Create a new <code>ComponentDescriptor</code> for a resource.","Create a new <code>ComponentDescriptor</code>.","","Returns the <code>ComponentId</code> of the given <code>Resource</code> type <code>T</code>.","Manually sets the change tick.","Manually sets the change tick.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>World</code>’s internal metadata store on all of its entities.","Lightweight identifier of an entity.","A location of an entity in an archetype.","A mapping from one set of entities to another.","","Operation to map all contained <code>Entity</code> fields in a type to …","The errors that might be returned while using …","An entity ID with a placeholder value. This may or may not …","An <code>Iterator</code> returning a sequence of <code>Entity</code> values from …","Allocate an entity ID directly.","Allocate a specific entity ID, overwriting its generation.","","The ID of the <code>Archetype</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Archetype</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears all <code>Entity</code> from the World.","","","","","","","","","","Returns true if the <code>Entities</code> contains <code>entity</code>.","","","","","","","","","","","Gets the given entity’s corresponding entry in the map …","","","","","","Allocates space for entities previously reserved with …","Safety","","","","","","","","Destroy an entity, allowing it to be reused.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reconstruct an <code>Entity</code> previously destructured with …","Creates a new entity ID with the specified <code>index</code> and a …","","","Returns the generation of this Entity’s index. The …","Returns the corresponding mapped entity.","Returns …","","","","","","","","Return a transiently unique identifier.","","","","Inserts an entities pair into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the map contains no elements.","Checks if any entity is currently active.","An iterator visiting all (key, value) pairs in arbitrary …","An iterator visiting all keys in arbitrary order.","Returns the number of elements in the map.","The count of currently allocated entities.","Updates all <code>Entity</code> references stored inside using …","","","","","","","","","","","","Removes an <code>entity</code> from the map, returning the mapped value …","Ensure at least <code>n</code> allocations can succeed without …","Reserve entity IDs concurrently.","Reserve one entity ID concurrently.","Get the <code>Entity</code> with a given id, if it exists in this …","","","","","","","","The ID of the <code>Table</code> the <code>Entity</code> belongs to.","The index of the <code>Entity</code> within its <code>Table</code>.","Convert to a form convenient for passing outside of rust.","","","","The count of all entities in the <code>World</code> that have ever been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting all values in arbitrary order.","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","An <code>EventId</code> uniquely identifies an event.","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all events.","Consumes all available events.","See <code>EventReader::clear()</code>","","","","","","","","","","","","","","","","Creates a draining iterator that removes all events.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a specific event by id if it still exists in the …","","","","Gets a new <code>ManualEventReader</code>. This will include all events …","Gets a new <code>ManualEventReader</code>. This will ignore all events …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no events in this collection.","Returns <code>true</code> if there are no events available to read.","See <code>EventReader::is_empty()</code>","Iterates over the events this <code>EventReader</code> has not seen …","See <code>EventReader::iter</code>","Iterates over events that happened since the last “update…","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","See <code>EventReader::iter_with_id</code>","","","Determines the number of events available to be read from …","See <code>EventReader::len</code>","","Amount of events we missed.","","","","","","","Oldest id still in the events buffer.","","“Sends” an <code>event</code> by writing it to the current event …","Sends an <code>event</code>. <code>EventReader</code>s can then read the event. See …","","Sends the default value of the event. Useful when the …","Sends the default value of the event. Useful when the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the event buffers and clears the oldest event …","A system that calls <code>Events::update</code> once per frame.","Iterate over only the events.","A filter on a component that only retains results added …","The <code>AnyOf</code> query parameter fetches entities with any of the …","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","<code>WorldQuery</code> that tracks changes and additions for component …","A filter on a component that only retains results added or …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A data type that can be used to store data for an entity.","","A <code>SystemParam</code> that stores a buffer which gets applied to …","Types that can read change detection information. This …","Types that implement reliable change detection.","Lightweight identifier of an entity.","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Creates an instance of the type this trait is implemented …","Wrapper type to mark a <code>SystemParam</code> as an input.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","The type contained within this smart pointer","An extension trait providing the <code>IntoPipeSystem::pipe</code> …","Conversion trait to turn something into a <code>System</code>.","Types that can be converted into a <code>SystemConfig</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can be converted into a <code>SystemSetConfig</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","","A system local <code>SystemParam</code>.","Unique mutable borrow of an entity’s component","The next state of <code>State&lt;S&gt;</code>.","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","A <code>SystemSet</code> that will run within <code>CoreSet::Update</code> when this …","A filter that tests if any of the given filters apply.","The system’s output.","An alternative to <code>Commands</code> that can be used in parallel …","A collection of potentially conflicting <code>SystemParam</code>s …","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","Shared borrow of an entity’s component with access to …","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to operate on reflected <code>Resource</code> of a type.","A <code>SystemParam</code> that grants access to the entities that had …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","A collection of systems, and the metadata and executor …","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","","An ECS system that can be added to a <code>Schedule</code>","","A trait implemented for all functions that can be used as …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from this …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from this …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Instructs the executor to call <code>apply_buffers</code> on the …","Returns the system’s archetype component <code>Access</code>.","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","Manually bypasses change detection, allowing you to mutate …","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","","Returns the system’s component <code>Access</code>.","System adapter that utilizes the […","Returns the system’s default system sets.","Creates a boxed clone of the label corresponding to this …","System adapter that utilizes the […","Creates <code>Self</code> using data from the given World","Gets the system’s last change tick","System adapter that ignores the output of the previous …","Add to the provided “base” <code>set</code>. For more information …","Add to the provided “base” <code>set</code>. For more information …","Add these systems to the provided “base” <code>set</code>. For more …","Add these system sets to the provided “base” <code>set</code>. For …","Add this set to the schedules’s default base set.","Add to the provided <code>set</code>.","Add to <code>set</code> membership.","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","System adapter that utilizes the […","Initialize the system.","Turns this value into its corresponding <code>System</code>.","","Returns <code>true</code> if this value was added after the system last …","Returns <code>true</code> if this set is a “base system set”. …","Returns <code>true</code> if this value was added or mutably …","Returns true if the system must be run exclusively.","Returns true if the system is <code>Send</code>.","Returns <code>true</code> if this system set is a <code>SystemTypeSet</code>.","Returns the change tick recording the time this data was …","Returns the system’s name.","Don’t add this system to the schedules’s default set.","Generates a  <code>Condition</code> that inverses the result of passed …","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","","Runs the system with the given input in the world.","Run the systems in this set only if the <code>Condition</code> is <code>true</code>.","Run only if the <code>Condition</code> is <code>true</code>.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Runs the system with the given input in the world. Unlike …","Flags this value as having been changed.","Sets <code>self</code> to <code>value</code>, if and only if <code>*self != *value</code>","Sets the system’s last change tick","Manually sets the change tick recording the time when this …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Returns the <code>TypeId</code> of the underlying system type.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","Update the system’s archetype component <code>Access</code>.","Returns an iterator over all the state variants.","System adapter that utilizes the […","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","Type-erased Box-like pointer to some unknown type chosen …","Type-erased borrow of some unknown type chosen when …","Type-erased mutable borrow of some unknown type chosen …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","Creates a dangling pointer with specified alignment. See …","Safety","Safety","Returns a copy of the contained value.","Tracks read and write access to specific elements in a …","A filter on a component that only retains results added …","","The <code>AnyOf</code> query parameter fetches entities with any of the …","A marker trait to indicate that the filter works at an …","Dictates how a parallel query chunks up large …","<code>WorldQuery</code> that tracks changes and additions for component …","A filter on a component that only retains results added or …","Per archetype/table state used by this <code>WorldQuery</code> to fetch …","An <code>Access</code> that has been filtered to include and exclude …","A collection of <code>FilteredAccess</code> instances.","Returns true if (and only if) this Fetch relies strictly …","Returns true if (and only if) every table of every …","The item returned by this <code>WorldQuery</code>","","","","<code>WorldQuery</code> used to nullify queries by turning <code>Query&lt;Q&gt;</code> …","A filter that tests if any of the given filters apply.","An iterator over <code>K</code>-sized combinations of query items …","","An error that occurs when retrieving a specific <code>Entity</code>’s …","The <code>Fetch</code> of a <code>WorldQuery</code>, which is used to store state …","The item type returned when a <code>WorldQuery</code> is iterated over","An <code>Iterator</code> over query results of a <code>Query</code>.","An <code>Iterator</code> over the query items generated from an …","A parallel iterator over query results of a <code>Query</code>.","An error that occurs when evaluating a <code>QueryState</code> as a …","Provides scoped access to a <code>World</code> state according to a …","The read-only <code>Fetch</code> of a <code>WorldQuery</code>, which is used to …","The read-only variant of the item type returned when a …","The read-only variant of this <code>WorldQuery</code>, which satisfies …","A world query that is read only.","State used to construct a <code>Self::Fetch</code>. This will be cached …","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Types that can be fetched from a <code>World</code> using a <code>Query</code>.","Implement <code>WorldQuery</code> to use a struct as a parameter in a …","Returns a reference to the underlying unfiltered access.","Returns a mutable reference to the underlying unfiltered …","Adds the filtered access to the set.","Adds access to the element given by <code>index</code>.","Adds access to the element given by <code>index</code>.","Retains only combinations where the element given by <code>index</code> …","Retains only combinations where the element given by <code>index</code> …","Adds exclusive access to the element given by <code>index</code>.","Adds exclusive access to the element given by <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","The upper and lower limits for how large a batch of …","","The number of batches per thread in the <code>ComputeTaskPool</code>. …","Changes the batching strategy used when iterating.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all accesses.","","","","","","","","While this function can be called for any query, it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the unfiltered access of the entire …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds all access from <code>other</code>.","Adds all access and filters from <code>other</code>.","","","","Fetch <code>Self::Item</code> for either the given <code>entity</code> in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get next result from the query","Get next combination of queried components","Safety","","","","","","","","","","","","","","","","","","","Declares a batching strategy with a fixed batch size.","","","","","","","","","","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>func</code> on each query result in parallel.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns a vector of elements that the access and <code>other</code> …","Returns a vector of elements that this and <code>other</code> cannot …","Returns a vector of elements that this set and <code>other</code> …","Returns a vector of elements that this set and <code>other</code> …","","Returns the read-only query results for the given array of …","Returns the query results for the given array of <code>Entity</code>.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","","Returns a single immutable query result when there is …","Returns a single mutable query result when there is …","Returns a query result when there is exactly one entity …","Returns a query result when there is exactly one entity …","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Increases the set capacity to the specified amount.","Returns <code>true</code> if this can access the element given by <code>index</code>.","Returns <code>true</code> if this has access to all indexed elements …","Returns <code>true</code> if this can exclusively access the element …","","","","Creates a new instance of this fetch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this component has been added since the …","Returns true if this component has been changed since the …","Returns <code>true</code> if the access and <code>other</code> can be active at the …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Returns <code>true</code> if this and <code>other</code> can be active at the same …","Checks if the query is empty for the given <code>World</code>, where …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query results for the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>QueryState</code> from a given <code>World</code> and inherits …","Creates an empty <code>Access</code> collection.","Creates a new unconstrained default batching strategy.","Update the current <code>QueryState</code> with information from the …","","","","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","","","Sets this as having access to all indexed elements (i.e. …","Sets the underlying unfiltered access as having access to …","Returns the indices of the elements this has non-exclusive …","Returns the indices of the elements this has access to.","Adjusts internal state to account for the next <code>Archetype</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adjusts internal state to account for the next <code>Table</code>. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function manually implements subtyping for the query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a single immutable query result when there is …","Returns a single mutable query result when there is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a query for the given <code>World</code>, checks if the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the indices of the elements this has exclusive …","A struct used to operate on reflected <code>Component</code> of a type.","The raw function pointers needed to make up a …","","A struct used to operate on reflected <code>Resource</code> of a type.","The raw function pointers needed to make up a …","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Function pointer implementing <code>ReflectComponent::apply()</code>.","Function pointer implementing <code>ReflectResource::apply()</code>.","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Function pointer implementing …","Function pointer implementing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether entity contains this <code>Component</code>","Function pointer implementing <code>ReflectComponent::contains()</code>.","Gets the value of this <code>Component</code> type from entity from …","Gets the value of this <code>Resource</code> type from <code>source_world</code> and …","Function pointer implementing <code>ReflectComponent::copy()</code>.","Function pointer implementing <code>ReflectResource::copy()</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Insert a reflected <code>Component</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Resource</code> into the world like <code>insert()</code>.","Function pointer implementing <code>ReflectComponent::insert()</code>.","Function pointer implementing <code>ReflectResource::insert()</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Create a custom implementation of <code>ReflectComponent</code>.","Get the default set of <code>ReflectComponentFns</code> for a specific …","Create a custom implementation of <code>ReflectResource</code>.","Get the default set of <code>ReflectResourceFns</code> for a specific …","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","Function pointer implementing <code>ReflectComponent::reflect()</code>.","Function pointer implementing <code>ReflectResource::reflect()</code>.","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","Function pointer implementing …","Safety","Safety","Function pointer implementing …","Function pointer implementing …","Removes this <code>Component</code> type from the entity. Does nothing …","Removes this <code>Resource</code> type from the world. Does nothing if …","Function pointer implementing <code>ReflectComponent::remove()</code>.","Function pointer implementing <code>ReflectResource::remove()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around <code>Entity</code> for <code>RemovedComponents</code>. Internally, …","Wrapper around a map of components to …","Wrapper around a <code>ManualEventReader&lt;RemovedComponentEntity&gt;</code> …","A <code>SystemParam</code> that grants access to the entities that had …","Iterator over entities that had a specific component …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Systems with conflicting access have indeterminate run …","","","","A system that determines if one or more scheduled systems …","Tried to order a system (set) relative to a system set it …","The dependency graph contains a cycle.","A system (set) has been told to run before itself.","Occurrences are logged and result in errors.","Specifies how a <code>Schedule</code> will be run.","The hierarchy of system sets contains a cycle.","A system set contains itself.","The hierarchy of system sets contains redundant edges.","Occurences are completely ignored.","Types that can be converted into a <code>SystemConfig</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can be converted into a <code>SystemSetConfig</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","","Specifies how schedule construction should respond to …","New-typed <code>ThreadExecutor</code> <code>Resource</code> that is used to run …","Runs the schedule using a thread pool. Non-conflicting …","Runs the schedule using a thread pool. Non-conflicting …","The next state of <code>State&lt;S&gt;</code>.","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","A <code>SystemSet</code> that will run within <code>CoreSet::Update</code> when this …","A collection of systems, and the metadata and executor …","Category of errors encountered during schedule …","Specifies miscellaneous settings for schedule construction.","A strongly-typed label.","Derive macro generating an impl of the trait <code>ScheduleLabel</code>.","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","","Tried to add a set to multiple base sets.","Tried to order system sets that share systems.","Like <code>SingleThreaded</code> but calls <code>apply_buffers</code> immediately …","A variant of <code>SingleThreadedExecutor</code> that calls …","Runs the schedule using a single thread.","Runs the schedule using a single thread.","A finite-state machine whose transitions have associated …","Types that can define world-wide states in a finite-state …","","A <code>System</code> with scheduling metadata.","A collection of <code>SystemConfig</code>.","Tried to add a system to multiple base sets.","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","A <code>SystemSet</code> with scheduling metadata.","A collection of <code>SystemSetConfig</code>.","A <code>SystemSet</code> grouping instances of the same function.","Tried to order a system (set) relative to all instances of …","Tried to run a schedule before all of its systems have …","Occurrences are logged only.","Add a system to the schedule.","Add a collection of systems to the schedule.","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","","","","Run after all systems in <code>set</code>.","","Run after all systems in <code>set</code>.","","","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from this …","","","","Suppress warnings and errors that would result from these …","","Suppress warnings and errors that would result from …","","","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from this …","","","","Suppress warnings and errors that would result from these …","","Suppress warnings and errors that would result from …","","","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Instructs the executor to call <code>apply_buffers</code> on the …","Directly applies any accumulated system buffers (like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","","","Run before all systems in <code>set</code>.","","Run before all systems in <code>set</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Treat this collection as a sequence of systems.","","Treat this collection as a sequence of system sets.","","","","","","","","","","","","","","","","","","","","","","","Configures a system set in this schedule, adding it if it …","Configures a collection of system sets in this schedule, …","Does a schedule with the provided label already exist?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a boxed clone of the label corresponding to this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns a reference to the schedule associated with <code>label</code>, …","Returns the schedule’s current execution strategy.","","","","","Returns a mutable reference to the schedule associated …","","","","","","","Add to the provided “base” <code>set</code>. For more information …","Add to the provided “base” <code>set</code>. For more information …","","","","Add these systems to the provided “base” <code>set</code>. For more …","","Add these system sets to the provided “base” <code>set</code>. For …","","","","Add this set to the schedules’s default base set.","","","","Add to the provided <code>set</code>.","Add to <code>set</code> membership.","","","","Add these systems to the provided <code>set</code>.","","Add these system sets to the provided <code>set</code>.","","","Initializes any newly-added systems and conditions, …","Inserts a labeled schedule into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this set is a “base system set”. …","","Returns <code>true</code> if this system set is a <code>SystemTypeSet</code>.","","","","Constructs an empty <code>Schedule</code>.","","","","Constructs an empty <code>Schedules</code> with zero initial capacity.","","Don’t add this system to the schedules’s default set.","","","Removes the schedule corresponding to the <code>label</code> from the …","Removes the (schedule, label) pair corresponding to the …","Runs all systems in this schedule on the <code>world</code>, using its …","Run the enter schedule for the current state","Run the systems in this set only if the <code>Condition</code> is <code>true</code>.","Run only if the <code>Condition</code> is <code>true</code>.","","","","","Tentatively set a planned state transition to <code>Some(state)</code>.","Set whether the schedule applies buffers on final time or …","Changes miscellaneous build settings.","","Sets the schedule’s execution strategy.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over all the state variants.","Determines whether the presence of ambiguities (systems …","Determines whether the presence of redundant edges in the …","","","","","","","Generates a  <code>Condition</code> that inverses the result of passed …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","","A sparse data structure of Components","","The type-erased backing storage and metadata for a single …","The backing store for all <code>Resource</code>s stored in the <code>World</code>.","A data structure that blends dense and sparse storage","Represents something that can be stored in a <code>SparseSet</code> as …","A collection of <code>ComponentSparseSet</code> storages, indexed by …","The raw data stores of a World","A column-oriented structure-of-arrays based storage for …","An opaque unique ID for a <code>Table</code> within a <code>World</code>.","A opaque newtype for rows in <code>Table</code>s. Specifies a single …","A collection of <code>Table</code> storages, indexed by <code>TableId</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears all resources.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets read-only access to a resource, if it exists.","","","","","","","","Safety","","","","Safety","","Gets a read-only pointer to the underlying resource, if …","","","","Safety","Safety","","","","","","Gets a read-only reference to the change ticks of the …","","","Safety","","","Gets the <code>ArchetypeComponentId</code> for the resource.","","","Gets the index of the row.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no resources stored in the <code>World</code>,","","","","Returns true if the resource is populated.","","","","Iterate over all resources that have been initialized, …","","","","The total number of resources stored in the <code>World</code>","","","","","","Creates a <code>TableRow</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience type alias for a boxed <code>System</code> trait object.","A <code>World</code> mutation.","Densely and efficiently stores a queue of heterogenous …","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A <code>SystemParam</code> that stores a buffer which gets applied to …","","A <code>Command</code> which gets executed for a given <code>Entity</code>.","A list of commands that will be run to modify an entity.","A function system that runs with exclusive <code>World</code> access.","","A trait implemented for all exclusive system functions …","","The <code>System</code> counter part of an ordinary function.","","Wrapper type to mark a <code>SystemParam</code> as an input.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","","","","","An extension trait providing the <code>IntoPipeSystem::pipe</code> …","Conversion trait to turn something into a <code>System</code>.","","","","The item type returned when constructing this system param.","A system local <code>SystemParam</code>.","<code>Command</code> to log the components of a given entity. See …","","","","","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","The system’s output.","An alternative to <code>Commands</code> that can be used in parallel …","A collection of potentially conflicting <code>SystemParam</code>s …","A <code>System</code> created by piping the output of the first system …","System parameter that provides selective access to the …","An error that occurs when retrieving a specific <code>Entity</code>’s …","<code>System</code> types that do not modify the <code>World</code> when run. This …","A <code>SystemParam</code> that only reads a given <code>World</code>.","","","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","","","","Used to store data which persists across invocations of a …","A helper for using system parameters in generic contexts","An ECS system that can be added to a <code>Schedule</code>","","Types that can be used with <code>Deferred&lt;T&gt;</code> in systems. This …","A <code>SystemParam</code> that reads the previous and current change …","The metadata of a <code>System</code>.","Name of the system that corresponds to this …","A parameter that can be used in a <code>System</code>.","Implement <code>SystemParam</code> to use a struct as a parameter in a …","A trait implemented for all functions that can be used as …","Shorthand way of accessing the associated type …","Holds on to persistent state required to drive <code>SystemParam</code> …","Turns an <code>EntityCommand</code> type into a <code>Command</code> type.","Pushes an <code>EntityCommand</code> to the queue, which will get …","Pushes a generic <code>Command</code> to the command queue.","","","","","","","","","","","Applies any deferred mutations to the <code>World</code>.","Applies all state queued up for <code>SystemParam</code> values. For …","Applies any deferred mutations stored in this <code>SystemParam</code>…","","","","","","","","","","","","Execute the queued <code>Command</code>s in the world. This clears the …","","","","","","","Returns the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that a given function is a read-only system.","Ensure that a given function is a system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current <code>World</code> change tick seen by the system.","","","","","","","","","","","Returns the underlying <code>Commands</code>.","Returns the system’s component <code>Access</code>.","","","","Returns <code>true</code> if the given <code>Entity</code> matches the query.","","","","Returns the system’s default system sets.","","","","","","","","","","","","","","","Despawns the entity.","","Despawns the provided entity and its children.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>.","","","","","","","","","","","","","","","","","","","","","Runs <code>f</code> on each read-only query item.","Runs <code>f</code> on each query item.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Returns the read-only query item for the given <code>Entity</code>.","Returns a shared reference to the component <code>T</code> of the given …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …","Returns the query item for the given <code>Entity</code>, with the …","Gets the system’s last change tick","","","","Retrieve the <code>SystemParam</code> values. This can only be called …","Retrieve the mutable <code>SystemParam</code> values.  This will not …","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","Retrieve the mutable <code>SystemParam</code> values.","Returns the query item for the given <code>Entity</code>.","Pushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …","","Safety","","","","","","","","","","","","","","","","","","","","","","","Returns a single read-only query item when there is …","Returns a single query item when there is exactly one …","Returns the query item for the given <code>Entity</code>.","Retrieve the <code>SystemParam</code> values. This will not update …","Returns the <code>Entity</code> id of the entity.","","","","","","","","","","","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Registers any <code>World</code> access used by this <code>SystemParam</code> and …","","","","","","","","","","","","","","","","","","","","","Initialize the system.","","","","Adds a <code>Bundle</code> of components to the entity.","","Pushes a <code>Command</code> to the queue for creating entities, if …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Due to lifetime limitations of the <code>Deref</code> trait, this …","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","Get the value of the parameter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns this value into its corresponding <code>System</code>.","","","","","","","Returns <code>true</code> if the resource was added after the system …","","","","Returns <code>true</code> if the resource was added or mutably …","Returns <code>true</code> if there are no query items.","Returns true if the system must be run exclusively.","","","","Returns true if the system is <code>Send</code>.","","","","Returns true if the system is <code>Send</code>.","Returns an <code>Iterator</code> over the read-only query items.","","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Iterates over all possible combinations of <code>K</code> query items …","","Returns an <code>Iterator</code> over the query items, with the actual …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query items generated from an …","Returns an <code>Iterator</code> over the query items.","Returns an <code>Iterator</code> over the query items.","Returns the <code>World</code> change tick seen by the system the …","","","","","Logs the components of the entity at the info level.","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","","","Returns the system’s name.","","","","","Returns the system’s name","","Manual constructor for creating a <code>PipeSystem</code>. This should …","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …","","For the specified <code>Archetype</code>, registers the components …","","","","","","","","","","","","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …","","","","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 0th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 1st parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 2nd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 3rd parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 4th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 5th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 6th parameter in this <code>ParamSet</code>…","Gets exclusive access to the 7th parameter in this <code>ParamSet</code>…","Returns a parallel iterator over the query results for the …","Returns a parallel iterator over the query results for the …","","","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","","","","","Push a <code>Command</code> onto the queue.","","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Removes a <code>Bundle</code> of components from the entity.","","","","Pushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …","","","","","","Runs the system with the given input in the world.","","","","","Runs the system with the given input in the world. Unlike …","","","","","","","","Sets the system’s last change tick","","","","","","Sets the system to be not <code>Send</code>.","","","Returns a single read-only query item when there is …","Returns a single query item when there is exactly one …","Pushes a <code>Command</code> to the queue for creating a new entity …","Pushes a <code>Command</code> to the queue for creating entities with a …","Pushes a <code>Command</code> to the queue for creating a new empty …","","Returns another <code>Query</code> from this that fetches the read-only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TypeId</code> of the underlying system type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the system’s archetype component <code>Access</code>.","","","","Updates the state’s internal view of the <code>world</code>’s …","","Returns a <code>Command</code> which executes this <code>EntityCommand</code> for …","","","","","","","","","","","","","","","","","","","","","The (arbitrarily chosen) minimum number of world tick …","A mutable reference to a particular <code>Entity</code> and all of its …","A read-only reference to a particular <code>Entity</code> and all of …","Creates an instance of the type this trait is implemented …","Unique mutable borrow of an entity’s component","Shared borrow of an entity’s component with access to …","","Stores and exposes operations on entities, components, …","","","Exposes safe mutable access to multiple resources at a …","A unique identifier for a <code>super::World</code>.","","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","","","Retrieves this world’s Archetypes collection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UnsafeWorldCell</code> view with complete …","Creates a new <code>UnsafeWorldCell</code> view with only read access …","","","","","","","","","","","","","","","","","","","","","Retrieves this world’s Bundles collection","","Retrieves a <code>WorldCell</code>, which safely enables multiple …","Reads the current change tick of this world.","Iterates all component change ticks and clamps any older …","Runs both <code>clear_entities</code> and <code>clear_resources</code>, invalidating …","Despawns all entities in this <code>World</code>.","Clears all resources in this <code>World</code>.","Clears the internal component tracker state.","","","","","","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","Retrieves this world’s Components collection","","","","","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","","","","","","","","","","","Despawns the given <code>entity</code>, if it exists. This will also …","","Despawns the provided entity and its children.","","","","","","","","","","","","","","","","","Retrieves this world’s Entities collection","Retrieves this world’s Entities collection mutably","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityMut</code> that exposes read and write …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …","Convert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates <code>Self</code> using data from the given World","","","Retrieves a reference to the given <code>entity</code>’s Component of …","","Gets the component of the given <code>ComponentId</code> from the …","Retrieves an immutable untyped reference to the given …","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityMut</code> that exposes read and write …","","","Retrieves a mutable reference to the given <code>entity</code>’s …","Gets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a <code>!Send</code> resource to the resource with the id …","Gets a <code>!Send</code> resource to the resource with the id …","Gets an immutable reference to the non-send resource of …","Gets a reference to the non-send resource of the given …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","Returns an <code>EntityMut</code> for the given <code>entity</code> (if it exists) …","","Gets a reference to the resource of the given type","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of type <code>T</code> if it …","","","","Retrieves this <code>World</code>’s unique ID","","","Initializes a new <code>Component</code> type and returns the …","Initializes a new <code>Component</code> type and returns the …","","Initializes a new non-send resource and returns the …","Initializes a new resource and returns the <code>ComponentId</code> …","","","Adds a <code>Bundle</code> of components to the entity.","","Inserts a new <code>!Send</code> resource with the given <code>value</code>. Will …","Inserts a new non-send resource with the given <code>value</code>.","For a given batch of (Entity, Bundle) pairs, either spawns …","Inserts a new resource with the given <code>value</code>.","Inserts a new resource with the given <code>value</code>. Will replace …","Returns the components of an <code>Entity</code> through <code>ComponentInfo</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume <code>self</code> and return a mutable reference to the …","","","","","","","","","","","","","","","Return this <code>EntityMut</code>’s <code>World</code>, consuming itself.","","","","","","","Returns an <code>Entity</code> iterator of current entities.","","","","","","","Maps to an inner value by applying a function to the …","","Creates a new empty World","Create a new, unique <code>WorldId</code>. Returns <code>None</code> if the supply …","","Gets an immutable reference to the non-send resource of …","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","","Returns <code>QueryState</code> for the given <code>WorldQuery</code>, which is used …","Returns <code>QueryState</code> for the given filtered <code>WorldQuery</code>, …","Reads the current change tick of this world.","Returns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …","Removes a <code>Bundle</code> of components from the entity and returns …","","Remove any components in the bundle that the entity has.","Removes the resource of a given type, if it exists. …","Removes a <code>!Send</code> resource from the world and returns it, if …","","Removes the resource of a given type and returns it, if it …","Removes the resource of a given type, if it exists. …","Returns an iterator of entities that had components of …","Retrieves this world’s <code>RemovedComponentEvents</code> collection","Returns an iterator of entities that had components with …","Gets a reference to the resource of the given type","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Temporarily removes the requested resource from this <code>World</code>…","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","Runs the <code>Schedule</code> associated with the <code>label</code> a single time.","Sends an <code>Event</code>.","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","Sends the default value of the <code>Event</code> of type <code>E</code>.","","","","","","","","","","Spawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …","Spawns a batch of entities with the same component Bundle …","Spawns a new <code>Entity</code> and returns a corresponding <code>EntityMut</code>, …","Retrieves this world’s Storages collection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the internal entity location to match the current …","","","","Returns this <code>EntityMut</code>’s world.","Gives mutable access to this <code>EntityMut</code>’s <code>World</code> in a …","A interior-mutable reference to a particular <code>Entity</code> and …","Variant of the <code>World</code> where resource and component accesses …","","Retrieves this world’s Archetypes collection","","","","","","","","","","","Retrieves this world’s Bundles collection","","","","","","","Retrieves this world’s Components collection","","","","","","Retrieves this world’s Entities collection","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Gets the component of the given <code>ComponentId</code> from the …","Retrieves the change ticks for the given component. This …","Retrieves the change ticks for the given <code>ComponentId</code>. This …","Retrieves an <code>UnsafeEntityCell</code> that exposes read and write …","Safety","Retrieves a mutable untyped reference to the given <code>entity</code>…","Gets a reference to the non-send resource of the given …","Gets a <code>!Send</code> resource to the resource with the id …","Gets a mutable reference to the non-send resource of the …","Gets a <code>!Send</code> resource to the resource with the id …","Gets a reference to the resource of the given type if it …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a pointer to the resource with the id <code>ComponentId</code> if …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Reads the current change tick of this world.","","","","","","","","","","","Gets a reference to the <code>&amp;World</code> this <code>UnsafeWorldCell</code> …","","Gets a reference to the <code>World</code> this <code>UnsafeWorldCell</code> belong …","This <code>&amp;mut World</code> counts as a mutable borrow of every …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Representation of a loaded glTF file.","","An error that occurs when loading a glTF file.","","Loads glTF files with all of their data as their …","A glTF mesh, which may consist of multiple <code>GltfPrimitives</code> …","A glTF node with all of its child nodes, its <code>GltfMesh</code>, …","Adds support for glTF file loading to the app.","Part of a <code>GltfMesh</code> that consists of a <code>Mesh</code>, an optional …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","Command that adds a child to an entity","An <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.","Trait defining how to build children","Trait that defines adding children to an entity directly …","Fired whenever an <code>Entity</code> is added as a child to a parent.","Struct for building children onto an entity","Fired whenever a child <code>Entity</code> is moved to a new parent.","Fired whenever a child <code>Entity</code> is removed from its parent.","Contains references to the child entities of this entity.","Command that clear all children from an entity.","An <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.","Despawns the given entity’s children recursively","Despawns the given entity and all its children recursively","Trait that holds functions for despawning recursively down …","An <code>Event</code> that is fired whenever there is a change in the …","The base plugin for handling <code>Parent</code> and <code>Children</code> components","An extension trait for <code>Query</code> that adds hierarchy related …","Command that inserts a child at a given index of a parent…","Holds a reference to the parent entity of this entity. …","Command that pushes children to the end of the entity’s …","Command that removes children from an entity, and removes …","Command that removes the parent of an entity, and removes …","Command that clear all children from an entity. And …","When enabled, runs …","Print a warning for each <code>Entity</code> with a <code>T</code> component whose …","Struct for adding children to an entity directly through …","Adds a single child","Adds a single child","Adds a command to this <code>ChildBuilder</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System to print a warning for each <code>Entity</code> with a <code>T</code> …","<code>Entity</code> whose parent must be removed.","Child entity to add","Removes all children from this entity. The <code>Children</code> …","","","","","","","","","","","","","","","Despawns all descendants of the given entity.","Despawns the provided entity alongside all descendants.","Function for despawning an entity and all its children","","","","","","","","","","","","","","","","","","","","","","Whether to run …","Target entity","Target entity","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Gets the <code>Entity</code> ID of the parent.","","","","","","","","","","","Inserts children at the given index","Inserts children at the given index","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","","","","","Returns a new <code>DescendantIter</code>.","Returns a new <code>AncestorIter</code>.","Constructs a new object","","","Run criteria that only allows running when …","Parent entity to add the child to","Returns the parent entity of this <code>ChildBuilder</code>","Returns the parent entity of this <code>WorldChildBuilder</code>","Pushes children to the back of the builder’s children. …","Pushes children to the back of the builder’s children","","","","","","","","","","","","","Removes the given children","Removes the given children","Removes the parent of this entity.","Remove the parent from this entity.","Removes all current children from this entity, replacing …","","","Sets the parent of this entity.","Set the <code>parent</code> of this entity. This entity will be added …","Spawns an entity with the given bundle and inserts it into …","Spawns an entity with the given bundle and inserts it into …","Spawns an <code>Entity</code> with no components and inserts it into …","Spawns an <code>Entity</code> with no components and inserts it into …","Swaps the child at <code>a_index</code> with the child at <code>b_index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>ChildBuilder</code> with the given children built in …","Creates a <code>WorldChildBuilder</code> with the given children built …","","","","","","","","","","The child that was added","The child that was removed","The child that was moved","The parent the child was added to","The parent the child was added to","The parent the child was removed from","The parent the child was removed from","Stores the position data of the input devices of type <code>T</code>.","The current “press” state of an element","A “press-able” input of type <code>T</code>.","Adds keyboard and mouse input to an App","","The largest possible axis value.","The smallest possible axis value.","","","","","","Returns <code>true</code> if any item in <code>inputs</code> has just been pressed.","Returns <code>true</code> if any item in <code>inputs</code> has just been released.","Returns <code>true</code> if any item in <code>inputs</code> has been pressed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the <code>just pressed</code> and <code>just released</code> data for every …","Clears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…","Clears the <code>just_released</code> state of the <code>input</code> and returns …","","","","","","","","","","","","","","","","","","","Returns an iterator of all the input devices that have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns a position data corresponding to the <code>input_device</code>.","","","","","An iterator visiting every just pressed input in arbitrary …","An iterator visiting every just released input in …","An iterator visiting every pressed input in arbitrary …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the <code>input</code> has just been pressed.","Returns <code>true</code> if the <code>input</code> has just been released.","","","","","","Registers a press for the given <code>input</code>.","Returns <code>true</code> if the <code>input</code> has been pressed.","","","","","","","","","","","","","","Registers a release for the given <code>input</code>.","Registers a release for all currently pressed inputs.","Removes the position data of the <code>input_device</code>, returning …","Clears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …","Clears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …","","","Sets the position data of the <code>input_device</code> to <code>position_data</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Settings for a <code>GamepadAxis</code>.","Errors that occur when setting axis settings for gamepad …","","Settings for a <code>GamepadButton</code>.","Manages settings for gamepad buttons.","Errors that occur when setting button settings for gamepad …","The C button.","","","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","The given parameter <code>deadzone_lowerbound</code> was not in range …","Parameter <code>deadzone_upperbound</code> was not less than or equal …","The given parameter <code>deadzone_lowerbound</code> was not in range …","","The right action button of the action pad (i.e. PS: …","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","Gamepad event for when the “value” (amount of …","A type of a <code>GamepadButton</code>.","","A Gamepad connection event. Created when a connection to a …","A gamepad event.","Metadata associated with a <code>Gamepad</code>.","Settings for all <code>Gamepad</code>s.","A collection of connected <code>Gamepad</code>s.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","Parameter <code>livezone_lowerbound</code> was not less than or equal …","The given parameter <code>livezone_lowerbound</code> was not in range …","The given parameter <code>deadzone_lowerbound</code> was not in range …","The mode button.","The upper action button of the action pad (i.e. PS: …","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","The given parameter was not in range 0.0..=1.0.","Parameter <code>release_threshold</code> was not less than or equal to …","The given parameter was not in range 0.0..=1.0.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","The select button.","The bottom action button of the action pad (i.e. PS: …","The start button.","The given parameter was not in range 0.0..=2.0.","The left action button of the action pad (i.e. PS: Square, …","The Z button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user defined axis settings.","The type of the axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user defined button axis settings.","The user defined button settings.","The type of the button.","","Clamps the <code>raw_value</code> according to the <code>AxisSettings</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The change in the gamepads connection.","Returns <code>true</code> if the <code>gamepad</code> is connected.","Get the value below which inputs will be rounded down to …","Get the value below which positive inputs will be rounded …","","","","","","","","","","","","","","","","","","","","","The default axis settings.","The default button axis settings.","The default button settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filters the <code>new_value</code> based on the <code>old_value</code>, according to …","Filters the <code>new_value</code> based on the <code>old_value</code>, according to …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","The gamepad whose connection status changed.","","","Uses <code>GamepadAxisChangedEvent</code>s to update the relevant <code>Input</code> …","Uses <code>GamepadButtonChangedEvent</code>s to update the relevant …","Handles <code>GamepadConnectionEvent</code>s and updates gamepad …","Splits the <code>GamepadEvent</code> event stream into it’s component …","Returns the <code>AxisSettings</code> of the <code>axis</code>.","Returns the <code>ButtonAxisSettings</code> of the <code>button</code>.","Returns the <code>ButtonSettings</code> of the <code>button</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The high value at which to apply rounding.","The <code>ID</code> of the gamepad.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over registered <code>Gamepad</code>s in an …","","","","","","","","","","","","","","","","Get the value above which negative inputs will be rounded …","Get the value above which inputs will be rounded up to 1.0.","The low value at which to apply rounding.","","","","","","","","","","","","","","","","","","Creates a new <code>Gamepad</code>.","Creates a new <code>GamepadButton</code>.","Creates a new <code>GamepadAxis</code>.","Creates a new <code>ButtonSettings</code> instance.","Creates a new <code>AxisSettings</code> instance.","","","","Get the button input threshold above which the button is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the button input threshold below which the button is …","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to set the value below which inputs will be rounded …","Try to set the value below which positive inputs will be …","Try to set the value above which negative inputs will be …","Try to set the value above which inputs will be rounded up …","Try to set the button input threshold above which the …","Try to set the button input threshold below which the …","Try to set the minimum value by which input must change …","Get the minimum value by which input must change before …","The threshold to apply rounding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to set the value below which inputs will be rounded …","Try to set the value below which positive inputs will be …","Try to set the value above which negative inputs will be …","Try to set the value above which inputs will be rounded up …","Try to set the button input threshold above which the …","Try to set the button input threshold below which the …","Try to set the minimum value by which input must change …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>A</code> key.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","The <code>Apostrophe</code> / <code>&#39;</code> key.","The <code>Apps</code> key.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The <code>Ax</code> key.","The <code>B</code> key.","The <code>Back</code> / <code>Backspace</code> key.","The <code>Backslash</code> / <code>\\\\</code> key.","The <code>C</code> key.","The <code>Calculator</code> key.","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","The <code>Colon</code> / <code>:</code> key.","The <code>Comma</code> / <code>,</code> key.","The <code>Compose</code> key on Linux.","The <code>Convert</code> key.","The <code>Copy</code> key.","The <code>Cut</code> key.","The <code>D</code> key.","The <code>Delete</code> key.","The <code>Down</code> / <code>Down Arrow</code> key.","The <code>E</code> key.","The <code>End</code> key.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","The <code>G</code> key.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","The <code>H</code> key.","The <code>Home</code> key.","The <code>I</code> key.","The <code>Insert</code> key, next to the <code>Backspace</code> key.","The <code>J</code> key.","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","A keyboard input event.","The <code>L</code> key.","The <code>LAlt</code> / <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>LBracket</code> / <code>Left Bracket</code> key.","The <code>LControl</code> / <code>Left Control</code> key.","The <code>LShift</code> / <code>Left Shift</code> key.","The <code>LWin</code> / <code>Left Windows</code> key. Maps to <code>Left Command</code> on Mac.","The <code>Left</code> / <code>Left Arrow</code> key.","The <code>M</code> key.","The <code>Mail</code> key.","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","The <code>Minus</code> / <code>-</code> key.","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","The <code>O</code> key.","The <code>Oem102</code> key.","The <code>P</code> key.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The <code>Period</code> / <code>.</code> key.","The <code>PlayPause</code> key.","The <code>Plus</code> / <code>+</code> key.","The <code>Power</code> key.","The <code>PrevTrack</code> key.","The <code>Q</code> key.","The <code>R</code> key.","The <code>RAlt</code> / <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>RBracket</code> / <code>Right Bracket</code> key.","The <code>RControl</code> / <code>Right Control</code> key.","The <code>RShift</code> / <code>Right Shift</code> key.","The <code>RWin</code> / <code>Right Windows</code> key. Maps to <code>Right Command</code> on Mac.","The <code>Return</code> / <code>Enter</code> key.","The <code>Right</code> / <code>Right Arrow</code> key.","The <code>S</code> key.","The scan code of a <code>KeyboardInput</code>.","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The <code>Semicolon</code> / <code>;</code> key.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","The <code>Stop</code> key.","The <code>Sysrq</code> key.","The <code>T</code> key.","The <code>Tab</code> / <code>   </code> key.","The <code>U</code> key.","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","The <code>Up</code> / <code>Up Arrow</code> key.","The <code>V</code> key.","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The <code>X</code> key.","The <code>Y</code> key.","The <code>Yen</code> key.","The <code>Z</code> key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The key code of the key.","Updates the <code>Input&lt;KeyCode&gt;</code> resource with the latest …","","","","","","","","","","","","","","","","","","","","","","","","","The scan code of the key.","","","","","","","The press state of the key.","","","","","","","","","","","","","","","","","","","","","","","","","The left mouse button.","The line scroll unit.","The middle mouse button.","A button on a mouse device.","A mouse button input event.","An event reporting the change in physical position of a …","The scroll unit.","A mouse wheel event.","Another mouse button with the associated number.","The pixel scroll unit.","The right mouse button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The mouse button assigned to the event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The change in the position of the pointing device since …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the <code>Input&lt;MouseButton&gt;</code> resource with the latest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pressed state of the button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The mouse scroll unit.","","","","","","","","","","","","The horizontal scroll value.","The vertical scroll value.","The <code>A</code> key.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","The <code>Apostrophe</code> / <code>&#39;</code> key.","The <code>Apps</code> key.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The <code>Ax</code> key.","Stores the position data of the input devices of type <code>T</code>.","The <code>B</code> key.","The <code>Back</code> / <code>Backspace</code> key.","The <code>Backslash</code> / <code>\\\\</code> key.","The C button.","The <code>C</code> key.","The <code>Calculator</code> key.","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","The <code>Colon</code> / <code>:</code> key.","The <code>Comma</code> / <code>,</code> key.","The <code>Compose</code> key on Linux.","The <code>Convert</code> key.","The <code>Copy</code> key.","The <code>Cut</code> key.","The <code>D</code> key.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","The <code>Delete</code> key.","The <code>Down</code> / <code>Down Arrow</code> key.","The <code>E</code> key.","The right action button of the action pad (i.e. PS: …","The <code>End</code> key.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","The <code>G</code> key.","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","A type of a <code>GamepadButton</code>.","A collection of connected <code>Gamepad</code>s.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","The <code>H</code> key.","The <code>Home</code> key.","The <code>I</code> key.","A “press-able” input of type <code>T</code>.","The <code>Insert</code> key, next to the <code>Backspace</code> key.","The <code>J</code> key.","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","The <code>L</code> key.","The <code>LAlt</code> / <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>LBracket</code> / <code>Left Bracket</code> key.","The <code>LControl</code> / <code>Left Control</code> key.","The <code>LShift</code> / <code>Left Shift</code> key.","The <code>LWin</code> / <code>Left Windows</code> key. Maps to <code>Left Command</code> on Mac.","The <code>Left</code> / <code>Left Arrow</code> key.","The left mouse button.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","The <code>M</code> key.","The <code>Mail</code> key.","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","The middle mouse button.","The <code>Minus</code> / <code>-</code> key.","The mode button.","A button on a mouse device.","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","The upper action button of the action pad (i.e. PS: …","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","The <code>O</code> key.","The <code>Oem102</code> key.","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","Another mouse button with the associated number.","The <code>P</code> key.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The <code>Period</code> / <code>.</code> key.","The <code>PlayPause</code> key.","The <code>Plus</code> / <code>+</code> key.","The <code>Power</code> key.","The <code>PrevTrack</code> key.","The <code>Q</code> key.","The <code>R</code> key.","The <code>RAlt</code> / <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>RBracket</code> / <code>Right Bracket</code> key.","The <code>RControl</code> / <code>Right Control</code> key.","The <code>RShift</code> / <code>Right Shift</code> key.","The <code>RWin</code> / <code>Right Windows</code> key. Maps to <code>Right Command</code> on Mac.","The <code>Return</code> / <code>Enter</code> key.","The <code>Right</code> / <code>Right Arrow</code> key.","The right mouse button.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","The <code>S</code> key.","The scan code of a <code>KeyboardInput</code>.","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The select button.","The <code>Semicolon</code> / <code>;</code> key.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The bottom action button of the action pad (i.e. PS: …","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","The start button.","The <code>Stop</code> key.","The <code>Sysrq</code> key.","The <code>T</code> key.","The <code>Tab</code> / <code>   </code> key.","A touch input event.","A collection of <code>Touch</code>es.","The <code>U</code> key.","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","The <code>Up</code> / <code>Up Arrow</code> key.","The <code>V</code> key.","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The left action button of the action pad (i.e. PS: Square, …","The <code>X</code> key.","The <code>Y</code> key.","The <code>Yen</code> key.","The Z button.","The <code>Z</code> key.","The type of the axis.","The type of the button.","Describes how hard the screen was pressed.","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","The <code>ID</code> of the gamepad.","The unique identifier of the finger.","The phase of the touch input.","The position of the finger on the touchscreen.","On iOS, the force is calibrated so that the same number …","The system cancelled the tracking of the finger.","A finger stopped touching the touchscreen.","A force description of a <code>Touch</code> input.","A finger moved over the touchscreen.","If the platform reports the force as normalized, we have …","A finger started to touch the touchscreen.","A touch input.","A touch input event.","A phase of a <code>TouchInput</code>.","A collection of <code>Touch</code>es.","Checks if any touch input was just cancelled.","Checks if any touch input was just pressed.","Checks if any touch input was just released.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delta of the current <code>position</code> and the <code>previous_position</code>…","","","","The distance of the <code>start_position</code> and the current <code>position</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the position of the first currently pressed …","","","","","","Returns the current <code>force</code> of the touch.","Describes how hard the screen was pressed.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it is …","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it has …","","","","","","","","Returns the <code>id</code> of the touch.","The unique identifier of the finger.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator visiting every pressed <code>Touch</code> input in …","","","","An iterator visiting every just cancelled <code>Touch</code> input in …","An iterator visiting every just pressed <code>Touch</code> input in …","An iterator visiting every just released <code>Touch</code> input in …","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","","","","The phase of the touch input.","Returns the current <code>position</code> of the touch.","The position of the finger on the touchscreen.","Returns the <code>previous_force</code> of the touch.","Returns the <code>previous_position</code> of the touch.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>start_force</code> of the touch.","Returns the <code>start_position</code> of the touch.","","","","","","Updates the <code>Touches</code> resource with the latest <code>TouchInput</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","Describes the level of verbosity of a span or event.","Adds logging to Apps. This plugin is part of the …","","","","","","","Constructs an event at the debug level.","Constructs a span at the debug level.","","","Constructs an event at the error level.","Constructs a span at the error level.","Filters logs using the <code>EnvFilter</code> format","Returns the argument unchanged.","","Constructs an event at the info level.","Constructs a span at the info level.","Calls <code>U::from(self)</code>.","","","","","Filters out logs that are “less than” the given level. …","The Bevy Log Prelude.","Constructs an event at the trace level.","Constructs a span at the trace level.","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","Constructs an event at the debug level.","Constructs a span at the debug level.","Constructs an event at the error level.","Constructs a span at the error level.","Constructs an event at the info level.","Constructs a span at the info level.","Constructs an event at the trace level.","Constructs a span at the trace level.","Constructs an event at the warn level.","Constructs a span at the warn level.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Euler rotation sequences.","All false.","All false.","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","All ones.","A quaternion representing an orientation.","A ray is an infinite line starting at <code>origin</code>, going in …","A rectangle defined by two opposite corners.","All true.","All true.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector with SIMD support.","","A 4-dimensional vector with SIMD support.","","","","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","<code>bool</code> vector mask types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","The center point of the rectangle.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check if a point lies within this rectangle, inclusive of …","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","A normalized vector representing the direction of the ray.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Create a new rectangle from its center and half-size.","Create a new rectangle from its center and size.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from two column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Create a new rectangle from two corner points.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","","","","","","","","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve a point at the given distance along the ray.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rectangle half-size.","","","","Rectangle height (max.y - min.y).","<code>i32</code> vector types. ","","","","","","","","","Create a new rectangle with a constant inset.","Build a new rectangle formed of the intersection of this …","Returns the distance to the plane if the ray intersects it.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Check if the rectangle is empty.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum corner point of the rect.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","The minimum corner point of the rect.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion by a scalar value.","Multiplies a quaternion and a 3D vector, returning the …","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a 4D vector.","","","","","","","","","","","","","","","","","","","","","","","Create a new rectangle from two corner points.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","The origin of the ray.","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","The <code>bevy_math</code> prelude.","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Rectangle size.","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","","","","","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>u32</code> vector types. ","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","Rectangle width (max.x - min.x).","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaterniondimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","All false.","All false.","All false.","All true.","All true.","All true.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector with SIMD support.","A 4-dimensional vector with SIMD support.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","","Adds two quaternions.","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates a 3x3 matrix from two column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transformation matrix from the given 2x2 …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","","","","","","","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transformation matrix from the given 3D …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","","","","","","","","Creates a new rotation quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","","","","","","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","Multiplies a quaternion by a scalar value.","Multiplies a quaternion and a 3D vector, returning the …","Multiplies two quaternions. If they each represent a …","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","Transforms the given 2D vector as a point.","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code> as 3D point.","Rotates the given 2D vector.","Transforms the give 3D vector as a direction.","Transforms the give <code>Vec3A</code> as 3D vector.","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionaffine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","The unit axes.","The unit axes.","The unit axes.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","","","","","","","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","Euler rotation sequences.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A ray is an infinite line starting at <code>origin</code>, going in …","A rectangle defined by two opposite corners.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector with SIMD support.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","A normalized vector representing the direction of the ray.","The maximum corner point of the rect.","The minimum corner point of the rect.","The origin of the rayhe unit axes.","The unit axes.","The unit axes.","All ones.","All ones.","All ones.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","","","","","","","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …ombines the color of the fragments with the colors behind …","","","Sets how a material’s base color alpha channel is used …","An ambient light, which lights the entire scene equally.","","A more general form of the <code>FogFalloff::Exponential</code> mode. …","","","","","","The base color alpha value defines the opacity of the …","","","","Controls how cascaded shadow mapping works. Prefer using …","Builder for <code>CascadeShadowConfig</code>.","","","","Configuration of the clustering strategy for clustered …","Configure the far z-plane mode used for the furthest depth …","Configure the depth-slicing strategy for clustered forward …","","Constant max z-depth","","","","","","","","","","","","","A Directional light.","A component bundle for <code>DirectionalLight</code> entities.","Controls the resolution of <code>DirectionalLight</code> shadow maps.","","","","","","Environment map based ambient lighting representing light …","An exponential fog falloff with a given <code>density</code>.","A squared exponential fog falloff with a given <code>density</code>.","","","","","","","","","","Handle for the fog WGSL Shader internal asset","Fixed number of <code>Z</code> slices, <code>X</code> and <code>Y</code> calculated to give …","Allows switching between different fog falloff modes, and …","Metadata for fog","A plugin that consolidates fog extraction, preparation and …","Configures the “classic” computer graphics distance fog…","","","","","The GPU-side representation of the fog configuration that…","","","","","","","","","","A linear fog falloff that grows in intensity between <code>start</code> …","","","","","","","","","","","","","","","Reduce transparency to fully opaque or fully transparent …","Materials are used alongside <code>MaterialPlugin</code> and …","A component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.","Render pipeline data for a given <code>Material</code>.","A key uniquely identifying a specialized <code>MaterialPipeline</code>.","Adds the necessary ECS resources and render logic to …","Common <code>Material</code> properties, calculated for a specific …","Calculate the required maximum z-depth based on currently …","","","MSAA uses the highest 3 bits for the MSAA log2(sample …","","","","Combines the color of the fragments with the colors behind …","","","","","Disable light cluster calculations for this view","Add this component to make a <code>Mesh</code> not cast shadows.","Add this component to make a <code>Mesh</code> not receive shadows.","","Base color alpha values are overridden to be fully opaque …","","","","","","","","","","","","","A component bundle for PBR entities with a <code>Mesh</code> and a …","Sets up the entire PBR infrastructure of bevy.","","A light that emits light in all directions from a central …","A component bundle for <code>PointLight</code> entities.","","Similar to <code>AlphaMode::Blend</code>, however assumes RGB channel …","","","","All <code>Material</code> values of a given type that should be …","Data prepared for a <code>Material</code> instance.","","","","","A 2% contrast threshold was originally proposed by …","Labels for fog-related systems","","Stores all prepared representations of <code>Material</code> assets for …","","","","","Sets the bind group for a given <code>Material</code> at the configured …","","","","","","","","","","","One single cluster. Optimal for low-light complexity …","","","","A light that emits light in a given direction from a …","A component bundle for spot light entities","A material with “standard” properties used in PBR …","Bitflags info about the material a shader is currently …","","The GPU representation of the uniform data of a …","","","","","","","","","","","Inserted on each <code>Entity</code> with an <code>ExtractedView</code> to keep …","","","","","Explicit <code>X</code>, <code>Y</code> and <code>Z</code> counts (may yield non-square <code>X/Y</code> …","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","When the alpha mode mask flag is set, any base color alpha …","Returns this material’s <code>AlphaMode</code>. Defaults to …","","The <code>AlphaMode</code> of this material.","How to apply the alpha channel of the <code>base_color_texture</codehe color of the surface of the material before lighting.","Doubles as diffuse albedo for non-metallic, specular for …","The texture component of the material’s color before …","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flagshe (positive) distance to the far boundary of each …","A direct scale factor multiplied with <code>color</code> before being …","","Returns the cascade config as specified by this builderhe color of the fog effect.","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","Whether to cull the “front”, “back” or neither …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a bias to the view depth of the mesh which can be used …","","Add a bias to the view depth of the mesh which can be used …","Re-arrange render ordering.","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","Color used to modulate the influence of directional light …","","","The exponent applied to the directional light alignment …","","","Support two-sided lighting by automatically flipping the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Color the material “emits” to the camera.","","The emissive map, multiplies pixels with <code>emissive</code> to get …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Map of view entity to the visible entities for each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This system extracts all created or modified assets of the …","","","","Determines which falloff mode to use, and its parameters.","Strategy for how to evaluate the far <code>Z</code> plane of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the far bound of the first cascade, relative to the …","Far <code>Z</code> plane of the first depth slice","The <code>StandardMaterialFlags</code> accessible in the <code>wgsl</code> shader.","","Normal map textures authored for DirectX have their …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to enable fog for this material.","Returns this material’s fragment shader. If …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>FogFalloff::Exponential</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::Exponential</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::Atmospheric</code> value from the given …","Creates a <code>FogFalloff::ExponentialSquared</code> value from the …","Creates a <code>FogFalloff::ExponentialSquared</code> value from the …lluminance in lux","","","","","","","","","","","","","","","Angle defining the distance from the spot light direction …","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Whether or not all textures neccesary to use the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the extinction coefficient β, from V and Cₜ, …","","","","","","","","","","The maximum shadow distance. Areas further from the camera …","","","","","","","How “metallic” the material appears, within <code>[0.0, 1.0]</code>,","From [0.0, 1.0], dielectric to pure metallic","Metallic and roughness maps, stored as a single texture.","","","","The minimum shadow distance, which can help improve the …","The (positive) distance to the near boundary of the first …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to fake the lighting of bumps and dents on a material.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","The number of shadow cascades. More cascades increases …","Specifies the level of exposure to ambient light.","","","","Angle defining the distance from the spot light direction …","Sets the overlap proportion between cascades. The overlap …","The proportion of overlap each cascade has with the …","","","","","Linear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …","","","","","","","","","Prepares fog metadata and writes the fog-related uniform …","","This system prepares all assets of the corresponding …","","","Controls if the prepass is enabled for the Material. For …","Controls if the prepass is enabled for the …","Returns this material’s prepass fragment shader. If …","","Returns this material’s prepass vertex shader. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specular intensity for non-metals on a linear scale of …","Specular intensity for non-metals on a linear scale of […","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","Linear perceptual roughness, clamped to [0.089, 1.0] in …","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","","","","","","","","","","","","","","","","","","","","","","Customizes the default <code>RenderPipelineDescriptor</code> for a …","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-placeeturns the type name of this value’s type.","","Returns the UUID associated with this value’s type.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Whether to apply only the base color to this material.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this material’s vertex shader. If …","","","","","","","User indication of whether an entity is visible","Enables or disables the light","Enables or disables the light","Enables or disables the light","","","","","","","","","","","","","","","Specify if clusters should automatically resize in <code>X/Y</code> if …","Specify if clusters should automatically resize in <code>X/Y</code> if …","","","","","Multiplier applied to the world distance (within the …","Multiplier applied to the world distance (within the …","Distance from the camera where fog is completely opaque, …","Controls how much light is removed due to atmospheric …","Controls how much light is added due to light scattering …","Distance from the camera where fog is completely …","","","","","","","Label for the shadow pass node.","Combines the color of the fragments with the colors behind …","Sets how a material’s base color alpha channel is used …","An ambient light, which lights the entire scene equally.","A more general form of the <code>FogFalloff::Exponential</code> mode. …","The base color alpha value defines the opacity of the …","A Directional light.","A component bundle for <code>DirectionalLight</code> entities.","Environment map based ambient lighting representing light …","An exponential fog falloff with a given <code>density</code>.","A squared exponential fog falloff with a given <code>density</code>.","Allows switching between different fog falloff modes, and …","Configures the “classic” computer graphics distance fog…","A linear fog falloff that grows in intensity between <code>start</code> …","Reduce transparency to fully opaque or fully transparent …","Materials are used alongside <code>MaterialPlugin</code> and …","A component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.","Adds the necessary ECS resources and render logic to …","Combines the color of the fragments with the colors behind …","Base color alpha values are overridden to be fully opaque …","A component bundle for PBR entities with a <code>Mesh</code> and a …","A light that emits light in all directions from a central …","A component bundle for <code>PointLight</code> entities.","Similar to <code>AlphaMode::Blend</code>, however assumes RGB channel …","A light that emits light in a given direction from a …","A component bundle for spot light entities","A material with “standard” properties used in PBR …","","Returns this material’s <code>AlphaMode</code>. Defaults to …","How to apply the alpha channel of the <code>base_color_texture</code>.","The color of the surface of the material before lighting.","The texture component of the material’s color before …","A direct scale factor multiplied with <code>color</code> before being …","","","The color of the fog effect.","","","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","","Whether to cull the “front”, “back” or neither …","Add a bias to the view depth of the mesh which can be used …","Re-arrange render ordering.","","","Color used to modulate the influence of directional light …","The exponent applied to the directional light alignment …","Support two-sided lighting by automatically flipping the …","Color the material “emits” to the camera.","The emissive map, multiplies pixels with <code>emissive</code> to get …","Determines which falloff mode to use, and its parameters.","Normal map textures authored for DirectX have their …","Whether to enable fog for this material.","Returns this material’s fragment shader. If …","","","","","","","Illuminance in lux","Angle defining the distance from the spot light direction …","","","","","How “metallic” the material appears, within <code>[0.0, 1.0]</code>,","Metallic and roughness maps, stored as a single texture.","Used to fake the lighting of bumps and dents on a material.","Specifies the level of exposure to ambient light.","Angle defining the distance from the spot light direction …","Linear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …","","Controls if the prepass is enabled for the Material. For …","Returns this material’s prepass fragment shader. If …","Returns this material’s prepass vertex shader. If …","","","","","Specular intensity for non-metals on a linear scale of …","","","","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","","","","Customizes the default <code>RenderPipelineDescriptor</code> for a …","","","","","","","Whether to apply only the base color to this material.","Returns this material’s vertex shader. If …","User indication of whether an entity is visible","Enables or disables the light","Enables or disables the light","Enables or disables the light","","","Multiplier applied to the world distance (within the …","Multiplier applied to the world distance (within the …","Distance from the camera where fog is completely opaque, …","Controls how much light is removed due to atmospheric …","Controls how much light is added due to light scattering …","Distance from the camera where fog is completely …","","Controls whether an entity should rendered in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Whether to show wireframes for all meshes. If <code>false</code>, only …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>A</code> key.","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","Independent of all other nodes","Combines the color of the fragments with the colors behind …","<code>App</code> extension methods for adding new asset types.","Command that adds a child to an entity","A filter on a component that only retains results added …","Indicates that an alias of something is to be created.","Defines how each line is aligned within the flexbox.","How items are aligned according to the cross axis","How this item is aligned according to the cross axis. …","Indicates that the user can scroll by dragging the mouse.","Sets how a material’s base color alpha channel is used …","An ambient light, which lights the entire scene equally.","An <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.","A list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …","Animation controls","Adds animation support to an app","The <code>AnyOf</code> query parameter fetches entities with any of the …","The <code>Apostrophe</code> / <code>&#39;</code> key.","A container of app logic and data.","The <code>Resource</code> that stores the <code>App</code>’s <code>TypeRegistry</code>.","The <code>Apps</code> key.","An arrow. This is the default cursor on most systems.    ","Events that involve assets of type <code>T</code>.","Adds support for <code>Assets</code> to an App.","Loads assets from the filesystem in the background.","Stores Assets of a given type and tracks changes to them.","The <code>Asterisk</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The window’s top-left corner will be placed at the …","A more general form of the <code>FogFalloff::Exponential</code> mode. …","Use this <code>Resource</code> to play audio.","Used internally to play audio on the current “audio …","A source of audio data","Automatically determine this value","Use the parent node’s <code>AlignItems</code> value to determine how …","Position will be set by the window manager","The <code>Ax</code> key.","Stores the position data of the input devices of type <code>T</code>.","The <code>B</code> key.","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","The <code>Back</code> / <code>Backspace</code> key.","The background color of the node","The <code>Backslash</code> / <code>\\\\</code> key.","Items are aligned at the baseline","This item will be aligned at the baseline","The base color alpha value defines the opacity of the …","Trait defining how to build children","Collection of methods similar to [<code>BuildChildren</code>], but …","Trait that defines adding children to an entity directly …","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","Marker struct for buttons","A UI node that is a button","The C button.","The <code>C</code> key.","The calculated clip of the node","The calculated size of the node","The <code>Calculator</code> key.","The defining component for camera entities, storing …","","","Configuration for the “main 3d render graph”.","","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","Indicates that a cell (or set of cells) may be selected.","Leftmost &amp; rightmost characters are equidistant to the …","Items are aligned at the center","This item will be aligned at the center","Each line moves towards the center of the cross axis","Centered along the main axis","Window will be centered on the selected monitor","<code>WorldQuery</code> that tracks changes and additions for component …","A filter on a component that only retains results added or …","Struct for building children onto an entity","Contains references to the child entities of this entity.","Command that clear all children from an entity.","A <code>Resource</code> that stores the color that is used to clear the …","The node has been clicked","Indicates that a column can be resized horizontally.","The <code>Colon</code> / <code>:</code> key.","","A 2d material that renders 2d meshes with a texture tinted …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","Flex from top to bottom","Flex from bottom to top","The <code>Comma</code> / <code>,</code> key.","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","Notifies when text should be inserted into the editor …","A data type that can be used to store data for an entity.","","The <code>Compose</code> key on Linux.","Algorithmically-computed indication of whether an entity …","Indicates that a context menu is available.","The <code>Convert</code> key.","Indicates something is to be copied.","The <code>Copy</code> key.","The names of the default <code>App</code> schedules.","The names of the default <code>App</code> system sets.","","A simple crosshair.   ","Uses current monitor of the window.","An event that is sent whenever the user’s cursor enters …","The icon to display for a window’s cursor.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved inside …","The <code>Cut</code> key.","The <code>D</code> key.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","Convenient query for giving a human friendly name to an …","A type implementing this trait can be converted to a […","The type of the iterator of the audio samples, which …","The type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …","The platform-dependent default cursor.","This plugin group will add all the default plugins for a …","A <code>SystemParam</code> that stores a buffer which gets applied to …","The <code>Delete</code> key.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","An <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.","Despawns the given entity’s children recursively","Despawns the given entity and all its children recursively","Trait that holds functions for despawning recursively down …","Types that can read change detection information. This …","Types that implement reliable change detection.","Defines the text direction","A Directional light.","A component bundle for <code>DirectionalLight</code> entities.","Notifies when the IME was disabled.","Whether to use a Flexbox layout model.","The <code>Down</code> / <code>Down Arrow</code> key.","File is being dropped into a window.","Generates a dynamic plugin entry point function for the …","","Errors that can occur when loading a dynamic plugin","A collection of serializable dynamic entities, each with …","A <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …","A component bundle for a <code>DynamicScene</code> root.","The <code>E</code> key.","Indicates that an edge of a box is to be moved right …","The right action button of the action pad (i.e. PS: …","Notifies when the IME was enabled.","The <code>End</code> key.","Lightweight identifier of an entity.","Path to an entity, with <code>Name</code>s. Each entity in a path must …","Environment map based ambient lighting representing light …","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","Euler rotation sequences.","A type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Indicates a bidirectional resize cursor.","An exponential fog falloff with a given <code>density</code>.","A squared exponential fog falloff with a given <code>density</code>.","Schedule which extract data from the main world and …","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","","Events related to files being dragged and dropped on a …","Runs before all other members of this set.","The copy of <code>apply_system_buffers</code> that runs immediately …","The amount of time that must pass before the fixed timstep …","The schedule that contains systems which only run after a …","Runs systems that should only occur after a fixed period …","Use Flexbox layout model to determine the position of this …","Defines how flexbox items are ordered within a flexbox","Items are aligned at the end","This item will be aligned at the end","Each line moves towards the end of the cross axis","Pushed towards the end","Items are aligned at the start","This item will be aligned at the start","Each line moves towards the start of the cross axis","Pushed towards the start","Defines if flexbox items appear on a single line or on …","Allows switching between different fog falloff modes, and …","Configures the “classic” computer graphics distance fog…","","Adds frame counting functionality to Apps.","A trait for types which can be constructed from a …","Derives the <code>FromReflect</code> trait.","Creates an instance of the type this trait is implemented …","The <code>G</code> key.","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","A type of a <code>GamepadButton</code>.","A collection of connected <code>Gamepad</code>s.","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","","Indicates the order in which this node should be rendered …","Describe the position of an entity relative to the …","Indicates that something can be grabbed.","Indicates that something is grabbed.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","The <code>H</code> key.","A hand (often used to indicate links in web browsers).    ","A handle into a specific <code>Asset</code> of type <code>T</code>.","A non-generic version of <code>Handle</code>.","Help indicator (often rendered as a “?”)    ","Hide overflowing items","An entity with <code>Visibility::Hidden</code> will be unconditionally …","The base plugin for handling <code>Parent</code> and <code>Children</code> components","An extension trait for <code>Query</code> that adds hierarchy related …","The <code>Home</code> key.","The node has been hovered over","File is currently being hovered over a window.","File hovering was cancelled.","HSL (hue, saturation, lightness) color with an alpha …","The <code>I</code> key.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","","A UI node that is an image","Adds the <code>Image</code> as an asset and makes sure that they are …","A Input Method Editor event.","Wrapper type to mark a <code>SystemParam</code> as an input.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","Uses monitor with the specified index.","Inherit from parent node","An entity with <code>Visibility::Inherited</code> will inherit the …","The type contained within this smart pointer","A “press-able” input of type <code>T</code>.","The <code>Insert</code> key, next to the <code>Backspace</code> key.","Command that inserts a child at a given index of a parent…","Describes what type of input interaction has occurred for …","An extension trait providing the <code>IntoPipeSystem::pipe</code> …","Conversion trait to turn something into a <code>System</code>.","Types that can be converted into a <code>SystemConfig</code>.","Types that can convert into a <code>SystemConfigs</code>.","Types that can be converted into a <code>SystemSet</code>.","Types that can be converted into a <code>SystemSetConfig</code>.","Types that can convert into a <code>SystemSetConfigs</code>.","","The <code>J</code> key.","Defines how items are aligned according to the main axis","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","List of keyframes for one of the attribute of a <code>Transform</code>.","The <code>L</code> key.","The <code>LAlt</code> / <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>LBracket</code> / <code>Left Bracket</code> key.","The <code>LControl</code> / <code>Left Control</code> key.","The <code>LShift</code> / <code>Left Shift</code> key.","The <code>LWin</code> / <code>Left Windows</code> key. Maps to <code>Left Command</code> on Mac.","Runs after all other members of this set.","The copy of <code>apply_system_buffers</code> that runs immediately …","LCH(ab) (lightness, chroma, hue) color with an alpha …","Leftmost character is immediately to the right of the …","The <code>Left</code> / <code>Left Arrow</code> key.","The left mouse button.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","Text is written left to right","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","","A linear fog falloff that grows in intensity between <code>start</code> …","A system local <code>SystemParam</code>.","Indicates the order in which this node should be rendered …","The <code>M</code> key.","The <code>Mail</code> key.","The schedule that contains the app logic that is evaluated …","Reduce transparency to fully opaque or fully transparent …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","Materials are used alongside <code>MaterialPlugin</code> and …","A component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.","Adds the necessary ECS resources and render logic to …","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","","The middle mouse button.","This plugin group will add the minimal plugins for a <em>Bevy</em> …","The <code>Minus</code> / <code>-</code> key.","The mode button.","","Defines which monitor to use.","A button on a mouse device.","Indicates something is to be moved.    ","Configuration resource for Multi-Sample Anti-Aliasing.","Combines the color of the fragments with the colors behind …","Unique mutable borrow of an entity’s component","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","Indicates that an edge of a box is to be moved up (north).","Component used to identify an entity. Stores a hash for …","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","The next state of <code>State&lt;S&gt;</code>.","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","Indicates that the dragged item cannot be dropped here.","","Single line, will overflow if needed","Describes the size of a UI node","The basic UI node","","","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","Nothing has happened","Use no layout, don’t render this node and its children.","The upper action button of the action pad (i.e. PS: …","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","The <code>O</code> key.","The <code>Oem102</code> key.","","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …","The label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …","A <code>SystemSet</code> that will run within <code>CoreSet::Update</code> when this …","Run once and stop.","Base color alpha values are overridden to be fully opaque …","A filter that tests if any of the given filters apply.","","Project a 3D space onto a 2D surface using parallel lines, …","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","Another mouse button with the associated number.","The system’s output.","The schedule that controls which schedules run.","Whether to show or hide overflowing items","The <code>P</code> key.","The <code>PageDown</code> key.","The <code>PageUp</code> key.","An alternative to <code>Commands</code> that can be used in parallel …","A collection of potentially conflicting <code>SystemParam</code>s …","Holds a reference to the parent entity of this entity. …","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","A component bundle for PBR entities with a <code>Mesh</code> and a …","Set this value in percent","The <code>Period</code> / <code>.</code> key.","","A 3D camera projection in which distant objects appear …","The <code>PlayPause</code> key.","Settings to control playback from the start.","A collection of Bevy app logic and configuration.","","Combines multiple <code>Plugin</code>s into a single unit.","The <code>Plus</code> / <code>+</code> key.","A light that emits light in all directions from a central …","A component bundle for <code>PointLight</code> entities.","The strategy used to position this node","Runs once after <code>StartupSet::Startup</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs after <code>CoreSet::Update</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","The <code>Power</code> key.","Runs once before <code>StartupSet::Startup</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Runs before <code>CoreSet::Update</code>.","The copy of <code>apply_system_buffers</code> that runs immediately …","Notifies when a new composing text should be set at the …","Similar to <code>AlphaMode::Blend</code>, however assumes RGB channel …","The <code>PrevTrack</code> key.","Uses primary monitor of the system.","Progress indicator. Shows that processing is being done.","A configurable <code>CameraProjection</code> that can select its …","Command that pushes children to the end of the entity’s …","Set this value in pixels","The <code>Q</code> key.","A quaternion representing an orientation.","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","The <code>R</code> key.","The <code>RAlt</code> / <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>RBracket</code> / <code>Right Bracket</code> key.","The <code>RControl</code> / <code>Right Control</code> key.","The <code>RShift</code> / <code>Right Shift</code> key.","The <code>RWin</code> / <code>Right Windows</code> key. Maps to <code>Right Command</code> on Mac.","A ray is an infinite line starting at <code>origin</code>, going in …","An event that is sent whenever a window receives a …","A rectangle defined by two opposite corners.","Shared borrow of an entity’s component with access to …","A reflected Rust type.","","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to provide the default value of a type.","A struct used to deserialize reflected instances of a type.","A struct used to operate on reflected <code>Resource</code> of a type.","A struct used to serialize reflected instances of a type.","Relative to all other nodes with the <code>PositionType::Relative</code>…","Command that removes children from an entity, and removes …","Command that removes the parent of an entity, and removes …","","A <code>SystemParam</code> that grants access to the entities that had …","Reset when finished.","Command that clear all children from an entity. And …","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","The <code>Return</code> / <code>Enter</code> key.","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","Rightmost character is immediately to the left of the …","The <code>Right</code> / <code>Right Arrow</code> key.","The right mouse button.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","Text is written right to left","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","Keyframes for rotation.","Same way as text direction along the main axis","Indicates that the row can be resized vertically.","Opposite way as text direction along the main axis","The <code>S</code> key.","Indicates that an edge of a box is to be moved down …","","Keyframes for scale.","The scan code of a <code>KeyboardInput</code>.","To spawn a scene, you can use either:","A component bundle for a <code>Scene</code> root.","","A collection of systems, and the metadata and executor …","Resource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s.","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The cursor indicates that an edge of a box is to be moved …","The select button.","The <code>Semicolon</code> / <code>;</code> key.","","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","A 2-dimensional area defined by a width and height.","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The bottom action button of the action pad (i.e. PS: …","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","Each line fills the space it needs, putting the remaining …","Remaining space is distributed around the items","Each line fills the space it needs, putting the remaining …","Remaining space is distributed between the items","Like <code>JustifyContent::SpaceAround</code> but with even spacing …","A <code>Bundle</code> with the following <code>Component</code>s:","A light that emits light in a given direction from a …","A component bundle for spot light entities","","","A Bundle of components for drawing a single sprite from a …","A material with “standard” properties used in PBR …","The start button.","The schedule that runs once when the app starts.","Runs once when an <code>App</code> starts up.","The copy of <code>apply_system_buffers</code> that runs immediately …","The names of the default <code>App</code> startup sets, which live in …","A finite-state machine whose transitions have associated …","Applies <code>State</code> transitions","Types that can define world-wide states in a finite-state …","","The <code>Stop</code> key.","","Items are stretched across the whole cross axis","This item will be stretched across the whole cross axis","Each line will stretch to fill the remaining space","A reflected Rust regular struct type.","Describes the style of a UI node","The cursor indicates that an edge of a box is to be moved …","The <code>Sysrq</code> key.","An ECS system that can be added to a <code>Schedule</code>","","A trait implemented for all functions that can be used as …","Types that identify logical groups of systems.","Derive macro generating an impl of the trait <code>SystemSet</code>.","The <code>T</code> key.","The <code>Tab</code> / <code>   </code> key.","Helper for configuring and creating the default task …","Setup of default task pools: <code>AsyncComputeTaskPool</code>, …","","Indicates text that may be selected or edited.    ","The bundle of components needed to draw text in a 2D scene …","Describes horizontal alignment preference for positioning …","A UI node that is text","","","","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","A touch input event.","A collection of <code>Touch</code>es.","Describe the position of an entity. If the entity has a …","A <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …","The base plugin for handling <code>Transform</code> components","Keyframes for translation.","A reflected Rust tuple struct.","Registration of default types to the <code>TypeRegistry</code> …","The <code>U</code> key.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Configuration for cameras related to UI.","The 2D texture displayed for this UI node","A type which is commonly used to define positions, …","The current scale of the UI.","No value defined","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","The <code>Up</code> / <code>Up Arrow</code> key.","Responsible for doing most app logic. Systems should be …","The copy of <code>apply_system_buffers</code> that runs immediately …","The <code>V</code> key.","An enum that describes possible types of value in flexbox …","","Print a warning for each <code>Entity</code> with a <code>T</code> component whose …","Describes how an attribute of a <code>Transform</code> should be …","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector with SIMD support.","Indicates vertical text that may be selected or edited.","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code> and <code>ComputedVisibility</code> <code>Component</code>…","Show overflowing items","An entity with <code>Visibility::Visible</code> will be unconditionally …","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The left action button of the action pad (i.e. PS: Square, …","Define how a window will be created and how it will behave.","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where window should be placed at on creation.","The size limits on a window.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Struct for adding children to an entity directly through …","Multiple lines, if needed","Same as <code>FlexWrap::Wrap</code> but new lines will appear before …","The <code>X</code> key.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","The <code>Y</code> key.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","The <code>Yen</code> key.","The Z button.","The <code>Z</code> key.","Indicates that this <code>Node</code> entity’s front-to-back ordering …","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Indicates that the user can zoom in.","Indicates that the user can zoom out.","","Registers <code>T</code> as a supported asset in the application.","Adds the provided asset loader to the application.","Adds a single child","Adds a single child","Registers <code>T</code> as a supported internal asset in the …","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","Run after all systems in <code>set</code>.","How to align each line, only applies if flex_wrap is set to","How items are aligned according to the cross axis","How this item is aligned according to the cross axis. …","The text’s internal alignment. Should not affect its …","Returns this material’s <code>AlphaMode</code>. Defaults to …","How to apply the alpha channel of the <code>base_color_texture</code>.","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from this …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from …","Suppress warnings and errors that would result from this …","Suppress warnings and errors that would result from these …","Suppress warnings and errors that would result from …","<code>Anchor</code> point of the sprite in the world","","Applies a reflected value to this value.","","If a new state is queued in <code>NextState&lt;S&gt;</code>, this system:","Instructs the executor to call <code>apply_buffers</code> on the …","Returns the system’s archetype component <code>Access</code>.","The area that the projection covers relative to …","Returns the value as a <code>&amp;dyn Any</code>.","Returns the value as a <code>&amp;mut dyn Any</code>.","Casts this type to a reflected value.","Casts this type to a mutable reflected value.","The aspect ratio of the flexbox","The aspect ratio (width divided by height) of the viewing …","The base folder where assets are loaded from, relative to …","Used to determine number of async compute threads to …","The type of the axis.","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The color of the surface of the material before lighting.","The texture component of the material’s color before …","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","Run before all systems in <code>set</code>.","","The border of the node","The value corresponding to the bottom side of the UI rect.","A direct scale factor multiplied with <code>color</code> before being …","Configures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","Marker component that signals this node is a button","The type of the button.","Manually bypasses change detection, allowing you to mutate …","Raw data of the audio source.","The calculated size based on the given image","The calculated size based on the given image","","","","","","","The “html canvas” element selector.","","","Treat this collection as a sequence of systems.","Treat this collection as a sequence of system sets.","Received character.","","<code>Entity</code> whose parent must be removed.","Child entity to add","Removes all children from this entity. The <code>Children</code> …","","The clear color operation to perform for the main 3d pass.","The rect of the clip","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","Clones the value as a <code>Reflect</code> trait object.","Whether to close windows when they are requested to be …","","","The sprite’s color tint","","The color of the fog effect.","","","","","Returns the system’s component <code>Access</code>.","How the alpha channel of textures should be handled while …","Used to determine number of compute threads to allocate","Computed values for this camera, such as the projection …","The computed visibility of the entity.","The computed visibility of the entity.","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","","Whether to cull the “front”, “back” or neither …","The cursor of this window.","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","","System adapter that utilizes the […","Debug formatter for the value.","Constructs an event at the debug level.","Constructs a span at the debug level.","Build and return a <code>Self::Decoder</code> of the implementing type","Should the window have decorations enabled?","An ergonomic abbreviation for <code>Default::default()</code> to make …","The default image sampler to use when <code>ImageSampler</code> is set …","The schedule that systems are added to by default.","Returns the system’s default system sets.","Add a bias to the view depth of the mesh which can be used …","Re-arrange render ordering.","The depth clear operation to perform for the main 3d pass.","Despawns all descendants of the given entity.","Despawns the provided entity alongside all descendants.","Function for despawning an entity and all its children","","A normalized vector representing the direction of the ray.","Which direction the content of this node should go","","Color used to modulate the influence of directional light …","The exponent applied to the directional light alignment …","Whether to arrange this node and its children with flexbox …","Support two-sided lighting by automatically flipping the …","Creates a boxed clone of the label corresponding to this …","Dynamically links a plugin at the given path. The plugin …","Color the material “emits” to the camera.","The emissive map, multiplies pixels with <code>emissive</code> to get …","","The unique identifier of the entity as a fallback.","Target entity","Target entity","Window that moved.","System adapter that utilizes the […","Constructs an event at the error level.","Constructs a span at the error level.","Whether to exit the app when there are no open windows.","Determines which falloff mode to use, and its parameters.","The distance from the camera in world units of the viewing …","The distance of the far clipping plane in world units.","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field with …","Returns the number of fields in the struct.","Returns the number of fields in the tuple struct.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Whether or not to fit the canvas element’s size to its …","The initial size of the item","Whether to use column or row layout","Defines how much a flexbox item should grow if there’s …","How to shrink if there’s not enough space available","How to wrap nodes","Normal map textures authored for DirectX have their …","Flip the sprite along the <code>X</code> axis","","Whether the image should be flipped along its x-axis","Flip the sprite along the <code>Y</code> axis","","Whether the image should be flipped along its y-axis","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Should the window start focused?","Whether to enable fog for this material.","","","","Describes how hard the screen was pressed.","The vertical field of view (FOV) in radians.","Returns this material’s fragment shader. If …","Constructs a concrete instance of <code>Self</code> from a reflected …","Creates <code>Self</code> using data from the given World","","","","","","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","The size of the gutters between the rows and columns of …","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Gets the system’s last change tick","Returns the <code>TypeInfo</code> of the underlying type.","The global transform of the entity.","","","","","","","","","","","","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the entity.","If this is set to <code>true</code>, the camera will use an …","The height of the 2-dimensional area.","The <code>ID</code> of the gamepad.","The unique identifier of the finger.","System adapter that ignores the output of the previous …","Illuminance in lux","The image of the node","The image of the node","Should the window use Input Method Editor?","Sets location of IME candidate box in client area …","Add to the provided “base” <code>set</code>. For more information …","Add to the provided “base” <code>set</code>. For more information …","Add these systems to the provided “base” <code>set</code>. For more …","Add these system sets to the provided “base” <code>set</code>. For …","Add this set to the schedules’s default base set.","Add to the provided <code>set</code>.","Add to <code>set</code> membership.","Add these systems to the provided <code>set</code>.","Add these system sets to the provided <code>set</code>.","","System adapter that utilizes the […","Constructs an event at the info level.","Constructs a span at the info level.","Adds an asset loader <code>T</code> using default values.","Adds an asset loader <code>T</code> for internal assets using default …","Initialize the system.","Angle defining the distance from the spot light direction …","Inserts children at the given index","Inserts children at the given index","","","Describes whether and how the button has been interacted …","Stores internal state that isn’t directly accessible.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","Casts this type to a boxed reflected value.","Turns this value into its corresponding <code>System</code>.","","Used to determine number of IO threads to allocate","If this is set to <code>true</code>, this camera will be rendered to …","Returns <code>true</code> if this value was added after the system last …","Returns <code>true</code> if this set is a “base system set”. …","Returns <code>true</code> if this value was added or mutably …","Returns true if the system must be run exclusively.","Returns true if the system is <code>Send</code>.","Returns <code>true</code> if this system set is a <code>SystemTypeSet</code>.","If the plugin can be meaningfully instantiated several …","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple struct’…","How items align according to the main axis","Timestamp for each of the keyframes.","List of the keyframes.","Returns the change tick recording the time this data was …","The value corresponding to the left side of the UI rect.","How the text should linebreak when running out of the …","Safety","The transform of the entity.","The margin of the node","","The maximum corner point of the rect.","The maximum height the window can have.","The maximum size of the flexbox","If the number of physical cores is greater than …","The maximum width the window can have.","","How “metallic” the material appears, within <code>[0.0, 1.0]</code>,","Metallic and roughness maps, stored as a single texture.","The minimum corner point of the rect.","The minimum height the window can have.","The minimum size of the flexbox","If the number of physical cores is less than …","The minimum width the window can have.","Which fullscreen or windowing mode should be used?","Returns the system’s name.","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","A <code>Name</code> that the entity might have that is displayed if …","Returns the name of the field with index <code>index</code>.","The distance from the camera in world units of the viewing …","The distance of the near clipping plane in world units.","Don’t add this system to the schedules’s default set.","Describes the size of the node","Describes the size of the node","Describes the size of the node","Describes the size of the node","Used to fake the lighting of bumps and dents on a material.","Generates a  <code>Condition</code> that inverses the result of passed …","Specifies the level of exposure to ambient light.","Cameras with a higher order are rendered later, and thus …","The origin of the ray.","Angle defining the distance from the spot light direction …","The schedule that controls the outer loop of schedule …","How to handle overflow","The padding of the node","Parent entity to add the child to","Parts of the path","Linear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …","Defaults to 1/60th of a second. To configure this value, …","The phase of the touch input.","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","","The cursor position in logical pixels.","The position of the node as described by its Rect","Where the window moved to in physical pixels.","Where the window should be placed.","The position of the finger on the touchscreen.","Whether to arrange this node relative to other nodes, or …","Controls if the prepass is enabled for the Material. For …","Returns this material’s prepass fragment shader. If …","Returns this material’s prepass vertex shader. If …","What presentation mode to give the window.","Whether to attempt to preserve the aspect ratio when …","Whether or not to stop events from propagating out of the …","Settings for the primary window. This will be spawned by …","","","Pushes children to the back of the builder’s children. …","Pushes children to the back of the builder’s children","","","","","An optional rectangle representing the region of the sprite…","Returns a hash of the value (which includes the type).","Returns a mutable enumeration of “kinds” of type.","Returns an owned enumeration of “kinds” of type.","Returns a “partial equality” comparison result.","Returns an enumeration of “kinds” of type.","","Specular intensity for non-metals on a linear scale of …","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","Removes the given children","Removes the given children","Removes the parent of this entity.","Remove the parent from this entity.","Make this entity parentless while preserving this entity’…","Play in repeat","Removes all current children from this entity, replacing …","Should the window be resizable?","Which size limits to give the window.","What resolution the window should have.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","The value corresponding to the right side of the UI rect.","Rotation of the entity.","","Runs the system with the given input in the world.","Run the systems in this set only if the <code>Condition</code> is <code>true</code>.","Run only if the <code>Condition</code> is <code>true</code>.","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Runs the system with the given input in the world. Unlike …","The runner function is primarily responsible for managing …","The <code>ImageSampler</code> to use during rendering.","Scale of the entity.","The scale to be applied.","Scales the projection in world units.","How the projection will scale when the viewport is resized.","Handle to the scene to spawn","Handle to the scene to spawn","","Returns a serializable version of the value.","Performs a type-checked assignment of a reflected value to …","Sets the value of the given <code>Plugin</code>, if it exists","Flags this value as having been changed.","Sets <code>self</code> to <code>value</code>, if and only if <code>*self != *value</code>","Sets the system’s last change tick","Manually sets the change tick recording the time when this …","Sets the parent of this entity.","Set the <code>parent</code> of this entity. This entity will be added …","Change this entity’s parent while preserving this entity…","Runs after all plugins are built, but before the app …","","","","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","A bias applied along the direction of the fragment’s …","","","","Generation for some primitive shape meshes.","Whether to output UI to this camera view.","The ideal size of the flexbox","","The size of the node in logical pixels","Customizes the default <code>RenderPipelineDescriptor</code> for a …","","Speed to play at.","","","The specific sprite from the texture atlas to be drawn","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","Generates a <code>Condition</code>-satisfying closure that returns <code>true</code> …","","Describes the style including flexbox settings","Describes the style including flexbox settings","Describes the style including flexbox settings","Describes the style including flexbox settings","A collection of common adapters for piping the result of a …","Attempts to downcast the given value to <code>Self</code> using, …","The “target” that this camera will render to.","Options for the <code>TaskPool</code> created at application start.","","Contains the text of the node","","","","","The handle to the texture in which the sprites are stored","Handle to the texture","A handle to the texture atlas that holds the sprite images","","","","The specific areas of the atlas where each texture can be …","Stores the title of the window.","","","The value corresponding to the top side of the UI rect.","Constructs an event at the trace level.","Constructs a span at the trace level.","","","","Data pertaining to how the sprite is drawn on the screen","","","","","","","","The transform of the node","The transform of the node","The transform of the node","The transform of the node","The transform of the entity.","Position of the entity. In 2d, the last value of the <code>Vec3</code> …","Should the window be transparent?","Returns the <code>TypeId</code> of the underlying system type.","Returns the type name of the underlying type.","Whether to apply only the base color to this material.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","Update the system’s archetype component <code>Access</code>.","","Returns an iterator over all the state variants.","Returns this material’s vertex shader. If …","If set, this camera will render to the given <code>Viewport</code> …","Specifies the origin of the viewport as a normalized …","","","User indication of whether an entity is visible","User indication of whether an entity is visible","","User indication of whether an entity is visible","Enables or disables the light","Enables or disables the light","Enables or disables the light","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","The visibility of the entity.","The visibility of the entity.","","","","","Volume to play at.","","","","","System adapter that utilizes the […","Constructs an event at the warn level.","Constructs a span at the warn level.","Whether to watch for changes in asset files. Requires the …","The width of the 2-dimensional area.","Window that the cursor moved inside.","Window that the cursor entered.","Window that the cursor left.","Window that received the character.","Should the window always be on top of other windows?","Creates a <code>ChildBuilder</code> with the given children built in …","Creates a <code>WorldChildBuilder</code> with the given children built …","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","","","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Chroma channel. [0.0, 1.5]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Lightness channel. [0.0, 1.5]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","Path to the file that was dropped in.","Path to the file that might be dropped in.","Window the file was dropped into.","Window a file is possibly going to be dropped into.","Window that had a cancelled file drop.","Multiplier applied to the world distance (within the …","Multiplier applied to the world distance (within the …","Distance from the camera where fog is completely opaque, …","Controls how much light is removed due to atmospheric …","Controls how much light is added due to light scattering …","Distance from the camera where fog is completely …","Cursor begin and end position.","Current value.","Input string","Window that received the event.","Window that received the event.","Window that received the event.","Window that received the event.","UV space is distributed by how much of the capsule …","An axis-aligned box defined by its minimum and maximum …","A cylinder with hemispheres at the top and bottom","Manner in which UV coordinates are distributed vertically.","A circle in the <code>XY</code> plane","","A cylinder which stands on the XZ plane","Upper third of the texture goes to the northern …","A sphere made from a subdivided Icosahedron.","A square on the <code>XZ</code> plane centered at the origin.","A rectangle on the <code>XY</code> plane centered at the origin.","A regular polygon in the <code>XY</code> plane","A torus (donut) shape.","A sphere made of sectors and stacks.","Hemispheres get UV space according to the ratio of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the middle cylinder on the <code>Y</code> axis, excluding the …","","","","","","","","","","","","","Horizontally-flip the texture coordinates of the resulting …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new box given the coordinates of two opposing …","Creates a new plane centered at the origin with the …","","","","","","","","","","","","","Height of the cylinder in the Y axis.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of latitudes, distributed by inclination. Must be …","Number of longitudes, or meridians, distributed by azimuth.","","","","","","","","Creates a new box centered at the origin with the supplied …","","Creates a regular polygon in the <code>XY</code> plane","Creates a circle in the <code>XY</code> plane","Radius in the XZ plane.","Radius on the <code>XZ</code> plane.","The radius of the sphere.","Inscribed radius in the <code>XY</code> plane.","Inscribed radius in the <code>XY</code> plane.","","The radius of the sphere.","The number of vertices around each horizontal slice of the …","","Number of sections in cylinder between hemispheres.","Longitudinal sectors","The number of segments between the two ends. Setting this …","Number of sides.","","Full width and height of the rectangle.","The total side length of the square.","Latitudinal stacks","The number of subdivisions in the mesh.","The number of subdivisions applied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manner in which UV coordinates are distributed vertically.","The number of vertices used.","System adapter that utilizes the […","System adapter that utilizes the […","System adapter that ignores the output of the previous …","System adapter that utilizes the […","Converts a regular function into a system adapter.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","System adapter that utilizes the […","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Trait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …","Type-erased Box-like pointer to some unknown type chosen …","Type-erased borrow of some unknown type chosen when …","Type-erased mutable borrow of some unknown type chosen …","Conceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …","Used as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …","Extension trait for helper methods on <code>UnsafeCell</code>","","","","","","","","","","","","","","","","","","","Gets a mutable pointer from this owned pointer.","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets the underlying pointer, erasing the associated …","Gets an immutable reference from this mutable reference","Gets an immutable pointer from this owned pointer.","Transforms this <code>Ptr</code> into an <code>PtrMut</code>","","","","","","","","","","","","","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer (convenience for …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","Calculates the offset from a pointer. As the pointer is …","","","","","","","","","","","Creates a dangling pointer with specified alignment. See …","Safety","Transforms this <code>Ptr&lt;T&gt;</code> into a <code>&amp;T</code> with the same lifetime","Safety","Transforms this <code>PtrMut&lt;T&gt;</code> into a <code>&amp;mut T</code> with the same …","","","","","","","Consumes the <code>OwningPtr</code> to drop the underlying data of type …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Indexes the slice without doing bounds checks","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Consumes a value and creates an <code>OwningPtr</code> to it while …","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Creates a new instance from a raw pointer.","Transforms this <code>PtrMut</code> into an <code>OwningPtr</code>","Returns a copy of the contained value.","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Consumes the <code>OwningPtr</code> to obtain ownership of the …","Gets a <code>PtrMut</code> from this with a smaller lifetime.","","","","","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","Removes the alignment requirement of this pointer","","","","","","","","","","","","","","","","","","","","","","","","","A static-sized array of <code>Reflect</code> items.","","","","","A container for compile-time array info.","An iterator over an <code>Array</code>.","Type information for “dynamic” types whose metadata can…","A fixed-size list of reflected values.","A dynamic representation of an enum.","A container for compile-time info related to Bevy’s …","A list of reflected values.","An ordered mapping between reflected values.","A struct type which allows fields to be added at runtime.","A tuple which allows fields to be added at runtime.","A tuple struct which allows fields to be added at runtime.","A dynamic representation of an enum variant.","A trait representing a reflected enum.","","","","","A container for compile-time enum info, used by <code>TypeInfo</code>.","","","","","","","An iterator over the field values of a struct.","A trait for types which can be constructed from a …","Derives the <code>FromReflect</code> trait.","Trait used to generate <code>TypeData</code> for trait reflection.","A convenience trait which combines fetching and …","A trait which allows nested <code>Reflect</code> values to be retrieved …","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","A trait which allows a type to generate its …","","","","","","","","","","An ordered, mutable list of Reflect items. This …","","","","","A container for compile-time list info.","An iterator over an <code>List</code>.","An ordered mapping between <code>Reflect</code> values.","","","","","A container for compile-time map info.","An iterator over the key-value pairs of a <code>Map</code>.","The named field of a reflected struct.","A pre-parsed path to an element within a type.","A reflected Rust type.","","A struct used to deserialize reflected instances of a type.","<code>Reflect</code> values are commonly used in situations where the …","Type data that represents the <code>FromReflect</code> trait and allows …","A <code>Hasher</code> for hashing an arbitrary stream of bytes.","A mutable enumeration of “kinds” of reflected type.","An owned enumeration of “kinds” of reflected type.","An error returned from a failed path string query.","An immutable enumeration of “kinds” of reflected type.","A struct used to serialize reflected instances of a type.","A reflected Rust regular struct type.","","","","","","","Struct enums take the form:","Struct enums take the form:","A container for compile-time struct info.","Type info for struct variants.","","A reflected Rust tuple.","","","","","","","Tuple enums take the form:","Tuple enums take the form:","An iterator over the field values of a tuple.","A container for compile-time tuple info.","A reflected Rust tuple struct.","","","","","An iterator over the field values of a tuple struct.","A container for compile-time tuple struct info.","Type info for tuple variants.","A trait for types generated by the <code>#[reflect_trait]</code> …","Compile-time type information for various reflected types.","A record of data about a type.","A synchronized wrapper around a <code>TypeRegistry</code>.","A synchronized wrapper around a <code>TypeRegistry</code>.","A registry of reflected types.","A trait for types with a statically associated UUID.","","A trait for types with an associated UUID.","A static accessor to compile-time type information.","","","Unit enums take the form:","Unit enums take the form:","Type info for unit variants.","The unnamed field of a reflected tuple or tuple struct.","A Universally Unique Identifier (UUID).","","","","","A container for compile-time info related to general value …","","An iterator over the fields in the current enum variant.","A container for compile-time enum variant info.","Describes the form of an enum variant.","Registers the type described by <code>registration</code>.","Applies a reflected value to this value.","","","","","","","","Applies the reflected array data to the given array.","The default debug formatter for <code>Array</code> types.","Returns the <code>u64</code> hash of the given array.","Compares two arrays (one concrete and one reflected) to …","Returns the value as a <code>&amp;dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value as a <code>&amp;mut dyn Any</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a reflected value.","","","","","","","","Casts this type to a mutable reflected value.","","","","","","","","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The compile-time capacity of the array.","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the map, producing a <code>DynamicMap</code>.","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTuple</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","","Clones the list, producing a <code>DynamicArray</code>.","Clones the list, producing a <code>DynamicList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the value as a <code>Reflect</code> trait object.","","","","","","","","","Checks if a variant with the given name exists within this …","Returns a reference to the value of type <code>T</code> in this …","Returns a mutable reference to the value of type <code>T</code> in this …","Debug formatter for the value.","","","","","","","","","","","","","","","","Deserializes a reflected value.","","","","","","","Downcasts the value to type <code>T</code>, consuming the trait object.","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Downcasts the value to type <code>T</code> by mutable reference.","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Downcasts the value to type <code>T</code> by reference.","Returns a reference to the object within the trait object …","Drain the elements of this array to get a vector of owned …","Drain the elements of this list to get a vector of owned …","Drain the key-value pairs of this map to get a vector of …","Drain the fields of this tuple to get a vector of owned …","","","","","","","","","","Gets a typed, read-only reference to the specified element …","Gets a typed, read-only reference to the specified element …","Create a type registry with <em>no</em> registered types.","The default debug formatter for <code>Enum</code> types.","Returns the <code>u64</code> hash of the given enum.","Compares an <code>Enum</code> with a <code>Reflect</code> value.","","","","","","","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field (in the …","Get the field with the given name.","","","","","Get the field with the given name.","Returns a reference to the value of the field with index …","Returns a reference to the value of the field (in the …","Get the field at the given index.","","Get the field at the given index.","Get the field at the given index.","","Get the field at the given index.","Get the field at the given index.","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field (in …","","","Returns the number of fields in the struct.","Returns the number of fields in the tuple.","Returns the number of fields in the tuple struct.","Returns the number of fields in the current variant.","The total number of fields in this struct.","","The total number of fields in this tuple.","","The total number of fields in this struct.","","","The total number of fields in this variant.","The total number of fields in this variant.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field (in …","","","","","A slice containing the names of all fields in order.","A slice containing the names of all fields in order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create a <code>DynamicEnum</code> from an existing one.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>DynamicEnum</code> from an existing one.","Constructs a concrete instance of <code>Self</code> from a reflected …","Perform a <code>FromReflect::from_reflect</code> conversion on the …","","","","","","","","","","","","","","","","","Returns a reference to the element at <code>index</code>, or <code>None</code> if …","Returns a reference to the element at <code>index</code>, or <code>None</code> if …","Returns a reference to the value associated with the given …","Returns a reference to the <code>TypeRegistration</code> of the type …","","","","Returns the key-value pair at <code>index</code> by reference, or <code>None</code> …","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns a mutable reference to the value of the field with …","","","","","","","","","Returns a mutable reference to the element at <code>index</code>, or …","Returns a mutable reference to the element at <code>index</code>, or …","Returns a mutable reference to the value associated with …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","","","","Turn the value into a serializable representation","Returns a reference to the <code>TypeData</code> of type <code>T</code> associated …","Returns a mutable reference to the <code>TypeData</code> of type <code>T</code> …","Returns the <code>TypeInfo</code> of the underlying type.","Returns the <code>TypeInfo</code> associated with the given <code>TypeId</code>.","","","","","","","","","Returns a reference to the <code>TypeRegistration</code> of the type …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","Returns a reference to the <code>TypeRegistration</code> of the type …","Returns a mutable reference to the <code>TypeRegistration</code> of the …","","","","A replacement for <code>#[derive(Reflect)]</code> to be used with …","","","Returns the index of the field.","Returns the index of the field (in the current variant) …","Get the index of the field with the given name.","Gets the index of the field with the given name.","","Get the index of the variant with the given name.","Get the index of the field with the given name.","Inserts an element at position <code>index</code> within the list, …","Inserts an instance of <code>T</code> into this registration’s type …","","Inserts a typed key-value pair into the map.","Inserts a field named <code>name</code> with the typed value <code>value</code> into …","Appends a typed element with value <code>value</code> to the tuple.","Appends a typed element with value <code>value</code> to the tuple …","Inserts a key-value pair into the map.","","Inserts a field named <code>name</code> with value <code>value</code> into the …","Appends an element with value <code>value</code> to the tuple.","Appends an element with value <code>value</code> to the tuple struct.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a boxed reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>","Returns true if the trait object wraps an object of type …","Check if the given type matches the array type.","Check if the given type matches the field type.","Check if the given type matches the field type.","Check if the given type matches the list type.","Check if the given type matches the map type.","Check if the given type matches the struct type.","Check if the given type matches the tuple type.","Check if the given type matches the tuple struct type.","Check if the given type matches the underlying type.","Check if the given type matches the value type.","Check if the given type matches the dynamic value type.","Check if the given type matches the enum type.","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the collection contains no elements.","Returns <code>true</code> if the list contains no elements.","Returns true if the current variant’s type matches the …","Check if the given type matches the array item type.","Check if the given type matches the list item type.","The <code>TypeId</code> of the array item.","The <code>TypeId</code> of the list item.","The type name of the array item.","The type name of the list item.","Returns an iterator over the array.","Returns an iterator over the list.","Returns an iterator over the key-value pairs of the map.","Returns an iterator over the <code>TypeRegistration</code>s of the …","","","","Iterate over the fields of this struct.","Iterate over the fields of this tuple.","Iterate over the fields of this struct.","Iterate over the variants of this enum.","Iterate over the fields of this variant.","Iterate over the fields of this variant.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple’s …","Returns an iterator over the values of the tuple struct’…","Returns an iterator over the values of the current variant…","","","","","Returns a mutable iterator over the <code>TypeRegistration</code>s of …","Check if the given type matches the key type.","The <code>TypeId</code> of the key.","The type name of the key.","Returns the number of elements in the array.","Returns the number of elements in the list.","Returns the number of elements in the map.","","","","Applies the elements of <code>b</code> to the corresponding elements of …","The default debug formatter for <code>List</code> types.","Returns the <code>u64</code> hash of the given list.","Compares a <code>List</code> with a <code>Reflect</code> value.","Applies the elements of reflected map <code>b</code> to the …","The default debug formatter for <code>Map</code> types.","Compares a <code>Map</code> with a <code>Reflect</code> value.","","","The name of the field.","Returns the type name of the list.","Returns the type name of the map.","The name of the struct.","Returns the type name of the struct.","Returns the type name of the tuple.","The name of the struct.","Returns the type name of the tuple struct.","Returns the type name of the enum.","The name of the enum.","","The name of this variant.","The name of this variant.","The name of this variant.","Returns the name of the field with index <code>index</code>.","Returns the name of the field (in the current variant) …","","","Creates a new <code>ArrayIter</code>.","Creates a new <code>ListIter</code>.","","","","Create a type registry with default registrations for …","","Create a new <code>ArrayInfo</code>.","","Create a new <code>NamedField</code>.","","Create a new <code>ListInfo</code>.","Create a new <code>MapInfo</code>.","Create a new <code>StructInfo</code>.","Create a new <code>TupleInfo</code>.","Create a new <code>TupleStructInfo</code>.","","","Create a new <code>DynamicEnum</code> to represent an enum at runtime.","Create a new <code>EnumInfo</code>.","Create a new <code>StructVariantInfo</code>.","Create a new <code>TupleVariantInfo</code>.","Create a new <code>UnitVariantInfo</code>.","Create a new <code>DynamicEnum</code> with a variant index to represent …","","","","","","","","Creates type registration information for <code>T</code>.","Parses a <code>ParsedPath</code> from a string.","","Returns a statically typed reference to the value …","Returns a statically typed mutable reference to the value …","Removes the <em>back</em> element from the list and returns it, or …","","","","Appends an element to the <em>back</em> of the list.","Appends a typed value to the list.","","Appends a <code>Reflect</code> trait object to the list.","Takes a read lock on the underlying <code>TypeRegistry</code>.","Gets a read-only reference to the specified element on the …","Gets a mutable reference to the specified element on the …","Returns a hash of the value (which includes the type).","","","","Returns a mutable enumeration of “kinds” of type.","","","","","","","","Returns an owned enumeration of “kinds” of type.","","","","","","","","Returns a “partial equality” comparison result.","","","","","","","","Returns a reference to the value specified by <code>path</code>.","","","","","","","","","Returns a mutable reference to the value specified by <code>path</code>.","","","","","","","","","Returns an enumeration of “kinds” of type.","","","","","","","","","Registers the type <code>T</code>, adding reflect data as specified in …","Registers the type data <code>D</code> for type <code>T</code>.","Removes and returns the element at position <code>index</code> within …","Removes an entry from the map.","","","Returns <code>true</code> if the underlying value represents a value of …","","Returns a serializable version of the value.","Performs a type-checked assignment of a reflected value to …","","","","","","","","","Sets the type name of the list.","Sets the type name of the map.","Sets the type name of the struct.","Manually sets the type name of the tuple.","Sets the type name of the tuple struct.","Sets the type name of the enum.","Set the current enum variant represented by this struct.","Set the current enum variant represented by this struct …","Returns the short name of the type.","","","","","","","","","","The default debug formatter for <code>Struct</code> types.","Compares a <code>Struct</code> with a <code>Reflect</code> value.","Downcasts the value to type <code>T</code>, unboxing and consuming the …","Attempts to downcast the given value to <code>Self</code> using, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies the elements of <code>b</code> to the corresponding elements of …","The default debug formatter for <code>Tuple</code> types.","Compares a <code>Tuple</code> with a <code>Reflect</code> value.","The default debug formatter for <code>TupleStruct</code> types.","Compares a <code>TupleStruct</code> with a <code>Reflect</code> value.","","","","","","","","","","","Returns the <code>TypeId</code> of the type.","","","","","The <code>TypeId</code> of the array.","","","The <code>TypeId</code> of the field.","","The <code>TypeId</code> of the field.","","The <code>TypeId</code> of the list.","","","The <code>TypeId</code> of the map.","","","","","The <code>TypeId</code> of the struct.","","","The <code>TypeId</code> of the tuple.","","","The <code>TypeId</code> of the tuple struct.","","","","The <code>TypeId</code> of the underlying type.","","The <code>TypeId</code> of the value.","","The <code>TypeId</code> of the dynamic value.","","","","Returns the <code>TypeId</code> that the <code>ReflectFromPtr</code> was constructed …","","","","","The <code>TypeId</code> of the enum.","","","","","","Returns the compile-time info for the underlying type.","","Returns a reference to the registration’s <code>TypeInfo</code>","","","","","","","","Returns the type name of the underlying type.","","Returns the name of the type.","The type name of the array.","","The type name of the field.","The type name of the field.","The type name of the list.","","The type name of the map.","","The type name of the struct.","","The type name of the tuple.","","The type name of the tuple struct.","","The name of the underlying type.","The type name of the value.","The type name of the dynamic value.","","The type name of the enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helpers for working with Bevy reflection.","","Check if the given type matches the value type.","The <code>TypeId</code> of the value.","The type name of the value.","Get a variant with the given name.","Get a variant at the given index.","The index of the current variant.","","The number of variants in this enum.","The name of the current variant.","","A slice containing the names of all variants in order.","Returns the full path to the current variant.","Returns the full path to the given variant.","The type of the current variant.","","Takes a write lock on the underlying <code>TypeRegistry</code>.","","","","","","","","","","","","","","","","","","","","","","","","An object-safe equivalent of Serde’s <code>Deserializer</code> trait.","Error when a <code>Serializer</code> or <code>Deserializer</code> trait object fails.","Result type alias where the error is <code>erased_serde::Error</code>.","An object-safe equivalent of Serde’s <code>Serialize</code> trait.","An object-safe equivalent of Serde’s <code>Serializer</code> trait.","","","","","","","","Deserialize a value of type <code>T</code> from the given trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert any Serde <code>Deserializer</code> to a trait object.","Convert any Serde <code>Serializer</code> to a trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Serialize the given type-erased serializable value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implement <code>serde::Serialize</code> for a trait object that has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait for types which can be constructed from a …","Derives the <code>FromReflect</code> trait.","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","A reflected Rust type.","","A struct used to provide the default value of a type.","A struct used to deserialize reflected instances of a type.","A struct used to serialize reflected instances of a type.","A reflected Rust regular struct type.","A reflected Rust tuple struct.","Applies a reflected value to this value.","Returns the value as a <code>&amp;dyn Any</code>.","Returns the value as a <code>&amp;mut dyn Any</code>.","Casts this type to a reflected value.","Casts this type to a mutable reflected value.","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTupleStruct</code>.","Clones the value as a <code>Reflect</code> trait object.","Debug formatter for the value.","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field with …","Returns the number of fields in the struct.","Returns the number of fields in the tuple struct.","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Constructs a concrete instance of <code>Self</code> from a reflected …","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","Returns the <code>TypeInfo</code> of the underlying type.","Returns the value as a <code>Box&lt;dyn Any&gt;</code>.","Casts this type to a boxed reflected value.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple struct’…","Returns the name of the field with index <code>index</code>.","Returns a hash of the value (which includes the type).","Returns a mutable enumeration of “kinds” of type.","Returns an owned enumeration of “kinds” of type.","Returns a “partial equality” comparison result.","Returns an enumeration of “kinds” of type.","","Returns a serializable version of the value.","Performs a type-checked assignment of a reflected value to …","Attempts to downcast the given value to <code>Self</code> using, …","Returns the type name of the underlying type.","","","","","","","","A general purpose serializer for reflected types.","","","Contains data relevant to the automatic reflect powered …","","","","A deserializer for type registrations.","A deserializer for reflected types whose <code>TypeInfo</code> is known.","A serializer for reflected types whose type is known and …","A general purpose deserializer for reflected types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if there are no ignored fields.","Returns true if the given index corresponds to a field …","Returns the number of ignored fields.","","","","","","","","Creates a new <code>SerializationData</code> instance given:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct used to provide the default value of a type.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A container for <code>TypeInfo</code> over generic types, allowing …","A container for <code>TypeInfo</code> over non-generic types, allowing …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the <code>TypeInfo</code> stored in the cell.","Returns a reference to the <code>TypeInfo</code> stored in the cell.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Initialize a <code>NonGenericTypeInfoCell</code> for non-generic types.","Initialize a <code>GenericTypeInfoCell</code> for generic types.","","","","","","","","","Cleanup render resources here.","The copy of <code>apply_system_buffers</code> that runs immediately …","A helper for accessing <code>MainWorld</code> content using a system …","The copy of <code>apply_system_buffers</code> that runs at the begining …","Schedule which extract data from the main world and …","The simulation <code>World</code> of the application, stored as a …","Sort the <code>RenderPhases</code> here.","The copy of <code>apply_system_buffers</code> that runs immediately …","Prepare render resources from the extracted data for the …","The copy of <code>apply_system_buffers</code> that runs immediately …","Create <code>BindGroups</code> that depend on <code>Prepare</code> data and queue up …","The copy of <code>apply_system_buffers</code> that runs immediately …","Actual rendering happens here. In most cases, only the …","A Label for the rendering sub-app.","The copy of <code>apply_system_buffers</code> that runs immediately …","Contains the default Bevy rendering backend based on wgpu.","The labels of the default App rendering sets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets up the base structure of the rendering <code>Schedule</code>.","","","","","","","","","","","","","","Initializes the renderer, sets up the <code>RenderSet</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The modular rendering abstraction responsible for queuing, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Keeping the aspect ratio while the axes can’t be bigger …","Keeping the aspect ratio while the axes can’t be smaller …","The defining component for camera entities, storing …","","","Trait to control the projection matrix of a camera.","Adds <code>Camera</code> driver systems for a given projection type.","Configures the <code>RenderGraph</code> name assigned to be run for a …","Label for <code>camera_system&lt;T&gt;</code>, shared across all <code>T</code>.","Holds internally computed <code>Camera</code> values.","","Manually specify the projection’s size, ignoring window …","Keep the projection’s width constant; height will be …","Keep the projection’s height constant; width will be …","Image to which the camera’s view is rendered.","Image to which the camera’s view is rendered.","Normalized version of the render target.","","Project a 3D space onto a 2D surface using parallel lines, …","","A 3D camera projection in which distant objects appear …","A configurable <code>CameraProjection</code> that can select its …","The “target” that a <code>Camera</code> will render to. For …","Information about the current <code>RenderTarget</code>.","","Render viewport configuration for the <code>Camera</code> component.","Window to which the camera’s view is rendered.","Window to which the camera’s view is rendered.","Match the viewport size. The argument is the number of …","","","","","","","","","","","","","The area that the projection covers relative to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The aspect ratio (width divided by height) of the viewing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System in charge of updating a <code>Camera</code> when its window or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computed values for this camera, such as the projection …","","","","","","","","","","","","The minimum and maximum depth to render (on a scale from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The distance from the camera in world units of the viewing …","The distance of the far clipping plane in world units.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The vertical field of view (FOV) in radians.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the <code>TextureFormat</code> of this render target, if it …","","","","","","","","","","","","","","","","","","","","","","If this is set to <code>true</code>, the camera will use an …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is set to <code>true</code>, this camera will be rendered to …","","","","","","","","","","","","The full logical size of this camera’s <code>RenderTarget</code>, …","The rendered logical bounds (minimum, maximum) of the …","The logical size of this camera’s viewport. If the …","","","","","","","","","Given a position in Normalized Device Coordinates, use the …","The distance from the camera in world units of the viewing …","The distance of the near clipping plane in world units.","","Creates a new <code>CameraRenderGraph</code> from any string-like type.","Normalize the render target down to a more concrete value, …","Cameras with a higher order are rendered later, and thus …","","","The physical position to render this viewport to within …","The physical size of the viewport rectangle to render to …","The physical size of this render target (ignores scale …","The full physical size of this camera’s <code>RenderTarget</code>, …","","The rendered physical bounds (minimum, maximum) of the …","The physical size of this camera’s viewport. If the …","","The projection matrix computed using this camera’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Scales the projection in world units.","The scale factor of this render target.","How the projection will scale when the viewport is resized.","","","","","Sets the graph name.","","","","","","","The “target” that this camera will render to.","","Converts a physical size in this <code>Camera</code> to a logical size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set, this camera will render to the given <code>Viewport</code> …","","Specifies the origin of the viewport as a normalized …","Returns a ray originating from the camera, that passes …","Returns a 2D world position computed from a position on …","Given a position in world space, use the camera’s …","Given a position in world space, use the camera to compute …","","","","","","","","","","","","","","","","","","","","","","","","","","","HSL (hue, saturation, lightness) color with an alpha …","","","","LCH(ab) (lightness, chroma, hue) color with an alpha …","","","","","","","","","","","","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","","","","","","","","","","","","Get alpha.","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Hsla</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from HSL colorspace","Converts a <code>Color</code> to a <code>[f32; 4]</code> from LCH colorspace","Converts a <code>Color</code> to a <code>[f32; 4]</code> from linear RGB colorspace","Converts Color to a u32 from linear RGB colorspace.","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Converts a <code>Color</code> to variant <code>Color::RgbaLinear</code>","Converts <code>Color</code> to a <code>u32</code> from sRGB colorspace.","Get blue in sRGB colorspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get green in sRGB colorspace.","","","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> with HSL representation in sRGB colorspace.","converts a color in HLS space to sRGB space","New <code>Color</code> with HSL representation in sRGB colorspace.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","converts a color in LCH space to sRGB space","","","","","","","","","","","","","converts a color in sRGB space to HLS space","converts a color in sRGB space to LCH space","","","Get red in sRGB colorspace.","","","","","","","","","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","","","Set alpha.","Set blue in sRGB colorspace.","Set green in sRGB colorspace.","Set red in sRGB colorspace.","","","","","","","","","","","","","","","","","","","","","","","","Returns this color with a new alpha value.","Returns this color with blue set to a new value in sRGB …","Returns this color with green set to a new value in sRGB …","Returns this color with red set to a new value in sRGB …","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Chroma channel. [0.0, 1.5]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Lightness channel. [0.0, 1.5]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","Stores all uniforms of the component type.","Stores the index of a uniform inside of <code>ComponentUniforms</code>.","Describes how a component gets extracted for rendering.","Implements <code>ExtractComponent</code> trait for a component. The …","This plugin extracts the components into the “render …","Filters the entities with additional constraints.","The output from extraction.","ECS <code>WorldQuery</code> to fetch the components to extract.","This plugin prepares the components of the corresponding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines how the component is transferred into the “…","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how a resource gets extracted for rendering.","","This plugin extracts the resources into the “render world…","","","","","","","","","","This system extracts the resource of the corresponding …","Defines how the resource is transferred into the “render …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","The buffer containing the <code>GlobalsUniform</code>","","Contains global values useful when writing shaders. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Per vertex coloring. Use in conjunction with …","Per vertex joint transform matrix index. Use in …","Per vertex joint transform matrix weight. Use in …","The direction the vertex normal is facing in. Use in …","Where the vertex is located in space. Use in conjunction …","The direction of the vertex tangent. Used for normal …","Texture coordinates for the vertex. Use in conjunction …","","","","","Failed to generate tangents for the mesh.","The index/vertex buffer info of a <code>GpuMesh</code>.","The GPU-representation of a <code>Mesh</code>. Consists of a vertex …","","","An array of indices into the <code>VertexAttributeValues</code> for a …","","","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","","Adds the <code>Mesh</code> as an asset and makes sure that they are …","","","","","","","","","Vertex data is a list of points. Each vertex is a new …","Primitive type the input mesh is composed of.","","","","","","","","","","","","","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","","","","","","","","","","","","","","","","","","Contains an array where each entry describes a property of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the values as float triples if possible.","","Retrieves the data currently set to the vertex attribute …","","Retrieves the data currently set to the vertex attribute …","Returns an iterator that yields references to the data of …","Returns an iterator that yields mutable references to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the Axis-Aligned Bounding Box of the mesh vertices …","Calculates the <code>Mesh::ATTRIBUTE_NORMAL</code> of a mesh.","","","Counts all vertices of the mesh.","","","","","","","","","","","","","Duplicates the vertex attributes so that no vertices are …","","","","","","","","","","","Clones the mesh.","","","","","","","","","","","","","The format of the vertex attribute.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate tangents for the mesh using the <code>mikktspace</code> …","Flattens the <code>VertexAttributeValues</code> into a sequence of …","","","Computes and returns the index data of the mesh as bytes. …","","For a given <code>descriptor</code> returns a <code>VertexBufferLayout</code> …","","Computes and returns the vertex data of the mesh as bytes. …","","","","The <em>unique</em> id of the vertex attribute. This will also …","","","Retrieves the vertex <code>indices</code> of the mesh.","Retrieves the vertex <code>indices</code> of the mesh mutably.","Sets the data for a vertex attribute (position, normal …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if there are no vertices in this …","Returns <code>true</code> if there are no indices.","Returns an iterator over the indices.","","","Returns the number of vertices in this …","Returns the number of indices.","The friendly name of the vertex attribute","","Construct a new mesh. You need to provide a …","","","Converts the extracted mesh a into <code>GpuMesh</code>.","Returns the topology of the mesh.","","","","Removes the data for a vertex attribute","Sets the vertex indices of the mesh. They describe how …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","Contains all attribute data for each vertex.","Contains all index data of a mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","","","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Consumes the <code>OnceCell</code>, returning the wrapped value.","","","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","","","Creates a new initialized cell.","Channel to send the render app from the main thread to the …","The <code>PipelinedRenderingPlugin</code> can be added to your …","A Label for the sub app that runs the parts of pipelined …","Channel to send the render app from the render thread to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The defining component for camera entities, storing …","","Algorithmically-computed indication of whether an entity …","Schedule which extract data from the main world and …","An invisible <code>SpatialBundle</code>, with no translation, rotation, …","An entity with <code>Visibility::Hidden</code> will be unconditionally …","HSL (hue, saturation, lightness) color with an alpha …","A visible <code>SpatialBundle</code>, with no translation, rotation, …","","Adds the <code>Image</code> as an asset and makes sure that they are …","An entity with <code>Visibility::Inherited</code> will inherit the …","LCH(ab) (lightness, chroma, hue) color with an alpha …","","Configuration resource for Multi-Sample Anti-Aliasing.","","","Project a 3D space onto a 2D surface using parallel lines, …","","A 3D camera projection in which distant objects appear …","A configurable <code>CameraProjection</code> that can select its …","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","A <code>Bundle</code> with the following <code>Component</code>s:","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code> and <code>ComputedVisibility</code> <code>Component</code>…","An entity with <code>Visibility::Visible</code> will be unconditionally …","The area that the projection covers relative to …","","","","The aspect ratio (width divided by height) of the viewing …","","","Computed values for this camera, such as the projection …","The computed visibility of the entity.","The computed visibility of the entity.","","","The default image sampler to use when <code>ImageSampler</code> is set …","","The distance from the camera in world units of the viewing …","The distance of the far clipping plane in world units.","","The vertical field of view (FOV) in radians.","","Returns the argument unchanged.","Creates a new <code>SpatialBundle</code> from a <code>Transform</code>.","","The global transform of the entity.","If this is set to <code>true</code>, the camera will use an …","Calls <code>U::from(self)</code>.","","","","","If this is set to <code>true</code>, this camera will be rendered to …","The distance from the camera in world units of the viewing …","The distance of the near clipping plane in world units.","Cameras with a higher order are rendered later, and thus …","The <code>ImageSampler</code> to use during rendering.","Scales the projection in world units.","How the projection will scale when the viewport is resized.","The “target” that this camera will render to.","","","The transform of the entity.","","","","","If set, this camera will render to the given <code>Viewport</code> …","Specifies the origin of the viewport as a normalized …","The visibility of the entity.","The visibility of the entity.","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Chroma channel. [0.0, 1.5]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Lightness channel. [0.0, 1.5]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","An axis-aligned bounding box.","","","A frustum defined by the 6 containing planes Planes are …","A plane defined by a unit normal and distance from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Signed distance from the origin along the unit normal such …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a frustum derived from <code>view_projection</code>.","Returns a frustum derived from <code>view_projection</code>, but with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs a <code>Plane</code> from a 4D vector whose first 3 …","<code>Plane</code> unit normal","<code>Plane</code> unit normal and signed distance from the origin such …","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the relative radius of the AABB with respect to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The representation of the asset in the “render world”.","Temporarily stores the extracted and removed assets of the …","Specifies all ECS data required by …","","","","","All assets that should be prepared next frame.","The GPU-representation of the asset.","Describes how an asset gets extracted and prepared for …","This plugin extracts the changed assets from the “app …","Stores all GPU representations (<code>RenderAsset::PreparedAssets</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the asset into a <code>RenderAsset::ExtractedAsset</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prepares the <code>extracted asset</code> for the GPU by transforming …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A GPU-accessible <code>Buffer</code>.","A GPU-accessible <code>Buffer</code>.","","An edge, which connects two <code>Nodes</code> in a <code>RenderGraph</code>.","","","","A collection of input and output <code>Edges</code> for a <code>Node</code>.","A <code>Node</code> without any inputs, outputs and subgraphs, which …","An entity from the ECS.","An entity from the ECS.","","A <code>Node</code> which acts as an entry point for a <code>RenderGraph</code> with …","The name of the <code>GraphInputNode</code> of this graph. Used to …","","","","","","","","","","","","","","","","","","","A render node that can be added to a <code>RenderGraph</code>.","An edge describing to ordering of both nodes (<code>output_node</code> …","","","A <code>NodeLabel</code> is used to reference a <code>NodeState</code> by either its …","","The internal representation of a <code>Node</code>, with all data …","","","The render graph configures the modular, parallel and …","The context with all graph information required to run a …","","A <code>RenderGraph</code> <code>Node</code> that takes a view entity as input and …","A command that signals the graph runner to run the sub …","","","A texture <code>Sampler</code> defines how a pipeline will sample from …","A texture <code>Sampler</code> defines how a pipeline will sample from …","An edge describing to ordering of both nodes (<code>output_node</code> …","The internal representation of a slot, which specifies its …","A collection of input or output <code>SlotInfos</code> for a <code>NodeState</code>.","A <code>SlotLabel</code> is used to reference a slot by either its name …","Describes the render resources created (output) or used …","A value passed between render <code>Nodes</code>. Corresponds to the …","","A <code>TextureView</code> describes a texture used in a pipeline.","A <code>TextureView</code> describes a texture used in a pipeline.","","","","Adds the <code>node</code> with the <code>name</code> to the graph. If the name is …","Adds the <code>Edge::NodeEdge</code> to the graph. This guarantees that …","Adds the <code>Edge::SlotEdge</code> to the graph. This guarantees that …","Adds the <code>sub_graph</code> with the <code>name</code> to the graph. If the name …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finishes the context for this <code>Node</code> by returning the sub …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Retrieves the input slot value referenced by the <code>label</code>.","Retrieves the input slot value referenced by the <code>label</code> as …","Retrieves the input slot value referenced by the <code>label</code> as …","Returns the id of the <code>input_node</code>.","Returns the <code>NodeState</code> of the input node of this graph.","Retrieves the input slot value referenced by the <code>label</code> as …","Searches the <code>input_edges</code> for a <code>Edge::SlotEdge</code>, which …","Retrieves the input slot value referenced by the <code>label</code> as …","Retrieves the <code>Node</code> referenced by the <code>label</code>.","Retrieves the <code>NodeId</code> referenced by the <code>label</code>.","Retrieves the <code>Node</code> referenced by the <code>label</code> mutably.","Retrieves the <code>NodeState</code> referenced by the <code>label</code>.","Retrieves the <code>NodeState</code> referenced by the <code>label</code> mutably.","Returns the id of the <code>output_node</code>.","Searches the <code>output_edges</code> for a <code>Edge::SlotEdge</code>, which …","Retrieves the <code>SlotInfo</code> for the provided label.","Retrieves the index (inside input or output slots) of the …","Retrieves the <code>SlotInfo</code> for the provided label mutably.","Retrieves the sub graph corresponding to the <code>name</code>.","Retrieves the sub graph corresponding to the <code>name</code> mutably.","Checks whether the <code>edge</code> already exists in the graph.","Checks whether the input edge already exists.","Checks whether the output edge already exists.","","Returns this node’s id.","","","","","","","","Specifies the required input slots for this node. They …","","Returns all “input edges” (edges going “in”) for …","Returns the <code>SlotInfos</code> of the inputs.","Returns the <code>NodeState</code> of the input node of this graph.","","Returns the input slot values for the node.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if there are no slots.","Returns an iterator over the slot infos.","Returns an iterator over a tuple of the input edges and …","Returns an iterator over a tuple of the output edges and …","Returns an iterator over the <code>NodeStates</code>.","Returns an iterator over the <code>NodeStates</code>, that allows …","Returns an iterator over the sub graphs.","Returns an iterator over the sub graphs, that allows …","Returns the count of slots.","","","","Creates a new render graph context for the <code>node</code>.","Creates an <code>NodeState</code> without edges, but the <code>input_slots</code> …","","","","Retrieves the <code>Node</code>.","","Retrieves the <code>Node</code> mutably.","","Specifies the produced output slots for this node. They …","Returns all “output edges” (edges going “out”) for …","Returns the <code>SlotInfos</code> of the outputs.","","","","","","","Removes the <code>node</code> with the <code>name</code> from the graph. If the name …","Removes the <code>Edge::NodeEdge</code> from the graph. If either node …","Removes the <code>Edge::SlotEdge</code> from the graph. If any nodes or …","Removes the <code>sub_graph</code> with the <code>name</code> from the graph. If the …","Runs the graph node logic, issues draw calls, updates the …","","","","Queues up a sub graph for execution after the node has …","Creates an <code>GraphInputNode</code> with the specified slots if not …","Sets the output slot value referenced by the <code>label</code>.","Returns the <code>SlotType</code> of this value.","","","","","","","","","","","","","","","","Adds the <code>Edge::NodeEdge</code> to the graph. This guarantees that …","Adds the <code>Edge::SlotEdge</code> to the graph. This guarantees that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of the type that implements <code>Node</code>.","","","","","","","","","","","","","","","","","","","","","","","Updates internal node state using the current render <code>World</code> …","Updates all nodes and sub graphs of the render graph. …","Verifies that the edge existence is as expected and checks …","Validates that each input slot corresponds to an input …","Validates that each output slot corresponds to an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registers a <code>RenderCommand</code> as a <code>Draw</code> function. They are …","The result of a batching operation.","A <code>PhaseItem</code> that can be batched dynamically.","A <code>PhaseItem</code> item, that automatically sets the appropriate …","A draw function used to draw <code>PhaseItem</code>s.","An identifier for a <code>Draw</code> function stored in <code>DrawFunctions</code>.","Stores all draw functions for the <code>PhaseItem</code> type hidden …","Stores all <code>Draw</code> functions for the <code>PhaseItem</code> type.","","<code>self</code> and <code>other</code> cannot be batched together","Specifies the ECS data of the item entity required by …","Specifies the general ECS data (e.g. resources) required …","An item (entity of the render world) which will be drawn …","<code>RenderCommand</code>s are modular standardized pieces of render …","The result of a <code>RenderCommand</code>.","Wraps a <code>RenderCommand</code> into a state so that it can be used …","A collection of all rendering instructions, that will be …","A <code>RenderCommand</code> that sets the pipeline for the …","The type used for ordering the items. The smallest values …","","The <code>other</code> item was batched into <code>self</code>","A <code>RenderPass</code>, which tracks the current pipeline state to …","A distance calculator for the draw order of <code>PhaseItem</code>s.","Specifies the ECS data of the view entity required by …","Adds the <code>Draw</code> function and maps it to its own type.","Adds a <code>PhaseItem</code> to this render phase.","Adds the <code>RenderCommand</code> for the specified <code>RenderPhase</code> to …","Batches another item within this item if they are …","Adds the <code>Draw</code> function and maps it to the type <code>T</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Batches the compatible <code>BatchedPhaseItem</code>s of this render …","This system batches the <code>PhaseItem</code>s of all <code>RenderPhase</code>s of …","Range in the vertex buffer of this item.","Range in the vertex buffer of this item.","","","","","","","","","","","","","","","","","","","","","The id of the render pipeline, cached in the <code>PipelineCache</code>…","","","","","","","Calculates the distance, or view-space <code>Z</code> value, for the …","","","","","","","","","","","Draws a <code>PhaseItem</code> by issuing zero or more <code>draw</code> calls via …","Fetches the ECS parameters for the wrapped <code>RenderCommand</code> …","Draws primitives from the active vertex buffer(s).","Specifies the <code>Draw</code> function used to render the item.","","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","The corresponding entity that will be drawn.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a 3D rangefinder for a view matrix.","","","","","Retrieves the id of the <code>Draw</code> function corresponding to …","Retrieves the <code>Draw</code> function corresponding to the <code>id</code> …","","Retrieves the id of the <code>Draw</code> function corresponding to …","","Insert a single debug marker.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","Creates a new <code>RenderCommandState</code> for the <code>RenderCommand</code>.","Tracks the supplied render pass.","End the current debug group.","Prepares the draw function to be used. This is called once …","Prepares all draw function. This is called once and only …","Prepares the render command to be used. This is called …","Start a new debug group.","Accesses the draw functions in read mode.","Renders a <code>PhaseItem</code> by recording commands (e.g. setting …","","Renders all of its <code>PhaseItem</code>s using their corresponding …","Sets the active bind group for a given bind group index. …","Sets the blend color as used by some of the blending modes.","Set the rendering viewport to the given camera <code>Viewport</code>.","Sets the active index buffer.","Set push constant data.","Sets the active <code>RenderPipeline</code>.","Sets the scissor region.","Sets the stencil reference.","Assign a vertex buffer to a slot.","Set the rendering viewport.","Sorts a slice of phase items into render order. Generally …","Sorts all of its <code>PhaseItem</code>s.","Determines the order in which the items are drawn.","This system sorts the <code>PhaseItem</code>s of all <code>RenderPhase</code>s of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accesses the draw functions in write mode.","Enable writes to all channels.","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","Converts a value to a <code>BindGroup</code> with a given …","","An error that occurs during <code>AsBindGroup::as_bind_group</code> …","Converts a value to a <code>ShaderType</code> for use in a bind group. …","","","","block compressed texture. 16 bytes per block.","Enable blue channel writes","Back face","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Bind groups are responsible for binding render resources …","Describes a group of bindings and the resources to be …","An element of a <code>BindGroupDescriptor</code>, consisting of a …","","","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","","","","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","","Describes a Buffer when allocating.","Integral type used for buffer slice sizes.","","Different ways that you can use a buffer.","A structure for storing raw bytes that have already been …","Enable red, green, and blue channel writes","Binding is visible from the compute shader of a compute …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Index of a cached compute pipeline in a <code>PipelineCache</code>.","","State of a cached pipeline inserted into a <code>PipelineCache</code>.","Index of a cached render pipeline in a <code>PipelineCache</code>.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Clear with a specified value.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","A <code>ComputePipeline</code> represents a compute pipeline and its …","","Describes a compute pipeline.","","","Constant","","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Data that will be stored alongside the “prepared” bind …","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Use the “default” shader for the current context.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","D.component","D.alpha","Stores data to be transferred to the GPU and made …","Stores data to be transferred to the GPU and made …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Function passes if new value is equal to existing value. …","","","","","","","","","","","","An error occurred while trying to create the pipeline GPU …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","Binding is visible from the fragment shader of a render …","Face of a vertex.","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2</code> in shaders.","Four half-precision floats (no Rust equiv). <code>vec4</code> in …","One single-precision float (f32). <code>float</code> in shaders.","Two single-precision floats (f32). <code>vec2</code> in shaders.","Three single-precision floats (f32). <code>vec3</code> in shaders.","Four single-precision floats (f32). <code>vec4</code> in shaders.","One double-precision float (f64). <code>double</code> in shaders. …","Two double-precision floats (f64). <code>dvec2</code> in shaders. …","Three double-precision floats (f64). <code>dvec3</code> in shaders. …","Four double-precision floats (f64). <code>dvec4</code> in shaders. …","","Describes the fragment process in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","Enable green channel writes","","","","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","A handle to a shader stored in the <code>Assets&lt;Shader&gt;</code> resource","Ignore the stencil state for the face.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","An invalid cached render pipeline index, often used to …","An invalid cached compute pipeline index, often used to …","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","Vertex data is advanced every instance.","","","Bitwise inverts stencil value.","Keep stencil value unchanged.","","","","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Load from memory.","Operation to perform to the output attachment at the start …","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Type of buffer mapping.","max(Src, Dst)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","","","Describes the multi-sampling state of a render pipeline.","Binding is not visible from any shader stage.","Naga module.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","The pipeline GPU object was created successfully and is …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S.alpha","Pair of load and store operations for an attachment aspect.","Origin of a copy to/from a texture.","An owned binding resource of any type (ex: a <code>Buffer</code>, …","Blend mode that does standard alpha blending with …","An asset path leading to a shader","A pipeline defining the data layout and shader logic for a …","Cache for render and compute pipelines.","Type of error returned by a <code>PipelineCache</code> when the …","A descriptor for a <code>Pipeline</code>.","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Type of drawing mode for polygons","A prepared bind group returned as a result of …","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","","","A processed Shader. This cannot contain preprocessor …","The pipeline GPU object is queued for creation.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Enable red channel writes","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Describes a compute pipeline.","Describes the fragment processing in a render pipeline.","Describes a render (graphics) pipeline.","Describes how the vertex buffer is interpreted.","Describes the vertex processing in a render pipeline.","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","A <code>RenderPipeline</code> represents a graphics pipeline and its …","","Describes a render (graphics) pipeline.","","","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","The bind group could not be generated. Try again next …","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","","Represents WGSL Size (equivalent to <code>ShaderType::min_size</code>)","Represents WGSL Size (equivalent to <code>ShaderType::min_size</code>)","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","A Sampler defines how a pipeline will sample from a …","","Binding is a sampler.","A sampler that can be used to sample a texture.","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Describes a <code>Sampler</code>.","","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","","","","","","","","","","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","","","A reference to a shader asset.","","","","Trait implemented for all WGSL fixed-footprint types","Source of a shader module.","Stage of the programmable pipeline.","Describes the shader stages that a binding will be visible …","Base trait for all WGSL host-shareable types","","Sampling returns signed integers.","Two signed shorts (i16). <code>ivec2</code> in shaders.","Four signed shorts (i16). <code>ivec4</code> in shaders.","One signed int (i32). <code>int</code> in shaders.","Two signed ints (i32). <code>ivec2</code> in shaders.","Three signed ints (i32). <code>ivec3</code> in shaders.","Four signed ints (i32). <code>ivec4</code> in shaders.","Two signed bytes (i8). <code>ivec2</code> in shaders.","Four signed bytes (i8). <code>ivec4</code> in shaders.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","","","","","","","","","SPIR-V module represented as a slice of words.","","","","","S.component","S.alpha","min(S.alpha, 1.0 - D.alpha)","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","Stores data to be transferred to the GPU and made …","A storage texture.","Specific type of a sample in a texture binding.","Src - Dst","The value is a wgpu <code>SurfaceTexture</code>, but dereferences to a …","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","A GPU-accessible texture.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Describes a <code>Texture</code> with its associated metadata required …","","Binding is backed by a texture.","The value is an actual wgpu <code>TextureView</code>.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","","This type combines wgpu’s <code>TextureView</code> and <code>SurfaceTexture</code> …","","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>uvec2</code> in shaders.","Four unsigned shorts (u16). <code>uvec4</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>uint</code> in shaders.","Two unsigned ints (u32). <code>uvec2</code> in shaders.","Three unsigned ints (u32). <code>uvec3</code> in shaders.","Four unsigned ints (u32). <code>uvec4</code> in shaders.","Two unsigned bytes (u8). <code>uvec2</code> in shaders.","Four unsigned bytes (u8). <code>uvec4</code> in shaders.","A buffer for uniform values.","Stores data to be transferred to the GPU and made …","","","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","Binding is visible from the vertex and fragment shaders of …","","Vertex data is advanced every vertex.","","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","","Whether a vertex buffer is indexed by vertex or by …","Information about an adapter.","Features that are not guaranteed to be supported.","Represents the sets of limits an adapter/device supports.","WGSL module as a string slice.","","","","","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","0.0","Set stencil value to zero.","Adds an <code>Srgb</code> suffix to the given texture format, if the …","Add more <code>BufferUsages</code> to the buffer.","Add more <code>BufferUsages</code> to the buffer.","Add more <code>BufferUsages</code> to the buffer.","Add more <code>BufferUsages</code> to the buffer.","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Alpha equation.","When enabled, produces another sample mask per pixel based …","Valid values: 1, 2, 4, 8, and 16.","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffer.","The stride, in bytes, between elements of this bufferreates a bind group for <code>self</code> matching the layout defined …","Return the <code>T</code> <code>ShaderType</code> for <code>self</code>. When used in <code>AsBindGroup</code> …spect of the texture. Color textures must be …","The copy aspect.","Aspect of the texture. Color textures must be …","Asserts that <code>Self</code> meets the requirements of the uniform …","The list of attributes which comprise a single vertex.","The list of attributes which comprise a single vertex.","Back face mode.","Backend used for device","Base array layer.","Base array layer.","Base mip level.","Base mip level.","Begins recording of a compute pass.","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","","Depth bias state.","","Creates the bind group layout matching all bind groups …","Bind groups that this pipeline uses. The first entry will …","","","","","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","The blending that is used for this pipeline.","Border color to use when address_mode is …he buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","","Depth bias clamp value (absolute).","","","","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Get the texture dimension required of this texture view …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Contents of a buffer on creation.","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Creates a view of this texture.","The face culling mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","The depth of the extent or the number of array layers","The effect of draw calls on the depth and stencil aspects …","The effect of draw calls on the depth and stencil aspects …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written to.","","","","","","","","","","","","","","","","","","","","","Get useful information about the texture format.","","","","PCI id of the adapter","Type of device","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Driver name","Driver info","","","","","","","","","","","","","","","","Multiplier for the destination, which is stored in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …peration that is preformed when stencil test fails.","Finishes recording and returns a <code>CommandBuffer</code> that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the texture view. At this time, it must be the …","Format of the depth/stencil buffer, must be special depth …","Format of the input","The compiled fragment stage, its entry point, and the …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Creates a new densely packed <code>VertexBufferLayout</code> from an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Front face mode.","The face to consider the front for the purpose of culling …","","","","Try to retrieve a compute pipeline GPU object from a …","Get the compute pipeline descriptor a cached render …","Get the state of a cached compute pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to retrieve a render pipeline GPU object from a cached …","Get the render pipeline descriptor a cached render …","Get the state of a cached render pipeline.","","","","","Returns true for buffer bindings with dynamic offset …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the extent","Returns the <code>BindGroupId</code>.","","","","","Returns the <code>ComputePipelineId</code>.","Returns the <code>TextureId</code>.","Returns the <code>TextureViewId</code>.","Returns the <code>SamplerId</code>.","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts debug marker.","Inserts debug marker.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if no flags are currently stored.","","","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Debug label of a buffer. This will show up in graphics …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the pipeline. This will show up in graphics …","","Returns the layer range of a subresource range describes …","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","The layout of bind groups for this pipeline.","","","","","","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Represents the minimum size of <code>Self</code> (equivalent to …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","","The multi-sampling properties of the pipeline.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","","","","","","","","","","","","","","Create a new pipeline cache associated with the given …","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Base offset of the buffer. For bindings with …","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","","","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","The properties of the pipeline at the primitive assembly …","The properties of the pipeline at the primitive assembly …","","Process the pipeline queue and create all pending …","","","","","","","","Push data into the <code>DynamicUniformBuffer</code>’s internal …","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Insert a compute pipeline into the cache, and queue its …","Insert a render pipeline into the cache, and queue its …","Stencil values are AND’d with this mask when reading and …","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Strips the <code>Srgb</code> suffix from the given texture format.","Creates a <code>Buffer</code> on the <code>RenderDevice</code> with size at least …","Resolve a query set, writing the results into the supplied …","The view that will receive the resolved output if …","Resource to attach to the binding","","“Rows” that make up a single “image”.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","","Inserts or removes the specified flags depending on the …","Set the data the buffer stores.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the active bind group for a given bind group index. …","","","","","","","Sets the active compute pipeline.","Set push constant data for subsequent dispatch calls.","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","","","","Location for this input. Must match the location in the …","Returns the size of <code>Self</code> at runtime","Returns the byte size of the format.","Size of the binding, or <code>None</code> for using the rest of the …","","Slope depth biasing factor.","","","","","Source code for the shader.","","","","","","","Multiplier for the source, which is produced by the …","","Stencil state.","What operations will be performed on the stencil part of …","How often this vertex buffer is “stepped” forward.","How often this vertex buffer is “stepped” forward.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the <code>SurfaceTexture</code> of the texture view if it is of …","The color state of the render targets.","The color state of the render targets.","The texture to be copied to/from.","Removes the third dimension from this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds color space and premultiplied alpha information to …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","The primitive topology used to interpret verticeshe type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","If set to true, the polygon depth is not clipped to 0-1 …","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Convenience method to “unwrap” a pipeline state into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","Returns true if the state relies on the constant color, …","","","Vendor PCI id of the adapter","The compiled vertex stage, its entry point, and the input …","The compiled vertex stage, its entry point, and the input …","The view to use as an attachment.","The view to use as an attachment.","Which shader stages can see this binding.","Calculates the volume of the <code>Extent3d</code>.","Width of the extent","","Queues writing of data from system RAM to VRAM using the …","Queues writing of data from system RAM to VRAM using the …","","Queues writing of data from system RAM to VRAM using the …","Queues writing of data from system RAM to VRAM using the …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","X position of the origin","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","Minimum size of the corresponding <code>BufferBinding</code> required …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","","","","","","compressed block dimensions","ASTC RGBA channel","If <code>filterable</code> is false, the texture can’t be sampled with","","","Helper type meant to be used together with the <code>ShaderType</code> …","Trait implemented for WGSL runtime-sized arrays and WGSL …","Dynamic storage buffer wrapper facilitating RW operations","Dynamic uniform buffer wrapper facilitating RW operations","Represents WGSL Size (equivalent to <code>ShaderType::min_size</code>)","Trait implemented for all WGSL fixed-footprint types","Base trait for all WGSL host-shareable types","","Storage buffer wrapper facilitating RW operations","Uniform buffer wrapper facilitating RW operations","","","","","","","","","","","","","","","","","","","","","","","","","Asserts that <code>Self</code> meets the requirements of the uniform …","Asserts that <code>Self</code> meets the requirements of the uniform …","","","","","","","","","","","Returns the size of <code>Self</code> assuming the (contained) …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Used to implement <code>ShaderType</code> for the given matrix type","Used to implement <code>ShaderType</code> for the given runtime-sized …","Used to implement <code>ShaderType</code> for the given vector type","Used to implement <code>ShaderType</code> for the given wrapper type","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Module containing items necessary to implement <code>ShaderType</code> …","Represents the minimum size of <code>Self</code> (equivalent to …","Represents the minimum size of <code>Self</code> (equivalent to …","","","","","","","","","","","","","Module containing items necessary to implement <code>ShaderType</code> …","","","Returns the size of <code>Self</code> at runtime","Returns the size of <code>Self</code> at runtime","","","","","","","","","","","","","","","","","","","","","","Module containing items necessary to implement <code>ShaderType</code> …","","","","","","Helper type for alignment calculations","","","","","","","","","","","Helper type for size calculations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns an alignment that is the smallest power of two …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>n</code> is a multiple of this alignment","","Returns the max alignment from an array of alignments","","","","","","Returns the amount of padding needed so that <code>n + padding</code> …","","","","","","","Will round up the given <code>n</code> so that the returned value will …","Will round up the given <code>n</code> so that the returned value will …","length of the contained runtime sized array","max elements to read into the contained runtime sized array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables writing to the matrix (via <code>&amp;mut [[T; R]; C]</code>)","Enables reading from the matrix (via <code>&amp;[[T; R]; C]</code>)","Enables the cration of a matrix (via <code>[[T; R]; C]</code>)","","","","","Used to implement <code>ShaderType</code> for the given matrix type","","","Used to implement <code>ShaderType</code> for the given runtime-sized …","","","Enables writing to the vector (via <code>&amp;mut [T; N]</code>)","Enables reading from the vector (via <code>&amp;[T; N]</code>)","Enables the cration of a vector (via <code>[T; N]</code>)","","","","","Used to implement <code>ShaderType</code> for the given vector type","","","","","","","","","","The handle to the physical device being used for rendering.","The <code>AdapterInfo</code> of the adapter in use by the renderer.","The context with all information required to interact with …","This GPU device is responsible for the creation of most …","","The GPU instance is used to initialize the <code>RenderQueue</code> and …","This queue is used to enqueue tasks for the GPU to execute …","Append a <code>CommandBuffer</code> to the queue.","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TrackedRenderPass</code> for the context, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the current <code>CommandEncoder</code>.","Initializes <code>Surface</code> for presentation.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","Creates a <code>Buffer</code> and initializes it with the specified …","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Creates a <code>PipelineLayout</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a <code>ShaderModule</code> from either SPIR-V or WGSL source …","Creates a new <code>Texture</code>.","Creates a new <code>Texture</code> and initializes it with the …","","","","","","","","","","","","","","","","","","","List all <code>Features</code> that may be used with this device.","Finalizes the queue and returns the queue of <code>CommandBuffer</code>…","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Initializes the renderer by retrieving and preparing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List all <code>Limits</code> that were requested of this device.","","Creates a new <code>RenderContext</code> from a <code>RenderDevice</code>.","","Check for resource cleanups and mapping callbacks.","","Gets the underlying <code>RenderDevice</code>.","Updates the <code>RenderGraph</code> with all of its nodes and then …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the wgpu <code>Device</code>.","","","","","","","","","","","","","","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Supported when targeting the web through webassembly","Allows the user to create arrays of buffers in shaders:","Represents the backends that wgpu will use.","Enables clear to zero for textures.","Allows the user to set a …","WebGPU default features and limits","Allows for explicit creation of textures of format …","By default, polygon depth is clipped to 0-1 range …","Supported on Windows 7+","Supported on Windows 10","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","The maximum supported features and limits of the adapter …","The Fxc compiler (default) is old, slow and unmaintained.","Currently unsupported","Adapter that has the highest performance. This is often a …","Allows non-zero value for the “first instance” in …","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Supported on macOS/iOS","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call [<code>RenderPass::multi_draw_indirect</code>] …","Allows the user to call […","Allows the user to create bind groups continaing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Power Preference when choosing a physical adapter.","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allows the user to create uniform arrays of storage …","Enables device specific texture format features.","Allows the user to create uniform arrays of textures in …","Enables ASTC HDR family of compressed textures.","Enables ASTC family of compressed textures. ASTC textures …","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Enables use of Timestamp Queries. These queries tell the …","Allows shaders to index uniform buffer and storage texture …","Enables using 64-bit types for vertex attributes.","Enables bindings of writable storage buffers and textures …","Supported on Windows, Linux/Android, and macOS/iOS via …","Allows for timestamp queries inside render passes. Metal …","WebGPU default limits plus additional constraints in order …","Features that are not guaranteed to be supported.","Represents the sets of limits an adapter/device supports.","Provides configuration for renderer initialization. Use …","Configures the priority used when automatically …","Returns the set containing all flags.","Returns the set containing all flags.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","The constraints on limits allowed regardless of what the …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","The features to ensure are disabled regardless of what the …","","","","","","","","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","The shader compiler to use for the DX12 backend.","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","The features to ensure are enabled regardless of what the …","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","The imposed limits.","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Get a features/limits priority from the environment …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Path to the <code>dxil.dll</code> file. Passing <code>None</code> will use standard …","Path to the <code>dxcompiler.dll</code> file. Passing <code>None</code> will use …","","","","","","","A cached GPU <code>Texture</code> with corresponding <code>TextureView</code>. This …","","","","","Default image sampler, derived from the <code>ImagePlugin</code> setup.","A rendering resource for the default image sampler which …","Custom sampler for this image which will override global …","","","The extension of an image file, for example <code>&quot;png&quot;</code>.","A <code>RenderApp</code> resource that contains the default “fallback …","A <code>RenderApp</code> resource that contains a “cubemap fallback …","A Cache of fallback depth textures that uses the sample …","A Cache of fallback textures that uses the sample count as …","","","","An error that occurs when loading a texture from a file.","","","The GPU-representation of an <code>Image</code>. Consists of the <code>Texture</code>…","","Loads HDR textures as Texture assets","","","","","Adds the <code>Image</code> as an asset and makes sure that they are …","Used in <code>Image</code>, this determines what image sampler to use …","Loader for images that can be read by the <code>image</code> crate.","The type of a raw image buffer.","","","","","","The mime type of an image, for example <code>&quot;image/png&quot;</code>.","","","","","","","","","","","","","","","","This resource caches textures that are created repeatedly …","An error that occurs when loading a texture","Extends the wgpu <code>TextureFormat</code> with information about the …","","","","","","","Used to calculate the volume of an item.","","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the aspect ratio (height/width) of a 2D image.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Convert a texture from a format to another. Only a few …","","","","","","","","","","","","Creates image settings with linear sampling by default.","Creates image settings with nearest sampling by default.","The default image sampler to use when <code>ImageSampler</code> is set …","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","Clones the Image.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Load a bytes buffer in a <code>Image</code>, according to type …","Converts a <code>DynamicImage</code> to an <code>Image</code>.","","","","","","","","","","","","","","","","","Retrieves a texture that matches the <code>descriptor</code>. If no …","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Whether the texture format is compressed or uncompressed","Returns <code>true</code> if no flags are currently stored.","","","","","Returns an image sampler with <code>Linear</code> min and mag filters","Returns a sampler descriptor with <code>Linear</code> min and mag …","","","Returns an image sampler with <code>nearest</code> min and mag filters","Returns a sampler descriptor with <code>Nearest</code> min and mag …","Creates a new image from raw binary data and the …","","","Creates a new image from raw binary data and the …","Returns the complement of this set of flags.","","Returns the size of a pixel in bytes of the format.","Converts the extracted image into a <code>GpuImage</code>.","","","","","","","","Changes the <code>size</code>, asserting that the total number of data …","Takes a 2D image containing vertically stacked images of …","Removes the specified flags in-place.","Resizes the image to the new size, by removing information …","","The <code>ImageSampler</code> to use during rendering.","","Inserts or removes the specified flags depending on the …","Returns the size of a 2D image.","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a <code>Image</code> to a <code>DynamicImage</code>. Usefull for editing …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","Updates the cache and only retains recently used textures.","Updates the <code>TextureCache</code> to only retains recently used …","","","","Label for the <code>check_visibility()</code> system updating each …","Algorithmically-computed indication of whether an entity …","","","","A <code>ComputedVisibility</code>, set as invisible.","An entity with <code>Visibility::Hidden</code> will be unconditionally …","An entity with <code>Visibility::Inherited</code> will inherit the …","An identifier for a rendering layer.","Configuration resource for Multi-Sample Anti-Aliasing.","Use this component to opt-out of built-in frustum culling …","Token to ensure a system runs on the main thread.","","","","Prepares view uniforms","Describes which rendering layers an entity belongs to.","","","The total number of layers supported.","","","","","","","System sets for the <code>view</code> module.","","","","","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code> and <code>ComputedVisibility</code> <code>Component</code>…","","","","An entity with <code>Visibility::Visible</code> will be unconditionally …","Collection of entities visible from the current view.","","","","","","","Create a new <code>RenderLayers</code> that belongs to all layersystem updating the visibility of entities each frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The computed visibility of the entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An entity that contains the components in <code>Window</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Create a <code>RenderLayers</code> from a list of layers.","","","","","","","","","","","","Retrieve this target’s color attachment. This will use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve an “unsampled” color attachment using …","","","","","","","","","","","","","","","","","Determine if a <code>RenderLayers</code> intersects another.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if and only if the main texture is …","","","","Whether this entity is visible to something this frame. …","Whether this entity is visible in the entity hierarchy, …","Whether this entity is visible in <em>any</em> view (Cameras, …","Get an iterator of the layers.","","","","","","","Create a new <code>RenderLayers</code> belonging to the given layer.","","The “main” unsampled texture.","","The <em>other</em> “main” unsampled texture. In most cases you …","","","","","Create a new <code>RenderLayers</code> that belongs to no layers.","","The final texture this view will render to.","The format of the final texture this view will render to","","","","","This will start a new “post process write”, which …","Creates and (re)configures window surfaces, and obtains a …","","","","","Creates a 3D rangefinder for a view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “main” sampled texture.","","","","","","","Sets <code>is_visible_in_view</code> to <code>true</code>. This is not reversible …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The visibility of the entity.","","","Add the given layer.","Removes the given rendering layer.","","","","Label for the <code>check_visibility()</code> system updating each …","Algorithmically-computed indication of whether an entity …","An entity with <code>Visibility::Hidden</code> will be unconditionally …","An entity with <code>Visibility::Inherited</code> will inherit the …","An identifier for a rendering layer.","Use this component to opt-out of built-in frustum culling …","Describes which rendering layers an entity belongs to.","","","","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code> and <code>ComputedVisibility</code> <code>Component</code>…","","","","An entity with <code>Visibility::Visible</code> will be unconditionally …","Collection of entities visible from the current view.","","System updating the visibility of entities each frame.","The computed visibility of the entity.","","","The visibility of the entity.","","","Token to ensure a system runs on the main thread.","","","","","","An entity that contains the components in <code>Window</code>.","","","","Creates and (re)configures window surfaces, and obtains a …","","","","","","","","A reflection-powered serializable representation of an …","A collection of serializable dynamic entities, each with …","A <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …","A component bundle for a <code>DynamicScene</code> root.","","Information about a scene instance.","","","To spawn a scene, you can use either:","A component bundle for a <code>Scene</code> root.","<code>InstanceId</code> of a spawned scene. It can be used with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the builder, producing a <code>DynamicScene</code>.","","","","","Clone the scene.","","A vector of boxed components that belong to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transiently unique identifier of a corresponding <code>Entity</code>…","Mapping of entities from the scene world to the instance …","","","","Extract entities from the builder’s <code>World</code>.","Extract one entity from the builder’s <code>World</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new scene from a given dynamic scene.","Create a new dynamic scene from a given scene.","Prepare a builder that will extract entities and their …","","","","Create a new dynamic scene from a given world.","","","","Prepare a builder that will extract entities and their …","","","","","","","Check that an scene instance spawned previously is ready …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an iterator over the entities in an instance, once it…","","","","","Despawns all entities with no components.","Handle to the scene to spawn","Handle to the scene to spawn","System that will spawn scenes from <code>SceneBundle</code>.","","","Serialize a given Rust data structure into rust object …","Serialize this dynamic scene into rust object notation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","","","","Write the dynamic entities and their corresponding …","Write the dynamic entities and their corresponding …","Write the entities and their corresponding components to …","","","","","A collection of serializable dynamic entities, each with …","A <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …","A component bundle for a <code>DynamicScene</code> root.","To spawn a scene, you can use either:","A component bundle for a <code>Scene</code> root.","","","","","","","Handle to the scene to spawn","Handle to the scene to spawn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How a sprite is positioned relative to its <code>Transform</code>. It …","","","","","","","","","A 2d material that renders 2d meshes with a texture tinted …","","","The GPU representation of the uniform data of a …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","Custom anchor point. Top left is <code>(-0.5, 0.5)</code>, center is …","","","","","","","","","","","","","","","","","","","","","","Materials are used alongside <code>Material2dPlugin</code> and …","","Render pipeline data for a given <code>Material2d</code>","Adds the necessary ECS resources and render logic to …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","","Component for rendering with meshes in the 2d pipeline, …","","","","","","","","","","","All <code>Material2d</code> values of a given type that should be …","Data prepared for a <code>Material2d</code> instance.","Stores all prepared representations of <code>Material2d</code> assets …","","","","","","","","","","","","","","","A Bundle of components for drawing a single sprite from a …","","","","","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","","","","","","","","","Add a sprite to the list of textures in the <code>TextureAtlas</code> …","Adds a texture to be copied to the texture atlas.","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","<code>Anchor</code> point of the sprite in the worldontrol whether the added texture should be converted to …","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flagstilities for detecting if and on which side two …","","","","The sprite’s color tint","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Change the on-screen size of the sprite","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns a result with a new …","","","","Flip the sprite along the <code>X</code> axis","","","Flip the sprite along the <code>Y</code> axis","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the texture format for textures in the atlas.","Returns this material’s fragment shader. If …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Generate a <code>TextureAtlas</code> by splitting a texture into a grid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle to the <code>Image</code> of this sprite PERF: storing a <code>HandleId</code>…","","","","","","","","Sets the initial size of the atlas in pixels.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","How many textures are in the <code>TextureAtlas</code>","","","Sets the max size of the atlas in pixels.","","","","","","","","","","","","","","Create a new <code>TextureAtlas</code> that has a texture, but does not …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","Select an area of the texture","An optional rectangle representing the region of the sprite…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","Inserts or removes the specified flags depending on the …","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","Customizes the default <code>RenderPipelineDescriptor</code>.","","","","","The specific sprite from the texture atlas to be drawn","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","The handle to the texture in which the sprites are stored","A handle to the texture atlas that holds the sprite images","","The specific areas of the atlas where each texture can be …","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","Data pertaining to how the sprite is drawn on the screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","","","","","","Returns the type name of this value’s type.","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this material’s vertex shader. If …","","","User indication of whether an entity is visible","User indication of whether an entity is visible","User indication of whether an entity is visible","","","","","","","","","","","","","","","Axis-aligned bounding box collision with “side” …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","A 2d material that renders 2d meshes with a texture tinted …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","","","A Bundle of components for drawing a single sprite from a …","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","<code>Anchor</code> point of the sprite in the world","","","The sprite’s color tint","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","Flip the sprite along the <code>X</code> axis","","Flip the sprite along the <code>Y</code> axis","","","","","An optional rectangle representing the region of the sprite…","","","The specific sprite from the texture atlas to be drawn","","","The handle to the texture in which the sprites are stored","A handle to the texture atlas that holds the sprite images","","The specific areas of the atlas where each texture can be …","","Data pertaining to how the sprite is drawn on the screen","User indication of whether an entity is visible","User indication of whether an entity is visible","A newtype for a task pool for CPU-intensive work that may …","A newtype for a task pool for CPU-intensive work that must …","A newtype for a task pool for IO-intensive work (i.e. …","<code>ParallelIterator</code> closely emulates the <code>std::iter::Iterator</code> …","Provides functions for mapping read-only slices across a …","Provides functions for mapping mutable slices across a …","A <code>TaskPool</code> scope for running one or more non-<code>&#39;static</code> …","Wraps <code>async_executor::Task</code>, a spawned future.","A thread pool for executing tasks. Tasks are futures that …","Used to create a <code>TaskPool</code>","An executor that can only be ticked on the thread it was …","Used to tick the <code>ThreadExecutor</code>. The executor does not …","Tests if every element of the parallel iterator matches a …","Tests if any element of the parallel iterator matches a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the logical CPU core count available to the current …","","","","","","","","","","","","","","","","","","","Creates a new <code>TaskPool</code> based on the current options.","Borrows a parallel iterator, rather than consuming it.","Cancels the task and waits for it to stop running.","Takes two parallel iterators and returns a parallel …","Creates a parallel iterator which clones all of its items.","Transforms a parallel iterator into a collection.","Creates a parallel iterator which copies all of its items.","Consumes the parallel iterator and returns the number of …","Repeats a parallel iterator endlessly.","","","","","","","Detaches the task to let it keep running in the …","","","","","","","","","","","","Creates a parallel iterator which uses a closure to …","Creates a parallel iterator that both filters and maps.","Creates a parallel iterator that works like map, but …","Creates a parallel iterator that flattens nested structure.","","","","","","","","","Repeatedly applies a function to items of each batch of a …","Calls a closure on each item of a parallel iterator.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a parallel iterator which ends after the first …","Gets the global <code>ComputeTaskPool</code> instance.","Gets the global <code>AsyncComputeTaskPool</code> instance.","Gets the global <code>IoTaskPool</code> instance.","Initializes the global <code>ComputeTaskPool</code> instance.","Initializes the global <code>AsyncComputeTaskPool</code> instance.","Initializes the global <code>IoTaskPool</code> instance.","Does something with each item of a parallel iterator, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the current task is finished.","Consumes the parallel iterator and returns the last item.","Takes a closure and creates a parallel iterator which …","Returns the maximum item of a parallel iterator.","Returns the item that gives the maximum value with respect …","Returns the item that gives the maximum value from the …","Returns the minimum item of a parallel iterator.","Returns the item that gives the minimum value with respect …","Returns the item that gives the minimum value from the …","Creates a new task from a given <code>async_executor::Task</code>","Creates a new <code>TaskPoolBuilder</code> instance","Create a <code>TaskPool</code> with the default configuration.","create a new <code>ThreadExecutor</code>","Returns the next batch of items for processing.","Consumes the parallel iterator and returns the nth item.","Override the number of threads created for the pool. If …","Sets a callback that is invoked once for every created …","Sets a callback that is invoked once for every created …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Consumes a parallel iterator, creating two collections …","","Searches for an element in a parallel iterator, returning …","","Multiplies all the items of a parallel iterator.","Allows spawning non-<code>&#39;static</code> futures on the thread pool. …","This allows passing an external executor to spawn tasks …","Returns the bounds on the remaining number of items in the …","Spawns a static future onto the thread pool. The returned …","Spawns a scoped future onto the thread pool. The scope <em>must</em>…","Spawn a task on the thread executor","Spawns a static future on the thread-local async executor …","Spawns a scoped future onto the thread of the external …","Spawns a scoped future onto the thread the scope is run …","Override the stack size of the threads created for the pool","Sums the items of a parallel iterator.","Override the name of the threads created for the pool. If …","Return the number of threads owned by the task pool","Tick the thread executor.","A function used by <code>bevy_core</code> to tick the global tasks …","Gets the <code>ThreadExecutorTicker</code> for this executor. Use this …","","","","","","","","","","","","","","","","","","","","Synchronously try to tick a task on the executor. Returns …","","","","","","","","","","","","","","","","","","","Runs a function with the local executor. Typically used to …","A newtype for a task pool for CPU-intensive work that may …","A newtype for a task pool for CPU-intensive work that must …","A newtype for a task pool for IO-intensive work (i.e. …","<code>ParallelIterator</code> closely emulates the <code>std::iter::Iterator</code> …","Provides functions for mapping read-only slices across a …","Provides functions for mapping mutable slices across a …","Tests if every element of the parallel iterator matches a …","Tests if any element of the parallel iterator matches a …","Borrows a parallel iterator, rather than consuming it.","Takes two parallel iterators and returns a parallel …","Creates a parallel iterator which clones all of its items.","Transforms a parallel iterator into a collection.","Creates a parallel iterator which copies all of its items.","Consumes the parallel iterator and returns the number of …","Repeats a parallel iterator endlessly.","Creates a parallel iterator which uses a closure to …","Creates a parallel iterator that both filters and maps.","Creates a parallel iterator that works like map, but …","Creates a parallel iterator that flattens nested structure.","Repeatedly applies a function to items of each batch of a …","Calls a closure on each item of a parallel iterator.","Creates a parallel iterator which ends after the first …","Does something with each item of a parallel iterator, …","Consumes the parallel iterator and returns the last item.","Takes a closure and creates a parallel iterator which …","Returns the maximum item of a parallel iterator.","Returns the item that gives the maximum value with respect …","Returns the item that gives the maximum value from the …","Returns the minimum item of a parallel iterator.","Returns the item that gives the minimum value with respect …","Returns the item that gives the minimum value from the …","Returns the next batch of items for processing.","Consumes the parallel iterator and returns the nth item.","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice in chunks of size <code>chunks_size</code> or less and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Splits the slice into a maximum of <code>max_tasks</code> chunks, and …","Consumes a parallel iterator, creating two collections …","Searches for an element in a parallel iterator, returning …","Multiplies all the items of a parallel iterator.","Returns the bounds on the remaining number of items in the …","Sums the items of a parallel iterator.","Lines will be broken without discrimination on any …","","Determines how lines will be broken when preventing text …","Leftmost &amp; rightmost characters are equidistant to the …","","","","","","","","","Leftmost character is immediately to the right of the …","","","Rightmost character is immediately to the left of the …","","","The maximum width and height of text. The text will wrap …","The bundle of components needed to draw text in a 2D scene …","Describes horizontal alignment preference for positioning …","","Render information for a corresponding <code>Text</code> component.","","","","<code>TextPlugin</code> settings","","","Unbounded text will not be truncated or wrapped.","Uses the Unicode Line Breaking Algorithm. Lines will be …","Text is rendered for two different view projections, …","","","","The text’s internal alignment. Should not affect its …","Allows font size to be set dynamically exceeding the …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Constructs a <code>Text</code> with a single section.","Constructs a <code>Text</code> from a list of sections.","Create an empty <code>TextSection</code> from a style. Useful when the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How the text should linebreak when running out of the …","","Maximum number of font atlases supported in a [‘…","","","","","","","","Create a new <code>TextSection</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","","","","","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","","","","","","","","","Updates the layout and size information whenever the text …","","","","","","","","","Returns this <code>Text</code> with a new <code>TextAlignment</code>.","Leftmost &amp; rightmost characters are equidistant to the …","","","Leftmost character is immediately to the right of the …","","Rightmost character is immediately to the left of the …","","The bundle of components needed to draw text in a 2D scene …","Describes horizontal alignment preference for positioning …","","","","The text’s internal alignment. Should not affect its …","","","","","","","How the text should linebreak when running out of the …","","","","","","","","","","","","Run once and stop.","Reset when finished.","A Stopwatch is a struct that track elapsed time when …","A clock that tracks how much it has advanced (and how much …","Adds time functionality to Apps.","Channel resource used to receive time from render world","Channel resource used to send time from render world","Updates the elapsed time. Any system that interacts with …","Configuration resource used to determine how the time …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates channels used for sending time between render …","","","","","","","Returns how much time has advanced since the last <code>update</code>, …","Returns how much time has advanced since the last <code>update</code>, …","Returns how much time has advanced since the last <code>update</code>, …","","","","","","","","","","","","","Returns the duration of the timer.","","","","","","Returns the elapsed time since the last <code>reset</code> of the …","Returns how much time has advanced since <code>startup</code>, as …","Returns the time elapsed on the timer. Guaranteed to be …","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","Returns how much time has advanced since <code>startup</code> modulo …","Returns how much time has advanced since <code>startup</code> modulo …","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns the elapsed time since the last <code>reset</code> of the …","Returns how much time has advanced since <code>startup</code> modulo …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the timer has reached its duration at …","Returns the <code>Instant</code> when <code>update</code> was first called, if it …","Tools to run systems at a regular interval. This can be …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a new timer with a given duration in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the clock is currently paused.","","","","","","Returns <code>true</code> only on the tick the timer reached its …","Returns the <code>Instant</code> when <code>update</code> was last called, if it …","Returns the mode of the timer.","","","","","Create a new unpaused <code>Stopwatch</code> with no elapsed time.","Constructs a new <code>Time</code> instance with a specific startup …","Creates a new timer with a given duration.","Pauses the stopwatch. Any call to <code>tick</code> while paused will …","Stops the clock, preventing it from advancing until …","Pauses the Timer. Disables the ticking of the timer.","Returns <code>true</code> if the stopwatch is paused.","Returns <code>true</code> if the timer is paused.","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","The Bevy Time Prelude.","Returns how much real time has elapsed since the last …","Returns how much real time has elapsed since the last …","Returns how much real time has elapsed since the last …","Returns how much real time has elapsed since <code>startup</code>, as …","Returns how much real time has elapsed since <code>startup</code>, as …","Returns how much real time has elapsed since <code>startup</code>, as …","Returns how much real time has elapsed since <code>startup</code> modulo","Returns how much real time has elapsed since <code>startup</code> modulo","Returns how much real time has elapsed since <code>startup</code> modulo","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the speed the clock advances relative to your …","Returns the speed the clock advances relative to your …","Returns the remaining time using Duration","Returns the remaining time in seconds","Resets the stopwatch. The reset doesn’t affect the …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","","","","","","","","","Sets the duration of the timer.","Sets the elapsed time of the stopwatch.","Sets the elapsed time of the timer without any other …","Sets the mode of the timer.","Sets the speed the clock advances relative to your system …","Sets the speed the clock advances relative to your system …","Sets the modulus used to calculate <code>elapsed_wrapped</code> and …","Returns the <code>Instant</code> the clock was created.","Advance the stopwatch by <code>delta</code> seconds. If the stopwatch …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","Returns the number of times a repeating timer finished …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unpauses the stopwatch. Resume the effect of ticking on …","Resumes the clock if paused.","Unpauses the Timer. Resumes the ticking of the timer.","","","","","","","","","","Updates the internal time measurements.","Updates time with a specified <code>Instant</code>.","","","","Returns the modulus used to calculate <code>elapsed_wrapped</code> and …","The amount of time that must pass before the fixed timstep …","An error returned when working with <code>FixedTime</code>.","","Returns the current amount of accumulated time","","","","","","","","","","","","","","Expends one <code>period</code> of accumulated time.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new <code>FixedTime</code> struct","Creates a new <code>FixedTime</code> struct with a period specified in …","Defaults to 1/60th of a second. To configure this value, …","","Ticks the <code>FixedTime</code> resource then runs the …","Adds the <code>delta_time</code> to the accumulated time so far.","","","","","","","","","","","","The amount of time that must pass before the fixed timstep …","Run once and stop.","Reset when finished.","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","Defaults to 1/60th of a second. To configure this value, …","An identity <code>TransformBundle</code> with no translation, rotation, …","A <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …","The base plugin for handling <code>Transform</code> components","Propagates changes in transform to children’s …","Label enum for the systems relating to transform …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension to <code>EntityCommands</code> to modify [<code>bevy_hierarchy</code>] …","The basic components of the transform crate","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>TransformBundle</code> from a <code>Transform</code>.","","","","The global transform of the entity.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The transform of the entity.","","Systems responsible for transform propagation","","","","","","","","","","","","","","","Command similar to <code>AddChild</code>, but updating the child …","Collection of methods similar to [<code>BuildChildren</code>], but …","Command similar to <code>RemoveParent</code>, but updating the child …","","","","","","","","","","","Child entity to add.","<code>Entity</code> whose parent must be removed.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Parent entity to add the child to.","Make this entity parentless while preserving this entity’…","Change this entity’s parent while preserving this entity…","","","","","","","","","","","Describe the position of an entity relative to the …","An identity <code>GlobalTransform</code> that maps all points in space …","An identity <code>Transform</code> with no translation, rotation, and a …","Describe the position of an entity. If the entity has a …","Returns the 3d affine transformation matrix as an <code>Affine3A</code>.","","","","","","","","","","","","","","","","","Return the local back vector (Z).","Equivalent to <code>local_z()</code>","","","","","","","","","","","","","","","","","Returns the 3d affine transformation matrix from this …","Returns the 3d affine transformation matrix as a <code>Mat4</code>.","Returns the 3d affine transformation matrix from this …","Returns the transformation as a <code>Transform</code>.","","","","","Return the local down vector (-Y).","Equivalent to <code>-local_y()</code>","","","","","","","","","","","","","","","","","Return the local forward vector (-Z).","Equivalent to <code>-local_z()</code>","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Extracts the translation, rotation, and scale from <code>matrix</code>. …","","","Creates a new <code>Transform</code>, with <code>rotation</code>. Translation will …","Creates a new <code>Transform</code>, with <code>scale</code>. Translation will be 0 …","Creates a new <code>Transform</code>, with <code>translation</code>. Rotation will …","","","Creates a new <code>Transform</code> at the position <code>(x, y, z)</code>. In 2d, …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Return the local left vector (-X).","Equivalent to <code>-local_x()</code>","Get the unit vector in the local <code>X</code> direction.","Get the unit vector in the local <code>Y</code> direction.","Get the unit vector in the local <code>Z</code> direction.","Rotates this <code>Transform</code> so that <code>Transform::forward</code> points …","Rotates this <code>Transform</code> so that <code>Transform::forward</code> points …","Returns this <code>Transform</code> with a new rotation so that …","Returns this <code>Transform</code> with a new rotation so that …","","","","","","Multiplies <code>self</code> with <code>transform</code> component by component, …","Multiplies <code>self</code> with <code>transform</code> component by component, …","","Get an upper bound of the radius from the given <code>extents</code>.","","","","","","","","","","","","","Returns the <code>Transform</code> <code>self</code> would have if it was a child of …","Return the local right vector (X).","Equivalent to <code>local_x()</code>","Rotates this <code>Transform</code> by the given rotation.","Rotates this <code>Transform</code> around a <code>point</code> in space.","Rotates this <code>Transform</code> around the given <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> by the given <code>rotation</code>.","Rotates this <code>Transform</code> around its local <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> around its local <code>X</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Y</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Z</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around the <code>X</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Y</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Z</code> axis by <code>angle</code> (in …","Rotation of the entity.","Scale of the entity.","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Transforms the given <code>point</code>, applying shear, scale, …","Transforms the given <code>point</code>, applying scale, rotation and …","Translates this <code>Transform</code> around a <code>point</code> in space.","Get the translation as a <code>Vec3</code>.","Position of the entity. In 2d, the last value of the <code>Vec3</code> …","Get the translation as a <code>Vec3A</code>.","","","","","","","","","","","Return the local up vector (Y).","Equivalent to <code>local_y()</code>","","","Returns this <code>Transform</code> with a new rotation.","Returns this <code>Transform</code> with a new scale.","Returns this <code>Transform</code> with a new translation.","Update <code>GlobalTransform</code> component of entities based on …","Update <code>GlobalTransform</code> component of entities that aren’t …","Creates a Size where both values are <code>Val::Auto</code>.","Independent of all other nodes","Defines how each line is aligned within the flexbox.","How items are aligned according to the cross axis","How this item is aligned according to the cross axis. …","Automatically determine this value","Use the parent node’s <code>AlignItems</code> value to determine how …","The background color of the node","Items are aligned at the baseline","This item will be aligned at the baseline","Blocks interaction","The calculated clip of the node","The calculated size of the node","Items are aligned at the center","This item will be aligned at the center","Each line moves towards the center of the cross axis","Centered along the main axis","The node has been clicked","Flex from top to bottom","Flex from bottom to top","","","","","","","","","","","","","","","","Defines the text direction","Whether to use a Flexbox layout model.","","","","","","Use Flexbox layout model to determine the position of this …","After this label, the ui flex state has been updated","Defines how flexbox items are ordered within a flexbox","Items are aligned at the end","This item will be aligned at the end","Each line moves towards the end of the cross axis","Pushed towards the end","","Items are aligned at the start","This item will be aligned at the start","Each line moves towards the start of the cross axis","Pushed towards the start","","Defines if flexbox items appear on a single line or on …","After this label, input interactions with UI entities have …","Describes whether the node should block interactions with …","Indicates the order in which this node should be rendered …","Hide overflowing items","The node has been hovered over","","Inherit from parent node","Describes what type of input interaction has occurred for …","","Defines how items are aligned according to the main axis","Text is written left to right","Indicates the order in which this node should be rendered …","Single line, will overflow if needed","Describes the size of a UI node","Main query for <code>ui_focus_system</code>","Automatically generated <code>WorldQuery</code> item type for <code>NodeQuery</code>…","Automatically generated <code>WorldQuery</code> type for a read-only …","Automatically generated <code>WorldQuery</code> item type for …","","","Nothing has happened","Use no layout, don’t render this node and its children.","Whether to show or hide overflowing items","Lets interaction pass through","Set this value in percent","The strategy used to position this node","Set this value in pixels","Relative to all other nodes with the <code>PositionType::Relative</code>…","A component storing the position of the mouse relative to …","","Text is written right to left","Same way as text direction along the main axis","Opposite way as text direction along the main axis","","","A 2-dimensional area defined by a width and height.","Each line fills the space it needs, putting the remaining …","Remaining space is distributed around the items","Each line fills the space it needs, putting the remaining …","Remaining space is distributed between the items","Like <code>JustifyContent::SpaceAround</code> but with even spacing …","After this label, the <code>UiStack</code> resource has been updated","Items are stretched across the whole cross axis","This item will be stretched across the whole cross axis","Each line will stretch to fill the remaining space","Describes the style of a UI node","","","","Creates a Size where both values are <code>Val::Undefined</code>.","","The 2D texture displayed for this UI node","","","","","","The basic plugin for Bevy UI","A type which is commonly used to define positions, …","The current scale of the UI.","The current UI stack, which contains all UI nodes ordered …","The label enum labeling the types of systems in the Bevy UI","No value defined","An enum that describes possible types of value in flexbox …","","Show overflowing items","Multiple lines, if needed","Same as <code>FlexWrap::Wrap</code> but new lines will appear before …","Indicates that this <code>Node</code> entity’s front-to-back ordering …","","","How to align each line, only applies if flex_wrap is set to","How items are aligned according to the cross axis","How this item is aligned according to the cross axis. …","Creates a new <code>UiRect</code> where all sides have the same value.","Creates a new <code>Size</code> where both sides take the given valuehe aspect ratio of the flexbox","","","","The border of the node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> where <code>bottom</code> takes the given value.","The value corresponding to the bottom side of the UI rect.","","","","Configuration for cameras related to UI.","","The rect of the cliphich direction the content of this node should go","Whether to arrange this node and its children with flexbox …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience function for simple evaluation of …","","","","SAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…","SAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The initial size of the item","Whether to use column or row layout","Defines how much a flexbox item should grow if there’s …","","How to shrink if there’s not enough space available","How to wrap nodes","","Whether the image should be flipped along its x-axis","","Whether the image should be flipped along its y-axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the gutters between the rows and columns of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Size</code> where <code>height</code> takes the given value and …","The height of the 2-dimensional area.","Creates a new <code>UiRect</code> where <code>left</code> and <code>right</code> take the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeow items align according to the main axis","Creates a new <code>UiRect</code> where <code>left</code> takes the given value.","The value corresponding to the left side of the UI rect.","The margin of the node","","","The maximum size of the flexbox","The minimum size of the flexbox","A helper function to check if the mouse is over the node","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> from the values specified.","Creates a new <code>Size</code> from a width and a height.","","","This module contains basic node bundles used to build UIs","Cursor position relative to size and position of the Node.","How to handle overflow","The padding of the node","","The position of the node as described by its Rect","Whether to arrange this node relative to other nodes, or …","","Whether to attempt to preserve the aspect ratio when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes each entity from the internal map and then removes …","","","","Creates a new <code>UiRect</code> where <code>right</code> takes the given value.","The value corresponding to the right side of the UI rect.","","","","The scale to be applied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SAFETY: we call <code>set_archetype</code> for each member that …","SAFETY: we call <code>set_archetype</code> for each member that …","SAFETY: we call <code>set_table</code> for each member that implements …","SAFETY: we call <code>set_table</code> for each member that implements …","","","","The calculated node size as width and height in pixels …","The ideal size of the flexbox","The size of the node in logical pixels","","","","","Handle to the texture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> where <code>top</code> takes the given value.","The value corresponding to the top side of the UI rect.","","Tries to add the values of two <code>Val</code>s. Returns …","Adds <code>rhs</code> to <code>self</code> and assigns the result to <code>self</code> (see …","Similar to <code>Val::try_add_assign</code>, but performs <code>Val::evaluate</code> …","Similar to <code>Val::try_add</code>, but performs <code>Val::evaluate</code> on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes children from the entity’s taffy node if it …","Tries to subtract the values of two <code>Val</code>s. Returns …","Subtracts <code>rhs</code> from <code>self</code> and assigns the result to <code>self</code> …","Similar to <code>Val::try_sub_assign</code>, but performs <code>Val::evaluate</code> …","Similar to <code>Val::try_sub</code>, but performs <code>Val::evaluate</code> on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The system that sets Interaction for all UI elements based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module contains systems that update the UI when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>UiRect</code> where <code>top</code> and <code>bottom</code> take the given …","","This module contains the basic building blocks of Bevy’s …","Creates a new <code>Size</code> where <code>width</code> takes the given value and …","The width of the 2-dimensional area.","","Configuration for cameras related to UI.","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Whether to output UI to this camera view.","","","","","","","","","","","","A UI node that is a button","A UI node that is an image","The basic UI node","A UI node that is text","","","","","","","","","","","","","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","The background color, which serves as a “fill” for …","","","","","","","","","Marker component that signals this node is a button","The calculated size based on the given image","The calculated size based on the given image","","","","","","","","","","","","","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","","","","","","","","","","","","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Whether this node should block interaction with lower nodes","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>TextBundle</code> from a single section.","Create a <code>TextBundle</code> from a list of sections.","","","","","The global transform of the node","The global transform of the node","The global transform of the node","The global transform of the node","The image of the node","The image of the node","Describes whether and how the button has been interacted …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Describes the size of the node","Describes the size of the node","Describes the size of the node","Describes the size of the node","Describes the style including flexbox settings","Describes the style including flexbox settings","Describes the style including flexbox settings","Describes the style including flexbox settings","Contains the text of the node","","","","","The transform of the node","The transform of the node","The transform of the node","The transform of the node","","","","","","","","","","","","","","","","","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Describes the visibility properties of the node","Returns this <code>TextBundle</code> with a new <code>Style</code>.","Returns this <code>TextBundle</code> with a new <code>TextAlignment</code> on <code>Text</code>.","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Indicates the depth at which the node should appear in the …","Updates clipping for all nodes","Marker struct for buttons","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Defines how <code>min_size</code>, <code>size</code>, and <code>max_size</code> affects the …","Updates the layout and size information whenever the text …","","","","","","","","Updates calculated size of the node based on the image …","A <code>Hasher</code> for hashing an arbitrary stream of bytes.","An owned and dynamically typed Future used when you can’…","A <code>Duration</code> type to represent a span of time, typically …","A shortcut alias for <code>hashbrown::hash_map::Entry</code>.","A hasher builder that will create a fixed hasher.","A wrapper for floats that implements <code>Ord</code>, <code>Eq</code>, and <code>Hash</code> …","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","A pre-hashed value of a specific type. Pre-hashing enables …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","The duration of one nanosecond.","A type which calls a function when dropped. This can be …","A <code>BuildHasher</code> that results in a <code>PassHasher</code>.","A no-op hash that only works on <code>u64</code>s. Will panic if …","A <code>HashMap</code> pre-configured to use <code>Hashed</code> keys and <code>PassHash</code> …","Extension methods intended to add functionality to …","The duration of one second.","A stable hash map implementing aHash, a high speed keyed …","A stable hash set implementing aHash, a high speed keyed …","A Universally Unique Identifier (UUID).","A duration of zero time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","","","","","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","","","","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","Get a borrowed <code>Simple</code> formatter.","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","","","","","","","","","","","","","","","","","","","Get a <code>Braced</code> formatter.","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","","","","","","","","","","","","","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","Macro to define a new label trait","Macro to define a new label trait","","","","Like <code>tracing::trace</code>, but conditional on cargo feature …","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","","","","","","","","","","","","","","","","A buffer that can be used for <code>encode_...</code> calls, that is …","A fast impl of <code>PartialEq</code> that first checks that <code>other</code>’s …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","","","","","","","Utilities for working with <code>Future</code>s.","","","","","Tries to get or insert the value for the given <code>key</code> using …","Shortens a type name to remove all module paths.","If the UUID is the correct version (v1, v6, or v7) this …","","","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","The pre-computed hash.","","","","","Get a <code>Hyphenated</code> formatter.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes self and returns the underlying byte value of the …","","","","","","","","","","","Tests if the UUID is nil (all zeros).","Returns true if this <code>Duration</code> spans no time.","Traits used by label implementations","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","Pre-hashes the given value using the <code>BuildHasher</code> …","Returns an object that will invoke the specified callback …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a random UUID.","Creates a new hasher keyed to the provided key.","The ‘nil UUID’ (all zeros).","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","Get a <code>Simple</code> formatter.","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","A reimplementation of the currently unstable …","A reimplementation of the currently unstable …","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","","","","","","","","","","","","","Get a <code>Urn</code> formatter.","","","","","","","","","","Consumes the future, polls it once, and immediately …","The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","Returns the number of elements the map can hold without …","Returns the number of elements the set can hold without …","Clears the map, removing all key-value pairs. Keeps the …","Clears the set, removing all values.","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","","","Visits the values representing the difference, i.e., the …","","","","","Clears the map, returning all key-value pairs as an …","Clears the set, returning all elements in an iterator.","Drains elements which are true under the given predicate, …","Drains elements which are true under the given predicate, …","","","","Gets the given key’s corresponding entry in the map for …","Gets the given value’s corresponding entry in the set …","Gets the given key’s corresponding entry by reference in …","","","","","","","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","","","","","","Examples","Returns the argument unchanged.","Examples","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a reference to the value corresponding to the key.","","Returns a reference to the value in the set, if any, that …","","Returns the key-value pair corresponding to the supplied …","Returns the key-value pair corresponding to the supplied …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","","Returns a mutable reference to the value corresponding to …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","","Inserts a value computed from <code>f</code> into the set if the given …","","","","","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the set’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Adds a value to the set.","","Insert a key-value pair into the map without checking if …","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","","Creates a consuming iterator, that is, one that moves each …","Creates a consuming iterator visiting all the keys in …","","","","","","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all elements in arbitrary order. The …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","","Returns the number of elements in the map.","Returns the number of elements in the set.","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashMap</code> using the given allocator.","Creates an empty <code>HashSet</code>.","Experimental and unsafe <code>RawTable</code> API. This module is only …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Returns a mutable reference to the <code>RawTable</code> used …","","","","","","","","","","","","Removes a key from the map, returning the value at the key …","","Removes a value from the set. Returns whether the value was","Removes a key from the map, returning the stored key and …","Adds a value to the set, replacing the existing value, if …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Retains only the elements specified by the predicate.","","","","","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","Shrinks the capacity of the set as much as possible. It …","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","Visits the values representing the union, i.e., all the …","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashMap</code> with the specified capacity using …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashMap</code> which will use the given hash …","Creates a new empty hash set which will use the given …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates a new empty hash set which will use the given …","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A draining iterator over entries of a <code>HashMap</code> which don’…","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entry in the map that was already occupied.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the key and value in the entry.","Gets a mutable reference to the key and value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A draining iterator over entries of a <code>HashSet</code> which don’…","A view into a single entry in a set, which may either be …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take ownership of the value.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Takes the value out of the entry, and returns it. Keeps …","Replaces the entry, returning the old value. The new value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A reference to a hash table bucket containing a <code>T</code>.","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","Returns a reference to the underlying allocator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","","","","Returns pointer to one past last element of data table.","","","","","","","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Erases an element from the table without dropping it.","Searches for an element in the table.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns an iterator which consumes all elements from the …","","","","","","","Returns <code>true</code> if the table contains no elements.","Returns an iterator over every element in the table. It is …","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …","","An object safe version of <code>Eq</code>. This trait is automatically …","An object safe version of <code>Hash</code>. This trait is …","Casts the type to <code>dyn Any</code>.","Casts the type to <code>dyn Any</code>.","Macro to define a new label trait","Macro to define a new label trait","This method tests for <code>self</code> and <code>other</code> values to be equal.","Feeds this value into the given <code>Hasher</code>.","Marker type for a directed graph.","Edge direction.","Edge direction.","A graph’s edge type determines whether it has directed …","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","Convert an element like <code>(i, j)</code> or <code>(i, j, w)</code> into a triple …","","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","Marker type for an undirected graph.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","","Add a node (also called vertex) with associated data <code>weight</code>…","Simple adjacency list.","","Graph algorithms.","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","Compressed Sparse Row (CSR) is a sparse adjacency matrix …","Graph traits for associated data and graph construction.","","Simple graphviz dot file format output.","","","","","","","","Return the number of edges in the graph.","","Access the source and target nodes for <code>e</code>.","Return an iterator over the edge indices of the graph","","Create an iterator over all edges, in indexed order.","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably.","","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>Graph</code> by mapping nodes and edges. A node or …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","Accessor for data structure internals: the first edge in …","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Graph</code> from an iterable of edges.","","","","","","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure where node …","","","","Return <code>0</code> for <code>Outgoing</code> and <code>1</code> for <code>Incoming</code>.","","","Index the <code>Graph</code> by two indices, any combination of node or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Convert the graph into either undirected or directed. No …","Convert the graph into a vector of Nodes and a vector of …","","","","","","","","Whether the graph has directed edges or not.","","","Create a new <code>Graph</code> by mapping node and edge weights to new …","<code>MatrixGraph&lt;N, E, Ty, NullN, NullE, Ix&gt;</code> is a graph …","","Return an iterator of all nodes with an edge starting from …","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","Create a new <code>Graph</code> with directed edges.","Create a new <code>Graph</code> with undirected edges.","Accessor for data structure internals: the next edge for …","","Return the number of nodes (vertices) in the graph.","","","Return an iterator over the node indices of the graph.","","Access the weight for node <code>a</code>.","","","Access the weight for node <code>a</code>, mutably.","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","Return the opposite <code>Direction</code>.","","Commonly used items.","Access the internal edge array.","Access the internal node array.","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","Reserves capacity for at least <code>additional</code> more edges to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves capacity for at least <code>additional</code> more nodes to be …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","Shrinks the capacity of the graph as much as possible.","Shrinks the capacity of the underlying edges collection as …","Shrinks the capacity of the underlying nodes collection as …","<code>StableGraph</code> keeps indices stable across removals.","","","","","","","","","","","","","","","","","","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure.","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","Graph traits and graph traversals.","","","Create a new <code>Graph</code> with estimated capacity.","The default integer type for graph indices. <code>u32</code> is the …","Adjacency list edge index type, a pair of integers.","","A reference to an edge of the graph.","An iterator over the <code>EdgeReference</code> of all the edges of the …","Trait for the unsigned integer type used for node and edge …","An adjacency list with labeled edges.","An iterator over the indices of the neighbors of a node.","Adjacency list node index type, a plain integer.","An iterator over all node indices in the graph.","An Iterator over the indices of the outgoing edges from a …","Iterator over the <code>EdgeReference</code> of the outgoing edges from …","A very simple adjacency list with no node or label weights.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list by giving its list of …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all nodes and edges from the list.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","","","","","Returns the number of edges in the list","Returns the number of edges in the list","Accesses the source and target of edge <code>e</code>","Returns an iterator over all edge indices of the graph.","","","Accesses the weight of edge <code>e</code>","Accesses the weight of edge <code>e</code>","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator of all nodes with an edge starting …","","Creates a new, empty adjacency list.","","","","","","","","","","Returns the number of nodes in the list","","Returns an iterator over all node indices of the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates or adds an edge from <code>a</code> to <code>b</code> to the graph, with its …","","","Creates a new, empty adjacency list tailored for <code>nodes</code> …","","An algorithm error: a cycle was found in the graph.","Workspace for a graph traversal.","A floating-point measure.","Computed <em>matching</em> of the graph.","Associated data that can be used for measures (such as …","An iterator producing a minimum spanning forest of a graph.","An algorithm error: a cycle of negative weights was found …","A reusable state for computing the <em>strongly connected </em>…","Returns an iterator that produces all simple paths from …","","","","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","Bellman-Ford algorithms.","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","","","","","","","","","","","","","","","","","","","","Graph Condense every strongly connected component into a …","[Generic] Return the number of connected components of the …","Returns <code>true</code> if given edge is in the matching, or <code>false</code> …","Returns <code>true</code> if given node is in the matching, or <code>false</code> …","","","","[Generic] Dijkstra’s shortest path algorithm.","Compute dominators of a control-flow graph.","","","","","","","Iterates over all edges from the matching.","","","","[Generic] Find the path of a negative cycle reachable from …","","[Generic] Floyd–Warshall algorithm is an algorithm for …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Compute a <em>matching</em> using a greedy heuristic.","[Generic] Check if there exists a path starting at <code>from</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if the graph is bipartite. A graph is …","[Generic] Return <code>true</code> if the input directed graph contains …","[Generic] Return <code>true</code> if the input graph contains a cycle.","Returns <code>true</code> if the number of matched <strong>edges</strong> is 0.","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Returns <code>true</code> if the matching is perfect.","","","[Generic] k’th shortest path algorithm.","[Generic] Compute the <em>strongly connected components</em> using …","Gets the number of matched <strong>edges</strong>.","","Gets the matched counterpart of given node, if there is …","","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","[Generic] Compute a <em>minimum spanning tree</em> of a graph.","","Creates a new <code>TarjanScc</code>","","Returns the index of the component in which v has been …","Return a node id that participates in the cycle","Iterates over all nodes from the matching.","","[Generic] Compute the <em>strongly connected components</em> using …","Renamed to <code>kosaraju_scc</code>.","","Using the VF2 algorithm, examine both syntactic and …","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Perform a topological sort of a directed graph.","Compute the transitive reduction and closure of a directed …","","","","","","","","","","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","","","","","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","","","[Generic] Find the path of a negative cycle reachable from …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","[Generic] Dijkstra’s shortest path algorithm.","Iterator for nodes dominated by a given node.","The dominance relation for some graph and root.","Iterator for a node’s dominators.","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over all of the given node’s dominators …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the immediate dominator of the given node.","Iterate over all nodes immediately dominated by the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the root node used to construct these dominance …","This is an implementation of the engineered “Simple, …","","Iterate over the given node’s strict dominators.","","","","","","","","","","","","","","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Floyd–Warshall algorithm is an algorithm for …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Using the VF2 algorithm, examine both syntactic and …","[Generic] k’th shortest path algorithm.","","","Computed <em>matching</em> of the graph.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","[Generic] Compute a <em>matching</em> using a greedy heuristic.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","","","","","","","","","","Returns an iterator that produces all simple paths from …","Creates a representation of the same graph respecting …","Computes the transitive reduction and closure of a DAG.","Compressed Sparse Row (<code>CSR</code>) is a sparse adjacency matrix …","The default integer type for graph indices. <code>u32</code> is the …","Csr edge index type, a plain integer.","","","","Csr creation error: edges were not in sorted order.","Trait for the unsigned integer type used for node and edge …","","","Csr node index type, a plain integer.","Iterator over all nodes of a graph.","Return <code>true</code> if the edge was added","Adds a new node with the given weight, returning the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","Computes in <strong>O(log |V|)</strong> time.","","","","","","","","","","","","","","Return an iterator of all edges of <code>a</code>.","Computes in <strong>O(1)</strong> time.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new <code>Csr</code> from a sorted sequence of edges","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of all neighbors of <code>a</code>.","Computes in <strong>O(1)</strong> time.","","Create an empty <code>Csr</code>.","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","","Create a new <code>Csr</code> with <code>n</code> nodes. <code>N</code> must implement <code>Default</code> …","A graph that can be extended with further nodes and edges","A graph that can be created","Access node and edge weights (associated data).","Access node and edge weights mutably.","A graph edge.","A graph element.","Iterator adaptors for iterators of <code>Element</code>.","An iterator that filters graph elements.","Create a graph from an iterator of elements.","A graph node.","Add a new edge. If parallel edges (duplicate) are not …","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator adaptor that filters graph elements.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Add or update the edge from <code>a</code> to <code>b</code>. Return the id of the …","","","","","","<code>Dot</code> configuration.","<code>Dot</code> implements output to graphviz .dot format for a graph.","Use indices for edge labels.","Use no edge labels.","Do not print the graph/digraph string.","Use indices for node labels.","Use no node labels.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a <code>Dot</code> formatting wrapper with default configuration.","","","","","","","","","","","Create a <code>Dot</code> formatting wrapper with custom configuration.","The default integer type for graph indices. <code>u32</code> is the …","A <code>Graph</code> with directed edges.","The graph’s edge type.","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>Graph</code> edge.","Iterator over all edges of a graph.","Iterator yielding mutable access to all edge weights.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","<code>Frozen</code> is a graph wrapper.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","The graph’s node type.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","Iterator yielding mutable access to all node weights.","A <code>Graph</code> with undirected edges.","A “walker” object that can be used to step through the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a “walker” object that can be used to step …","","","","","","","","","","","","","","","","","","Short version of <code>EdgeIndex::new</code>","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Index the <code>Graph</code> by two indices, any combination of node or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Frozen</code> from a mutable reference to a graph.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","","Accessor for data structure internals: the first edge in …","Accessor for data structure internals: the next edge for …","","","","","Short version of <code>NodeIndex::new</code>","","","","","","","","","","","","","Return the source node index.","","Return the target node index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","Associated node data.","Associated edge data.","","","A <code>GraphMap</code> with directed edges.","","","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","","","","","A trait group for <code>GraphMap</code>’s node identifier.","","A reference that is hashed and compared by its pointer …","A <code>GraphMap</code> with undirected edges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ptr is ordered by pointer value, i.e. an arbitrary but …","","","","","","","","","","","","","","","","Ptr compares by pointer equality, i.e if they point to the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>MatrixGraph</code> with directed edges.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Trait for the unsigned integer type used for node and edge …","<code>MatrixGraph&lt;N, E, Ty, Null&gt;</code> is a graph datastructure using …","Iterator over the neighbors of a node.","Iterator over the node identifiers of a graph.","Node identifier.","Iterator over all nodes of a graph.","<code>NotZero</code> is used to optimize the memory usage of edge …","Wrapper trait for an <code>Option</code>, allowing user-defined structs …","A <code>MatrixGraph</code> with undirected edges.","Base trait for types that can be wrapped in a <code>NotZero</code>.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove all nodes and edges.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of edges in the graph.","","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably.","","Return an iterator of all edges of <code>a</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","Extend the graph from an iterable of edges.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>MatrixGraph</code> from an iterable of edges.","","","","Return true if there is an edge between <code>a</code> and <code>b</code>.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return whether the graph has directed edges or not.","Return true if <code>self</code> is equal to the sentinel value.","","Return an iterator of all nodes with an edge starting from …","","","Return an iterator of all neighbors that have an edge …","","Create a new <code>MatrixGraph</code> with directed edges.","Create a new <code>MatrixGraph</code> with undirected edges.","","","","","","","","Return the number of nodes (vertices) in the graph.","","Short version of <code>NodeIndex::new</code> (with Ix = <code>DefaultIx</code>)","","Access the weight for node <code>a</code>.","Access the weight for node <code>a</code>, mutably.","Remove the edge from <code>a</code> to <code>b</code> to the graph.","Remove <code>a</code> from the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the edge from <code>a</code> to <code>b</code> to the graph, with its …","","Create a new <code>MatrixGraph</code> with estimated capacity for nodes.","Return the singleton object which can be used as a …","[Generic] complement of the graph","A breadth first search (BFS) of a graph.","Visit nodes of a graph in a depth-first-search (DFS) …","Visit nodes in a depth-first-search (DFS) emitting nodes …","A <code>Graph</code> with directed edges.","A <code>GraphMap</code> with directed edges.","Marker type for a directed graph.","Edge direction.","","Edge identifier.","An edge reference.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","","Node identifier.","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A <code>Graph</code> with undirected edges.","A <code>GraphMap</code> with undirected edges.","Marker type for an undirected graph.","","Add an edge connecting <code>a</code> and <code>b</code> to the graph, with …","","Add node <code>n</code> to the graph.","","","Return an iterator over all edges of the graph with their …","Return an iterator over all edges of the graph in …","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","","","","","","","","","","","","","Return <code>true</code> if the edge connecting <code>a</code> with <code>b</code> is contained …","Return <code>true</code> if the node is contained in the graph.","","","","","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","","","","","","Return the number of edges in the graph.","","","Return a reference to the edge weight connecting <code>a</code> with <code>b</code>, …","Return a mutable reference to the edge weight connecting <code>a</code> …","","Return an iterator of target nodes with an edge starting …","","Return an iterator of target nodes with an edge starting …","Create a new <strong>Dfs</strong> using the graph’s visitor map, and no …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","","The map of finished nodes","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>GraphMap</code> from an iterable of edges.","","Creates a <code>GraphMap</code> that corresponds to the given <code>Graph</code>.","","","","Create a <code>Dfs</code> from a vector and a visit map","","","","","The edge’s identifier.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Return a <code>Graph</code> that corresponds to this <code>GraphMap</code>.","","","","","","Whether the graph has directed edges.","Keep the discovered map, but clear the visit stack and …","Keep the discovered and finished map, but clear the visit …","","Return an iterator of all nodes with an edge starting from …","Return an iterator of all neighbors that have an edge …","","Create a new <strong>Dfs</strong>, using the graph’s visitor map, and put …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","Create a new <strong>Bfs</strong>, using the graph’s visitor map, and put …","Create a new <code>GraphMap</code>","Return the next node in the dfs, or <strong>None</strong> if the traversal …","Return the next node in the traversal, or <code>None</code> if the …","Return the next node in the bfs, or <strong>None</strong> if the traversal …","","Return the number of nodes in the graph.","","","","Return an iterator over the nodes of the graph.","Remove edge from <code>a</code> to <code>b</code> from the graph and return the edge …","Return <code>true</code> if node <code>n</code> was removed.","Clear the visit state","Clear the visit state","","The source node of the edge.","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A reference to the weight of the edge.","","Create a new <code>GraphMap</code> with estimated capacity.","The default integer type for graph indices. <code>u32</code> is the …","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>StableGraph</code> edge.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A “walker” object that can be used to step through the …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","","","Return a “walker” object that can be used to step …","","","","","","","","","","","","","","","","","","","","Return the number of edges in the graph.","Access the source and target nodes for <code>e</code>.","Short version of <code>EdgeIndex::new</code>","Return an iterator over the edge indices of the graph","Create an iterator over all edges in the graph, in indexed …","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably","","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","","An invalid <code>EdgeIndex</code> used to denote absence of an edge, …","","","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>StableGraph</code> by mapping nodes and edges. A …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>StableGraph</code> from an iterable of edges.","","","","","","","","","","","","","","","","","","","","","Index the <code>StableGraph</code> by two indices, any combination of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the graph has directed edges or not.","Create a new <code>StableGraph</code> by mapping node and edge weights …","","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>StableGraph</code> with directed edges.","","","","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Return an upper bound of the node indices in the graph","","Return the number of nodes (vertices) in the graph.","","Short version of <code>NodeIndex::new</code>","Return an iterator over the node indices of the graph","","Access the weight for node <code>a</code>.","","","Access the weight for node <code>a</code>, mutably.","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","","Access the edge’s weight.","","","Create a new <code>StableGraph</code> with estimated capacity.","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure. It tracks …","","","","","","","","","","Returns <code>true</code> if the given elements belong to the same set, …","Return the representative for <code>x</code>.","Return the representative for <code>x</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Return a vector mapping each element to its representative.","","Create a new <code>UnionFind</code> of <code>n</code> disjoint sets.","","","","","Unify the two sets containing <code>x</code> and <code>y</code>.","","The associated adjacency matrix type","An edge to an already visited node.","A breadth first search (BFS) of a graph.","Stop the DFS traversal and return the provided value.","Continue the DFS traversal as normal.","Control flow for <code>depth_first_search</code> callbacks.","Control flow for callbacks.","A cross or forward edge.","Define associated data for nodes and edges","Visit nodes of a graph in a depth-first-search (DFS) …","A depth first search (DFS) visitor event.","Visit nodes in a depth-first-search (DFS) emitting nodes …","","A graph with a known edge count.","An edge-filtering graph adaptor.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered neighbors-directed iterator.","","edge identifier","The graph’s <code>NodeId</code>s map to indices","An edge reference.","","","The kind edges in the graph.","","","","A graph filter for edges","A graph filter for nodes.","All edges from a node have been reported.","Create or access the adjacency matrix of a graph.","Base graph trait: defines the associated node identifier …","Edge kind property (directed or undirected edges)","A copyable reference to a graph.","Access to the sequence of the graph’s edges","Access to the edges of each node.","Access to all edges of each node, in the specified …","Access to the neighbors of each node","Access to the neighbors of each node, through incoming or …","Access to the sequence of the graph’s <code>NodeId</code>s.","Access to the sequence of the graph’s nodes","","The associated map type","","","The graph’s <code>NodeId</code>s map to indices, in a range without …","A graph with a known node count.","A node-filtering graph adaptor.","A filtered edges iterator.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered node references iterator.","","","node identifier","","The graph’s <code>NodeId</code>s map to indices","A node reference.","","","","Prune the current node from the DFS traversal. No more …","An edge-reversing graph adaptor.","A reversed edge reference","A reversed edge references iterator.","A reversed edges iterator.","Strictly monotonically increasing event time for a depth …","A topological order traversal for a graph.","An edge of the tree formed by the traversal.","A mapping for storing the visited status for NodeId <code>N</code>.","A graph that can create a map that tracks the visited …","A walker is a traversal state, but where part of the …","A walker and its context wrapped into an iterator.","","","Create the adjacency matrix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the original, unreversed edge reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value in <code>Control::Break(_)</code>, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A recursive depth first search.","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","","","","","","","","","","","","","","","","","","","","","Return an upper bound of the edge indices in the graph …","","","","Return the number of edges in the graph.","","","","","","","","","","","","","","","","","","","The map of finished nodes","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>NodeFiltered</code> adaptor from the closure <code>filter</code>.","Create an <code>EdgeFiltered</code> adaptor from the closure <code>filter</code>.","Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the …","Convert <code>i</code> to an edge index. <code>i</code> must be a valid value in the …","","","","","","","","","","","","The edge’s identifier.","","","Return true to have the edge be part of the graph","Return true to have the node be part of the graph","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume <code>self</code> and return the original, unreversed edge …","Return true if there is an edge from <code>a</code> to <code>b</code>, false …","","","Return whether <code>a</code> has been visited before.","Create an iterator out of the walker and given <code>context</code>.","Return an iterator of the neighbors of node <code>a</code>.","","","","","","","","Create a new <code>Topo</code>, using the graph’s visitor map, and …","Return the next node in the current topological order …","","","","","","","","","","","Return an upper bound of the node indices in the graph …","","","","","","","","","","","","","","","","","","","Clear visited state, and put all initial nodes in the to …","Reset the visitor map (and resize to new size of graph if …","","","","","","","","","","","","","","","","","The source node of the edge.","","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","Convert <code>a</code> to an integer index.","Convert <code>a</code> to an integer index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mark <code>a</code> as visited.","Create a new visitor map","","","","Advance to the next item","","A reference to the weight of the edge.","","","An ergonomic abbreviation for <code>Default::default()</code> to make …","See <code>Exclusive</code> for stdlib’s upcoming implementation, …","","","","","","","Returns the argument unchanged.","Build a mutable reference to a <code>SyncCell</code> from a mutable …","Get a reference to this <code>SyncCell</code>’s inner value.","Calls <code>U::from(self)</code>.","","","","","Construct a new instance of a <code>SyncCell</code> from the given …","Deconstruct this <code>SyncCell</code> into its inner value.","","","","","<code>UnsafeCell</code>, but <code>Sync</code>.","The core primitive for interior mutability in Rust.","","","","","","","Returns a <code>&amp;[SyncUnsafeCell&lt;T&gt;]</code> from a <code>&amp;SyncUnsafeCell&lt;[T]&gt;</code>.","","","","","Creates an <code>SyncUnsafeCell</code>, with the <code>Default</code> value for T.","Creates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.","","","","","","Returns the argument unchanged.","","Creates a new <code>SyncUnsafeCell&lt;T&gt;</code> containing the given value.","","Returns the argument unchanged.","Creates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.","Returns a <code>&amp;SyncUnsafeCell&lt;T&gt;</code> from a <code>&amp;mut T</code>.","","","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Unwraps the value.","Unwraps the value.","","","Constructs a new instance of <code>SyncUnsafeCell</code> which will …","Constructs a new instance of <code>UnsafeCell</code> which will wrap …","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value. The …","","","","","","","","","","","Trait implemented by callsites.","The “debug” level.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","The “error” level.","<code>Event</code>s represent single points in time where something …","The “info” level.","Identifies a span within the context of a subscriber.","Attaches spans to a <code>std::future::Future</code>.","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to enter …","Trait representing the functions required to collect trace …","The “trace” level.","A field value of an erased type.","The “warn” level.","","","","","","","","","","","","","","","","","","","","","","","Returns the string representation of the <code>Level</code>.","","","","","","","","","","","Callsites represent the source locations from which spans …","Returns an opaque <code>Identifier</code> that uniquely identifies the …","Constructs a new <code>Span</code> as child of the given parent span, …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Notifies the subscriber that a span ID has been cloned.","","","","","","Returns a handle to the span considered by the <code>Subscriber</code> …","Returns a type representing this subscriber’s view of …","Returns a type representing this subscriber’s view of …","Constructs an event at the debug level.","Constructs a span at the debug level.","Returns the current default dispatcher","Dispatches trace events to <code>Subscriber</code>s.","","","","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>[</code>Subscriber…","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","<strong>This method is deprecated.</strong>","Notifies the subscriber that a span ID has been dropped.","","","","","","Returns true if a span or event with the specified metadata…","Returns true if a span with the specified metadata would be","Checks whether a span or event is enabled based on the …","Records that a span has been entered.","Enters this span, returning a guard that will exit the …","Records that a span has been can_enter.","Enters this span, consuming it and returning a guard that …","","","","","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Records that an <code>Event</code> has occurred.","Constructs a new <code>Event</code>.","Determine if an <code>Event</code> should be recorded.","Tests whether an event with the specified level and target …","Records that a span has been exited.","Records that a span has been exited.","<code>Span</code> and <code>Event</code> key-value data.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","","Constructs a new span ID from the given <code>u64</code>.","","","","","","","","","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","","","Returns this span’s <code>Id</code>, if it is enabled.","Instruments this type with the current <code>Span</code>, returning an …","Executes the given function in the context of this span.","Constructs an event at the info level.","Constructs a span at the info level.","Attach a span to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an …","Instruments a function to create and enter a <code>tracing</code> span …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the span’s ID as a <code>NonZeroU64</code>.","","","","","","Returns the span’s ID as a <code>u64</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns <code>true</code> if this span was disabled by the subscriber …","Returns true if the callsite kind is <code>Event</code>.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Return true if the callsite kind is <code>Span</code>.","","","Returns the level of verbosity of the described span or …","Trace verbosity level filtering.","Returns the line number in the source code file where the …","","","Returns the highest verbosity level that this <code>Subscriber</code> …","Metadata describing trace data.","Returns the metadata associated with the callsite.","Returns this span’s <code>Metadata</code>, if it is enabled.","Statically constructs new span metadata.","Returns the path to the Rust module where the span …","Returns the name of the span.","Constructs a new <code>Span</code> with the given metadata and set of …","Construct new metadata for a span or event, with a name, …","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Visit the construction of a new span, returning a new span …","Record the construction of a new span, returning a new ID …","Constructs a new span that is <em>completely disabled</em>.","Returns a new <code>Dispatch</code> that discards events and spans.","Invoked when this subscriber becomes a <code>Dispatch</code>.","Returns this span, if it was enabled by the current …","","","Visits this value with the given <code>Visitor</code>.","Record a set of values on a span.","Records that the field described by <code>field</code> has the value …","Record a set of values on a span.","Records all the fields in the provided <code>ValueSet</code>.","Adds an indication that <code>span</code> follows from the span with …","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this subscriber, returning …","Registers a new callsite with this collector, returning …","Sets the <code>Interest</code> for this callsite.","Spans represent periods of time in which a program was …","Constructs a new span.","Tests whether a span with the specified level and target …","Collects and records trace data.","Returns a string describing the part of the system where …","","","","","","Constructs an event at the trace level.","Constructs a span at the trace level.","Notifies the subscriber that a span ID has been dropped, …","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","","","","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","Invokes a function with a reference to this span’s ID …","Trait implemented by callsites.","A default <code>Callsite</code> implementation.","Uniquely identifies a <code>Callsite</code>","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the callsite’s cached <code>Interest</code>, or registers it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the metadata associated with the callsite.","","Returns a new <code>DefaultCallsite</code> with the specified <code>Metadata</code>.","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Registers this callsite with the global callsite registry.","Sets the <code>Interest</code> for this callsite.","","","","","","","","","","","A guard that resets the current default dispatcher to the …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","","","","","","Returns the argument unchanged.","Executes a closure with a reference to this thread’s …","Calls <code>U::from(self)</code>.","","","","","Sets the dispatch as the default dispatch for the duration …","Sets this dispatch as the global default for the duration …","","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","Sets this dispatch as the default for the duration of a …","<code>Event</code>s represent single points in time where something …","","","","","","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","","Returns an iterator over the set of values on this <code>Event</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Returns true if the new event’s parent should be …","","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","","","","","","Trait implemented to allow a type to be used as a field …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …","","","","","","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","","","","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","","","","","","","","","","","","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Records a type implementing <code>Error</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attaches spans to a <code>std::future::Future</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> …","Extension trait allowing futures to be instrumented with a …","","","","","","","","","","","","","","","","","Borrows the <code>Dispatch</code> that is entered when this type is …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Instruments this type with the current <code>Span</code>, returning an …","Borrows the wrapped type.","Borrows the wrapped type.","Mutably borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned reference to the wrapped type.","Get a pinned reference to the wrapped type.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Consumes the <code>Instrumented</code>, returning the wrapped type.","Consumes the <code>Instrumented</code>, returning the wrapped type.","","","","","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented by.","","","","","","","","","","","","","Attaches the current default <code>Subscriber</code> to this type, …","Attaches the provided <code>Subscriber</code> to this type, returning a …","A filter comparable to a verbosity <code>Level</code>.","Indicates that a string could not be parsed to a valid …","The statically configured maximum trace level.","The “debug” level.","The “error” level.","<code>Event</code> callsite","<code>enabled!</code> callsite. <code>Subscriber</code>s can assume this <code>Kind</code> means …","The “info” level.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","The “off” level.","Returned if parsing a <code>Level</code> fails.","Indicates that a string could not be parsed to a valid …","<code>Span</code> callsite","The “trace” level.","The “warn” level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","","","","","","","","Sets that this <code>Kind</code> is a hint.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the most verbose <code>Level</code> that this filter accepts, …","","","","","Return true if the callsite kind is <code>Event</code>","Return true if the callsite kind is <code>Hint</code>","Return true if the callsite kind is <code>Span</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a <code>Subscriber</code> describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","","","","","","","","","","","","","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","Returns <code>Attributes</code> describing a new child span of the …","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","","","","","","","Exits this span, returning the underlying <code>Span</code>.","Returns the set of all fields defined by this span’s …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns this span’s <code>Id</code>, if it is enabled.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns true if the new span’s parent should be …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns a reference to the new span’s metadata.","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Returns <code>Attributes</code> describing a new span at the root of …","Returns the new span’s explicitly-specified parent, if …","","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","","","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","A guard that resets the current default dispatcher to the …","Indicates a <code>Subscriber</code>’s interest in a particular …","A no-op <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","Trait representing the functions required to collect trace …","Returns an <code>Interest</code> indicating the subscriber is always …","","","","","","","","","","","","","","","","","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","","","Returns a type representing this subscriber’s view of …","","","","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns <code>true</code> if the subscriber is always interested in …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns an <code>Interest</code> indicating that the subscriber is …","Visit the construction of a new span, returning a new span …","","Invoked when this subscriber becomes a <code>Dispatch</code>.","","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this subscriber, returning …","","Sets the <code>Subscriber</code> as the default for the current thread …","Sets this subscriber as the global default for the …","Returns an <code>Interest</code> indicating the subscriber is sometimes …","","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","","","","","Sets this <code>Subscriber</code> as the default for the current thread …","Indicates that an alias of something is to be created.","Indicates that the user can scroll by dragging the mouse.","The window will always be below normal windows.","The window will always be on top of normal windows.","An arrow. This is the default cursor on most systems.    ","The window’s top-left corner will be placed at the …","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically, depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","Position will be set by the window manager","Creates a borderless window that uses the full size of the …","Indicates that a cell (or set of cells) may be selected.","Window will be centered on the selected monitor","Indicates that a column can be resized horizontally.","Notifies when text should be inserted into the editor …","Specifies how the alpha channel of the textures should be …","The cursor is confined to the window area.","Indicates that a context menu is available.","Indicates something is to be copied.","A simple crosshair.   ","Uses current monitor of the window.","Stores data about the window’s cursor.","An event that is sent whenever the user’s cursor enters …","Defines if and how the cursor is grabbed.","The icon to display for a window’s cursor.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved inside …","The platform-dependent default cursor.","Notifies when the IME was disabled.","Keep application running headless even after closing all …","File is being dropped into a window.","Indicates that an edge of a box is to be moved right …","Notifies when the IME was enabled.","A more direct link to a window entity.","Indicates a bidirectional resize cursor.","Defines the specific conditions the application should …","The presentation engine waits for the next vertical …","Events related to files being dragged and dropped on a …","Creates a fullscreen window that uses the maximum …","Indicates that something can be grabbed.","Indicates that something is grabbed.","A hand (often used to indicate links in web browsers).    ","Help indicator (often rendered as a “?”)    ","File is currently being hovered over a window.","File hovering was cancelled.","A Input Method Editor event.","The presentation engine does <strong>not</strong> wait for a vertical …","Uses monitor with the specified index.","The alpha channel, if it exists, of the textures is …","Stores internal state that isn’t directly accessible.","The cursor is locked inside the window area to a certain …","The presentation engine waits for the next vertical …","Defines which monitor to use.","Indicates something is to be moved.    ","Indicates that an edge of a box is to be moved up (north).","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","Indicates that the dragged item cannot be dropped here.","The cursor can freely leave the window.","The default.","A flattened representation of a window reference for …","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","Close application when all windows are closed","Close application when the primary window is closed","The alpha channel, if it exists, of the textures is …","The alpha channel, if it exists, of the textures is …","The alpha channel, if it exists, of the textures is …","Notifies when a new composing text should be set at the …","Presentation mode for a window.","This will be linked to the primary window that is created …","Uses primary monitor of the system.","Marker component for the window considered the primary …","Progress indicator. Shows that processing is being done.","A wrapper over <code>RawWindowHandle</code> and <code>RawDisplayHandle</code> that …","An event that is sent whenever a window receives a …","An event that indicates the window should redraw, even if …","Indicates that the row can be resized vertically.","Indicates that an edge of a box is to be moved down …","The cursor indicates that an edge of a box is to be moved …","Creates a fullscreen window that will render at desktop …","The cursor indicates that an edge of a box is to be moved …","Indicates text that may be selected or edited.    ","A <code>RawHandleWrapper</code> that cannot be sent across threads.","Indicates vertical text that may be selected or edited.","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","Define how a window will be created and how it will behave.","An event that indicates a window’s OS-reported scale …","An event that is sent whenever the operating systems …","An event that is sent whenever a window is closed. This …","An event that is sent whenever a new window is created.","An event that indicates a window has received or lost …","A window level groups windows with respect to their …","Defines the way a window is displayed","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where window should be placed at on creation.","Reference to a window, whether it be a direct link to a …","The size limits on a window.","A window event that is sent whenever a window’s logical …","Window Sizes","An event that indicates a window’s scale factor has …","Creates a window that uses the given size.","Indicates that the user can zoom in.","Indicates that the user can zoom out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The window scale factor as reported by the window backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “html canvas” element selector.","Set the window to a specific monitor.","Received character.","Checks if the constraints are valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close the focused window whenever the escape key (Esc) is …","Close windows in response to <code>WindowCloseRequested</code> (e.g.  …","Whether to close windows when they are requested to be …","","","","","","How the alpha channel of textures should be handled while …","The cursor of this window.","The cursor position in this window","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the window have decorations enabled?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the entity of this window reference","Window that moved.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to exit the app when there are no open windows.","Exit the application when there are no open windows.","Exit the application when the primary window has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not to fit the canvas element’s size to its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether it was focused (true) or lost focused (false).","Should the window start focused?","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>HasRawWindowHandle</code> + <code>HasRawDisplayHandle</code> impl, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether or not the cursor is locked.","","","","","The window’s client area height in logical pixels.","The window’s client area width in logical pixels.","The new logical height of the window.","Set whether or not mouse events within <em>this</em> window are …","Get the current <code>CursorIcon</code> while inside the window.","Should the window use Input Method Editor?","Sets location of IME candidate box in client area …","","","","","","","","","","","","Stores internal state that isn’t directly accessible.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe maximum height the window can have.","The maximum width the window can have.","The minimum height the window can have.","The minimum width the window can have.","Which fullscreen or windowing mode should be used?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>WindowPosition</code> at a position.","Creates a new <code>WindowResolution</code>.","Normalize the window reference so that it can be compared …","","","The physical cursor position in this window","The window’s client area height in physical pixels.","The window’s client area height in physical pixels.","The window’s client area width in physical pixels.","The window’s client area width in physical pixels.","The cursor position in logical pixels.","Where the window moved to in physical pixels.","Where the window should be placed.","","What presentation mode to give the window.","Whether or not to stop events from propagating out of the …","Settings for the primary window. This will be spawned by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the window be resizable?","Which size limits to give the window.","What resolution the window should have.","The window’s scale factor.","The ratio of physical pixels to logical pixels","The new scale factor.","The new scale factor.","The scale factor set with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the position to a specific point.","Set the window’s logical resolution.","","","","","","","","","Set the cursor position in this window","Setting this to true will attempt to maximize the window.","Setting this to true will attempt to minimize the window.","Set the physical cursor position in this window","Set the window’s physical resolution.","Set the window’s scale factor, this may get overridden …","Set the window’s scale factor, this will be used over …","Consumes the current maximize request, if it exists. This …","Consumes the current minimize request, if it exists. This …","Stores the title of the window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the window be transparenthether the cursor is visible or not.","The window’s client area width in logical pixels.","The window’s client area width in logical pixels.","The new logical width of the window.","Window that has changed.","Window that has been created.","Window to close.","Window that has been closed.","Window that the cursor moved inside.","Window that the cursor entered.","Window that the cursor left.","Window that received the character.","Window that changed focus.","Window that had it’s scale factor changed.","Window that had it’s scale factor changed by the backend.","","Should the window always be on top of other windows?","Builder method for adding a scale factor override to the …","Path to the file that was dropped in.","Path to the file that might be dropped in.","Window the file was dropped into.","Window a file is possibly going to be dropped into.","Window that had a cancelled file drop.","Cursor begin and end position.","Current value.","Input string","Window that received the event.","Window that received the event.","Window that received the event.","Window that received the event.","Indicates that an alias of something is to be created.","Indicates that the user can scroll by dragging the mouse.","An arrow. This is the default cursor on most systems.    ","The window’s top-left corner will be placed at the …","Position will be set by the window manager","Indicates that a cell (or set of cells) may be selected.","Window will be centered on the selected monitor","Indicates that a column can be resized horizontally.","Notifies when text should be inserted into the editor …","Indicates that a context menu is available.","Indicates something is to be copied.","A simple crosshair.   ","Uses current monitor of the window.","An event that is sent whenever the user’s cursor enters …","The icon to display for a window’s cursor.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved inside …","The platform-dependent default cursor.","Notifies when the IME was disabled.","File is being dropped into a window.","Indicates that an edge of a box is to be moved right …","Notifies when the IME was enabled.","Indicates a bidirectional resize cursor.","Events related to files being dragged and dropped on a …","Indicates that something can be grabbed.","Indicates that something is grabbed.","A hand (often used to indicate links in web browsers).    ","Help indicator (often rendered as a “?”)    ","File is currently being hovered over a window.","File hovering was cancelled.","A Input Method Editor event.","Uses monitor with the specified index.","Defines which monitor to use.","Indicates something is to be moved.    ","Indicates that an edge of a box is to be moved up (north).","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","Indicates that the dragged item cannot be dropped here.","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","Notifies when a new composing text should be set at the …","Uses primary monitor of the system.","Progress indicator. Shows that processing is being done.","An event that is sent whenever a window receives a …","Indicates that the row can be resized vertically.","Indicates that an edge of a box is to be moved down …","The cursor indicates that an edge of a box is to be moved …","The cursor indicates that an edge of a box is to be moved …","Indicates text that may be selected or edited.    ","Indicates vertical text that may be selected or edited.","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","Define how a window will be created and how it will behave.","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where window should be placed at on creation.","The size limits on a window.","Indicates that the user can zoom in.","Indicates that the user can zoom out.","The “html canvas” element selector.","Received character.","Whether to close windows when they are requested to be …","How the alpha channel of textures should be handled while …","The cursor of this window.","Should the window have decorations enabled?","Window that moved.","Whether to exit the app when there are no open windows.","Whether or not to fit the canvas element’s size to its …","Should the window start focused?","Should the window use Input Method Editor?","Sets location of IME candidate box in client area …","Stores internal state that isn’t directly accessible.","The maximum height the window can have.","The maximum width the window can have.","The minimum height the window can have.","The minimum width the window can have.","Which fullscreen or windowing mode should be used?","The cursor position in logical pixels.","Where the window moved to in physical pixels.","Where the window should be placed.","What presentation mode to give the window.","Whether or not to stop events from propagating out of the …","Settings for the primary window. This will be spawned by …","Should the window be resizable?","Which size limits to give the window.","What resolution the window should have.","Stores the title of the window.","Should the window be transparent?","Window that the cursor moved inside.","Window that the cursor entered.","Window that the cursor left.","Window that received the character.","Should the window always be on top of other windows?","Path to the file that was dropped in.","Path to the file that might be dropped in.","Window the file was dropped into.","Window a file is possibly going to be dropped into.","Window that had a cancelled file drop.","Cursor begin and end position.","Current value.","Input string","Window that received the event.","Window that received the event.","Window that received the event.","Window that received the event.","The event loop will update continuously, running as fast …","The event loop will only update if there is a winit event, …","The event loop will only update if there is a winit event …","Configure how the winit event loop should update.","","A resource for configuring usage of the <code>rust_winit</code> library.","","","","","","","","","","","","","","","","","","","","","","","","","","","Configure winit with common settings for a desktop …","","","","","","","","","Configures how the winit event loop updates while the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Configure winit with common settings for a game.","","","Get the winit window that is associated with our entity.","Get the entity associated with the winit window id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Remove a window from winit.","Configures <code>winit</code> to return control to the caller after …","","","","","","","","","","","","","Configures how the winit event loop updates while the …","","","","","Gets the configured <code>UpdateMode</code> depending on whether the …","","","","","The maximum time to wait before the event loop runs again.","The maximum time to wait before the event loop runs again."],"i":[0,0,0,0,3,5,3,5,3,5,0,0,3,5,3,5,3,5,0,0,0,3,5,0,0,3,5,0,0,0,0,3,5,3,5,3,5,3,5,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,3,5,3,5,0,3,5,0,0,0,0,0,0,0,0,23,23,23,0,13,0,23,15,14,13,25,23,23,15,15,14,14,14,13,13,25,25,27,23,23,15,15,14,14,13,13,25,25,27,23,15,14,13,25,27,14,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,27,23,15,14,13,25,27,27,23,15,14,13,23,15,14,13,25,23,15,14,13,23,15,14,13,23,15,14,13,25,25,13,14,13,25,27,23,15,14,13,25,27,13,14,14,25,14,14,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,23,15,14,13,23,15,14,13,25,27,25,23,15,14,13,14,13,25,27,25,13,13,15,14,13,25,15,14,13,25,14,23,15,14,13,25,23,15,14,13,25,14,23,23,15,14,13,25,27,23,23,15,15,14,14,13,13,25,25,27,23,15,14,13,25,27,23,15,14,13,25,27,23,15,14,13,25,23,15,14,13,25,27,25,23,15,14,13,25,15,15,23,15,14,13,25,14,25,25,25,0,23,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,23,15,14,13,25,25,25,23,15,14,13,25,25,25,25,25,25,25,23,15,14,13,23,15,14,13,25,27,23,15,14,13,25,27,23,15,14,13,25,27,23,15,14,13,25,23,15,14,13,13,25,13,23,15,14,13,25,27,23,23,23,0,0,0,0,0,23,23,23,0,15,15,14,0,0,0,0,0,0,0,0,0,0,69,69,68,69,69,69,66,68,66,68,0,0,0,70,70,69,69,70,70,69,69,0,0,0,68,70,70,0,69,0,69,69,4,4,28,28,28,4,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,69,70,69,70,69,70,76,28,76,4,62,62,64,65,66,67,63,68,68,69,69,70,70,28,76,4,62,64,65,66,67,63,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,62,68,69,70,77,62,77,62,69,70,69,70,28,76,4,62,64,65,66,67,63,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,73,1438,4,63,62,64,65,66,67,68,69,70,62,64,65,66,67,68,69,70,62,64,65,66,67,68,69,70,28,28,28,64,65,66,67,63,28,64,64,4,28,76,73,4,62,64,65,66,67,63,68,69,70,73,73,73,69,70,62,68,69,70,62,68,69,70,28,28,4,62,68,69,70,62,68,69,70,76,4,28,76,62,65,66,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,28,64,65,66,67,63,28,62,68,69,70,28,28,28,28,62,68,69,70,69,70,69,70,69,70,28,28,28,28,28,28,28,28,28,76,4,62,64,65,66,67,63,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,4,62,64,65,66,67,63,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,69,70,28,76,4,62,64,65,66,67,63,68,69,70,69,70,73,69,70,28,69,70,73,28,73,1438,28,76,68,68,28,0,28,28,28,28,28,76,69,70,67,67,67,28,1438,4,28,28,73,4,28,28,62,64,65,66,67,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,28,76,4,77,62,62,64,65,66,67,63,68,69,70,28,76,4,62,64,65,66,67,63,68,69,70,28,28,1439,0,0,0,0,0,69,69,68,69,69,69,68,68,0,0,70,70,69,69,70,70,69,69,68,70,70,0,69,69,69,73,1438,28,73,73,1438,28,28,1438,73,28,0,0,0,0,108,116,0,0,116,0,0,0,0,116,0,0,0,88,0,0,0,0,0,0,0,0,1440,94,106,0,105,106,0,0,1440,0,0,0,88,116,117,0,108,0,0,105,0,105,0,116,94,117,105,117,0,0,94,0,0,0,105,18,83,1441,1441,1441,85,87,108,108,108,88,48,89,90,91,1442,94,92,124,85,97,1440,116,87,18,88,88,88,48,48,48,84,84,102,103,104,105,105,106,106,107,117,118,111,86,86,89,89,89,90,90,90,91,91,91,83,99,108,108,100,1442,94,92,124,85,97,1440,116,87,18,88,88,48,48,84,102,103,104,105,106,107,117,118,111,86,89,89,90,90,91,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,88,48,84,106,86,89,90,91,108,92,92,88,48,89,90,91,88,48,89,90,91,118,18,100,97,87,99,104,102,83,108,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,100,48,92,18,87,88,48,84,102,103,104,105,106,107,86,89,90,91,83,99,108,100,48,87,88,48,84,102,103,104,105,106,107,86,89,90,91,83,99,108,100,87,88,48,84,102,103,104,105,106,107,86,89,90,91,83,99,108,100,48,88,48,89,90,91,48,84,48,88,48,105,89,90,91,104,48,18,92,112,111,100,0,88,48,111,100,103,92,92,88,102,103,86,89,90,91,0,1442,94,92,92,124,98,110,85,97,1440,112,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,99,92,98,110,112,98,110,112,92,98,110,112,92,48,84,108,88,48,84,105,106,86,89,90,91,108,88,48,84,106,86,89,90,91,108,88,48,84,105,106,86,89,90,91,108,88,48,84,105,106,86,89,90,91,108,88,102,103,86,89,90,91,1443,48,48,48,48,48,48,107,0,94,92,92,116,116,18,88,48,84,102,103,104,105,106,107,117,117,118,111,86,89,90,91,108,100,112,111,87,0,1442,94,92,92,92,124,85,97,1440,116,116,87,18,88,88,88,88,88,88,88,88,88,88,48,84,84,102,103,104,105,106,107,117,117,118,111,86,86,86,86,86,86,89,89,89,90,90,90,90,91,91,83,99,108,100,48,88,48,83,99,48,111,100,18,83,97,104,124,48,48,48,87,97,87,18,87,87,88,48,84,106,86,89,90,91,108,86,87,98,124,18,83,18,88,48,89,90,91,88,48,89,90,91,83,83,97,88,48,84,106,86,89,90,91,108,48,84,118,18,83,108,116,117,108,108,1441,1441,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,88,48,48,84,102,103,104,105,106,107,117,118,111,86,89,89,90,90,91,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,108,88,48,89,90,91,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,108,92,98,110,112,108,98,106,107,18,83,98,106,107,104,48,84,108,48,84,18,48,18,86,103,89,18,83,1443,87,87,0,0,98,124,104,87,48,87,104,92,48,92,124,85,87,88,107,86,86,88,48,105,89,90,91,97,86,104,0,116,117,88,97,98,124,111,88,89,90,91,88,48,89,90,91,88,48,89,90,91,88,48,89,90,91,88,48,89,90,91,88,48,89,90,91,88,48,89,90,91,1441,87,18,83,18,92,124,108,111,88,102,103,86,89,90,91,18,88,48,89,90,91,83,97,97,18,18,116,117,89,87,88,48,84,102,103,104,105,106,107,86,86,89,90,91,83,99,108,100,92,116,117,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,106,107,107,117,118,111,86,89,90,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,88,48,89,90,91,88,48,89,90,91,83,99,103,84,99,84,1442,94,92,124,85,97,1440,116,87,18,88,48,84,102,103,104,105,106,107,117,118,111,86,89,90,91,83,99,108,100,0,104,118,98,124,100,98,124,48,84,84,87,85,85,1444,1445,1446,1447,0,0,0,0,134,134,134,136,134,134,133,135,136,134,133,135,136,134,133,135,134,134,136,134,133,135,136,134,133,135,133,134,134,134,133,135,136,136,136,134,133,135,134,134,134,134,134,134,136,134,133,135,133,135,134,135,134,134,134,134,136,134,133,135,136,134,133,135,134,133,135,136,134,133,135,134,136,134,133,135,134,134,134,0,134,134,136,134,133,135,136,134,133,135,136,134,133,135,136,134,133,135,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,0,0,0,0,94,0,0,94,94,1441,1441,1441,100,1441,1441,1441,100,1444,1445,1446,0,0,0,0,0,0,0,0,0,1448,1448,1449,145,145,0,0,0,1450,1451,1452,147,145,148,151,141,149,143,147,145,148,151,141,149,143,147,145,148,151,141,149,143,141,147,145,148,151,141,149,143,147,145,148,151,141,149,143,1452,143,141,1452,145,141,145,141,145,141,1452,1452,1448,141,147,145,148,149,143,1452,147,145,148,151,141,149,143,151,149,1452,147,145,141,1449,147,145,148,151,141,149,143,147,145,148,149,143,1452,147,145,148,151,141,149,143,147,145,148,151,141,149,143,147,145,148,151,141,149,143,147,145,148,151,141,149,143,147,145,148,151,141,149,143,151,1451,149,1452,1452,1452,151,1452,147,151,0,147,0,145,1452,1452,1452,1451,151,151,1452,151,1452,145,151,1452,1452,1452,1449,1449,145,141,1449,151,1452,147,145,148,151,141,149,143,147,145,148,151,141,149,143,147,145,148,151,141,149,143,151,141,151,141,147,145,148,151,141,149,143,151,145,145,145,1451,0,0,0,0,1448,1448,0,141,1448,145,145,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,1453,21,21,21,1454,172,167,168,164,165,169,166,1453,21,21,1454,172,167,168,164,165,169,166,1453,21,1454,172,167,168,164,165,169,166,21,21,21,21,21,168,1453,21,1454,172,167,168,164,165,169,166,1453,21,1454,172,167,168,164,165,169,166,164,165,166,0,0,21,167,168,169,21,1454,21,167,168,169,21,167,168,169,21,21,21,168,168,21,168,164,165,169,166,21,21,1453,21,1454,172,167,168,164,165,169,166,21,21,1454,172,21,21,21,1454,21,21,21,21,21,1454,21,21,172,1453,21,21,21,1454,172,167,168,164,165,169,166,21,21,21,168,164,165,169,166,21,21,21,21,21,21,21,1454,1454,1453,21,1454,172,167,168,164,165,169,166,1453,21,21,1454,172,167,168,164,165,169,166,21,1454,172,167,168,164,165,169,166,1453,21,1454,172,167,168,164,165,169,166,21,1453,21,1454,172,167,168,164,165,169,166,168,21,1454,167,168,167,168,21,1454,172,21,21,21,167,0,21,21,21,21,21,21,21,21,21,1454,1454,1454,165,21,167,168,169,21,1453,21,1454,172,167,168,164,165,169,166,1453,21,1454,172,167,168,164,165,169,166,1453,21,1454,172,167,168,164,165,169,166,21,21,1453,21,1454,172,167,168,164,165,169,166,1454,1454,168,1455,0,0,0,0,0,0,168,168,1454,168,168,168,1454,165,0,180,180,180,0,180,180,180,0,0,0,180,180,180,180,0,0,180,180,180,180,180,0,0,0,180,180,180,180,0,0,0,0,183,181,182,183,181,181,182,183,181,181,182,183,181,181,181,182,183,181,182,183,181,182,181,181,181,181,181,181,181,182,183,181,181,181,181,181,181,181,182,183,181,181,181,181,181,181,181,181,183,181,182,183,181,182,183,181,181,182,183,181,182,183,181,181,182,183,181,181,181,181,183,181,181,181,181,181,181,183,181,181,181,181,182,183,181,182,183,181,182,183,181,181,181,182,183,181,183,0,0,188,188,188,188,189,188,188,189,189,188,188,189,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,189,189,188,188,189,188,189,188,189,188,188,188,189,188,189,188,189,188,189,188,189,189,189,188,189,188,189,188,188,189,188,188,189,189,188,189,188,189,188,189,188,189,188,189,188,188,188,189,188,189,188,189,188,189,188,189,188,189,188,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,189,188,188,188,0,0,0,201,0,0,192,201,194,193,192,192,196,201,194,193,192,192,196,201,194,193,192,196,192,192,193,193,193,201,194,193,192,196,201,194,193,192,196,194,193,196,196,196,192,192,192,192,192,192,192,192,196,201,194,193,192,196,193,193,193,193,192,0,192,192,192,192,192,201,194,193,192,196,192,192,196,196,192,192,192,192,192,196,0,201,201,194,193,192,196,201,194,193,192,192,196,201,194,193,192,196,201,194,193,192,196,192,201,194,193,192,196,192,192,201,196,193,196,192,192,192,192,192,192,201,192,193,193,193,192,196,196,201,194,193,192,196,201,194,193,192,196,201,194,193,192,196,192,192,201,194,193,192,196,201,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,203,0,209,203,0,0,0,202,203,209,204,205,206,207,202,202,203,203,208,209,204,205,206,207,202,202,203,203,208,209,204,205,206,207,202,203,208,202,203,202,203,209,204,205,206,207,202,203,208,209,204,205,206,207,202,203,208,204,205,206,207,208,208,208,202,202,203,202,203,202,203,202,203,202,203,202,202,203,208,202,203,205,206,207,209,204,205,206,207,202,203,208,205,206,207,205,206,207,205,206,207,205,206,207,203,202,0,202,203,202,203,202,203,202,203,202,203,203,209,204,205,206,207,202,203,208,202,202,203,208,208,202,202,202,202,203,202,203,208,0,203,209,209,204,205,206,207,202,203,208,209,204,205,206,207,202,202,203,203,208,209,204,205,206,207,202,203,208,209,204,205,206,207,202,203,208,202,203,209,204,205,206,207,202,203,208,202,203,202,203,209,205,206,207,0,208,203,202,203,202,203,202,203,202,203,202,203,202,203,209,203,202,203,205,206,207,205,206,207,202,203,208,208,209,204,205,206,207,202,203,208,209,204,205,206,207,202,203,208,209,204,205,206,207,202,203,208,202,203,202,203,209,204,205,206,207,202,203,208,209,203,203,203,208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,214,219,214,214,0,214,214,215,219,216,214,214,214,215,215,218,1456,217,217,219,216,214,214,215,215,218,1456,217,219,216,214,215,218,1456,217,214,217,214,215,214,215,219,216,214,215,218,1456,217,219,216,214,215,218,1456,217,216,214,215,217,214,215,214,215,217,214,215,217,214,215,215,1456,215,218,219,216,214,215,218,1456,217,214,217,214,217,215,215,215,214,217,214,217,215,214,215,214,215,214,215,214,215,214,215,219,216,214,215,218,1456,217,215,1456,214,215,215,218,215,1456,215,215,214,217,214,214,215,214,215,214,217,214,219,219,216,214,215,218,1456,217,219,216,214,214,215,215,218,1456,217,219,216,214,215,218,1456,217,219,216,214,215,218,1456,217,214,215,219,216,214,215,218,1456,217,214,215,214,215,219,1456,0,214,214,215,214,215,214,215,214,215,214,215,214,215,219,214,215,218,214,215,217,219,216,214,215,218,1456,217,219,216,214,215,218,1456,217,219,216,214,215,218,1456,217,214,215,214,215,219,216,214,215,218,1456,217,219,214,214,214,0,0,0,0,0,196,208,196,208,196,208,192,202,202,196,208,196,208,196,208,196,208,196,208,196,208,0,0,0,0,0,0,0,223,224,225,226,223,223,224,224,1457,225,226,223,223,224,224,1457,225,226,223,224,1457,223,224,223,224,225,226,223,224,1457,225,226,223,224,1457,225,226,223,224,223,224,223,224,1457,223,224,1457,225,226,225,226,223,224,1457,225,226,225,226,225,226,225,226,223,224,223,224,223,224,223,224,223,224,225,226,223,224,1457,223,224,1457,223,224,223,224,1457,223,224,223,224,223,224,223,224,225,226,223,224,1457,225,226,223,223,224,224,1457,225,226,223,224,1457,225,226,223,224,1457,223,224,225,226,223,224,1457,223,224,223,224,0,1457,225,226,223,224,223,224,223,224,223,224,223,224,223,224,223,224,1457,225,226,225,226,225,226,223,224,1457,225,226,223,224,1457,225,226,223,224,1457,223,224,223,224,225,226,223,224,1457,227,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,228,228,232,0,0,0,0,0,0,228,232,229,231,230,230,1458,228,228,232,229,231,230,1458,228,228,232,229,231,230,1458,228,230,228,228,232,229,231,230,1458,228,232,229,231,230,1458,228,229,230,228,228,230,228,230,228,228,1458,228,228,232,229,231,230,1458,228,230,230,230,230,228,228,228,228,228,228,232,229,231,230,1458,228,1458,228,231,228,1458,228,230,228,228,230,228,232,232,229,231,230,1458,228,232,229,231,230,1458,228,228,232,229,231,230,1458,228,232,229,231,230,1458,228,228,232,229,231,230,1458,228,228,228,228,232,0,228,228,228,228,228,228,228,232,228,231,230,228,232,229,231,230,1458,228,232,229,231,230,1458,228,232,229,231,230,1458,228,228,228,232,229,231,230,1458,228,232,228,228,228,1459,234,237,234,0,0,0,0,0,0,237,233,236,234,234,235,235,1460,237,233,236,234,235,1460,237,233,236,234,235,1460,234,235,237,233,236,234,235,1460,237,233,236,234,235,1460,233,234,235,234,235,234,235,1460,237,233,236,234,235,1460,234,235,234,235,234,235,234,235,237,233,236,234,235,1460,1460,236,1460,234,235,234,235,237,237,233,236,234,235,1460,237,233,236,234,235,1460,237,233,236,234,235,1460,237,233,236,234,235,1460,237,233,236,234,235,1460,237,237,236,234,235,237,233,236,234,235,1460,237,233,236,234,235,1460,237,233,236,234,235,1460,237,233,236,234,235,1460,237,243,0,0,0,0,0,241,0,242,242,242,0,0,0,243,0,139,238,139,240,138,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,138,238,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,241,242,243,244,238,138,138,138,138,240,240,138,139,241,242,243,244,241,242,240,138,246,238,139,241,242,243,244,238,138,138,138,138,240,240,138,246,238,139,240,138,246,238,139,241,242,243,244,138,240,138,139,241,242,243,244,139,138,238,139,139,138,238,238,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,238,139,238,238,238,238,138,241,242,238,238,246,138,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,240,138,246,238,139,241,242,243,244,238,246,238,240,238,238,0,0,248,248,248,248,248,248,248,248,0,248,248,248,248,248,248,248,248,248,1461,248,248,248,248,248,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,251,0,250,251,249,256,176,249,250,250,251,251,255,252,252,253,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,251,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,250,251,252,253,250,251,252,253,250,251,252,253,252,176,176,255,256,176,249,250,251,255,252,253,250,251,252,253,251,253,176,249,176,256,176,250,251,252,253,250,251,252,253,250,251,252,253,256,176,249,250,251,255,252,253,255,249,249,255,176,251,253,249,255,255,253,176,251,253,176,249,250,249,249,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,176,249,176,249,250,252,176,253,176,176,256,250,251,252,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,256,176,249,250,251,255,252,253,0,0,0,0,0,261,257,257,262,261,257,262,261,257,262,257,261,257,262,261,257,262,257,257,257,261,262,261,257,262,257,257,257,257,257,261,257,262,262,262,257,262,262,257,257,261,257,262,261,257,262,261,257,262,261,257,262,261,257,262,261,257,262,257,257,261,257,262,261,257,262,261,257,262,261,257,262,0,0,0,1462,0,0,0,0,0,0,0,263,263,263,263,263,263,263,1462,263,263,263,263,263,263,263,263,263,1463,263,1463,263,1463,263,263,1462,263,1462,263,1462,263,263,263,263,263,263,0,0,0,0,0,0,0,0,0,1464,259,0,1465,0,259,0,0,0,269,1466,1467,273,271,259,259,272,254,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,254,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,269,259,254,268,269,270,259,254,268,269,270,259,254,268,270,254,32,259,32,271,1466,1467,273,271,259,272,254,32,268,269,270,272,259,254,254,259,254,259,254,273,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,254,254,32,268,269,270,271,259,32,254,32,32,32,32,32,32,254,254,272,254,32,32,32,32,32,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,270,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,270,270,32,268,272,32,272,32,273,272,273,254,268,273,273,254,32,268,270,254,273,272,259,254,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,1466,1467,273,273,271,259,272,272,254,32,268,269,270,1466,1467,273,271,259,272,254,32,268,269,270,0,0,0,0,280,0,0,170,0,245,245,170,275,275,282,280,276,170,170,170,245,275,282,280,276,170,170,245,275,282,280,276,170,245,275,170,170,170,282,280,276,170,245,275,282,280,276,170,245,275,245,170,275,170,170,275,170,275,170,170,245,276,170,282,280,276,170,245,275,170,170,276,170,275,170,170,170,245,245,245,280,280,276,170,245,275,245,282,280,276,170,170,245,275,170,170,170,276,170,276,245,170,245,170,170,170,170,280,170,170,170,245,276,282,280,276,170,245,275,282,280,276,170,170,245,275,282,280,276,170,245,275,282,280,276,170,245,275,282,170,282,280,276,170,245,275,276,245,276,276,276,245,1468,170,282,170,280,170,170,170,170,170,170,170,276,245,245,245,245,170,170,170,170,170,282,170,275,275,170,170,275,280,245,282,280,276,170,245,275,282,280,276,170,245,275,282,280,276,170,245,275,170,170,282,280,276,170,245,275,170,170,276,0,0,0,0,0,0,0,0,284,95,287,286,286,283,284,95,285,288,287,286,283,284,95,285,288,287,286,283,284,95,285,288,286,287,286,283,284,95,285,288,287,286,283,284,95,285,288,283,284,285,286,286,286,286,287,288,283,285,287,286,283,284,95,285,288,283,286,286,286,286,283,286,286,283,284,285,288,287,286,283,284,95,285,288,283,285,283,286,284,95,283,283,286,286,284,95,287,286,283,284,95,285,288,287,286,283,284,95,285,288,287,286,283,284,95,285,288,287,286,283,284,95,285,288,287,288,287,286,283,284,95,285,288,283,284,285,284,285,283,284,285,287,283,284,285,288,285,288,284,95,287,288,283,283,286,283,95,95,283,95,287,288,286,286,287,286,283,284,95,285,288,287,286,283,284,95,285,288,287,286,283,284,95,285,288,287,286,283,284,95,285,288,283,283,288,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,362,1462,0,0,0,0,0,0,0,1469,0,0,0,0,0,0,0,0,0,362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,1465,0,1470,0,0,0,0,0,0,71,58,59,72,71,58,59,72,71,58,59,72,362,0,0,362,71,58,59,72,1462,59,72,362,362,0,362,74,0,1471,362,0,71,58,59,72,71,71,58,59,72,0,362,1470,60,1463,74,1463,362,362,74,1463,362,58,0,1472,0,0,0,1473,362,71,58,0,362,1462,1462,362,1462,0,0,0,362,0,362,1469,0,0,0,0,0,0,0,0,0,0,1474,1474,1474,0,0,304,0,0,0,0,0,1475,0,0,1475,1475,1475,307,307,304,0,0,0,304,0,0,0,0,0,0,0,0,0,0,1475,0,1475,0,0,0,0,179,179,299,178,179,179,179,178,179,303,1476,1477,199,538,600,309,305,306,302,300,178,178,179,179,299,1478,1479,301,304,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,300,300,301,301,301,302,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,178,299,303,178,179,299,301,304,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,303,178,179,299,301,304,303,178,179,299,301,304,299,178,179,299,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,178,179,304,178,179,304,178,179,304,178,179,299,179,179,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,305,306,1475,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,301,303,300,178,179,299,304,304,307,307,302,300,302,300,302,300,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,299,1478,1479,301,304,307,300,178,179,299,300,178,179,299,299,300,300,300,300,300,300,300,300,300,300,178,178,178,178,304,307,300,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,309,305,306,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,303,178,179,299,300,300,300,300,300,300,300,300,300,300,309,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,301,301,300,178,301,300,309,305,306,300,300,304,307,178,179,178,178,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,300,300,309,305,306,303,178,179,299,301,304,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,303,1476,1477,199,538,600,309,305,306,302,300,178,179,299,1478,1479,301,304,307,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,300,1475,303,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1476,1477,199,538,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1478,1479,300,178,0,0,0,0,0,310,312,313,314,310,312,313,314,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,310,312,313,314,310,313,312,314,315,310,313,312,314,315,310,312,315,310,312,313,314,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,315,310,313,312,314,310,312,313,314,310,312,313,310,312,313,314,310,312,313,314,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,310,313,312,314,315,0,0,0,0,0,320,281,318,319,320,281,318,319,320,281,318,319,320,281,318,319,320,281,318,319,320,281,281,281,318,319,318,318,281,318,319,320,281,318,319,281,318,319,320,318,319,319,319,320,319,320,281,318,319,320,281,318,319,320,281,318,319,320,281,318,319,320,320,281,318,319,320,320,319,320,319,281,281,318,319,320,281,318,319,320,281,318,319,320,281,318,319,320,319,339,0,0,0,0,339,339,339,327,0,339,339,339,327,0,0,0,0,0,1469,0,0,336,0,0,0,0,0,0,0,0,0,0,0,60,339,339,336,0,336,0,0,0,0,0,0,339,0,0,0,0,0,339,339,327,57,57,71,58,61,290,291,59,292,72,325,331,71,58,61,290,291,59,292,72,325,331,71,58,61,290,291,59,292,72,325,331,0,0,57,61,290,291,292,333,57,325,325,326,334,335,336,336,332,339,327,328,329,329,330,330,331,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,325,329,330,331,71,58,61,290,291,59,292,72,325,331,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,291,59,292,72,325,326,327,328,329,330,331,325,326,327,328,329,330,331,325,326,327,328,329,330,331,0,57,57,332,333,57,326,334,335,336,332,328,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,74,325,331,325,336,329,330,331,325,329,330,331,74,325,336,327,56,329,330,331,325,336,329,330,331,325,339,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,333,57,326,334,335,336,332,328,337,338,332,57,325,329,330,331,332,74,325,56,329,330,331,71,58,61,290,291,59,292,72,325,331,339,71,61,325,331,71,58,61,290,291,59,292,72,325,331,57,332,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,325,331,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,60,325,331,74,331,74,325,331,333,57,326,334,335,332,328,58,290,339,332,332,57,0,71,58,61,290,325,331,338,57,57,57,57,325,326,327,328,329,330,331,339,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,61,290,291,292,333,57,325,326,334,335,336,332,339,327,328,329,330,331,337,338,1469,328,328,1480,1481,1480,1481,1481,1480,0,0,0,0,0,0,0,0,0,0,171,0,0,0,0,0,0,0,0,0,0,346,177,345,341,344,340,342,260,260,171,171,343,33,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,340,341,340,342,343,260,171,260,171,260,171,177,344,340,345,341,340,342,33,346,177,345,341,344,340,342,260,171,343,33,346,260,171,260,177,177,177,260,171,260,171,344,340,260,171,343,346,177,345,341,344,340,342,260,171,343,33,345,341,340,342,33,345,341,344,340,342,343,344,343,343,343,344,343,343,343,177,346,343,343,343,343,343,340,342,342,340,1482,346,344,343,343,344,177,346,345,260,171,345,340,340,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,340,260,171,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,177,345,341,344,340,343,346,343,177,345,341,340,340,345,341,344,340,343,340,260,171,33,340,33,1482,33,33,260,171,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,346,177,345,341,344,340,342,260,171,343,33,340,340,340,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,362,0,0,0,0,0,0,0,0,1483,1484,0,0,361,361,361,361,0,0,362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1483,1484,0,0,1470,0,0,0,0,0,0,0,0,0,0,349,198,349,352,353,295,352,353,295,352,353,295,1485,350,1484,369,369,369,369,369,369,369,369,358,360,351,351,357,198,362,352,353,295,362,352,353,295,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,96,354,17,96,354,355,0,0,352,353,295,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,374,363,372,373,96,354,356,362,352,353,295,349,17,258,258,258,357,349,362,352,353,295,20,351,352,353,362,295,17,96,354,81,358,359,355,360,96,354,81,358,360,349,349,349,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,361,198,374,364,365,361,361,17,96,354,20,362,81,359,355,355,363,364,365,361,361,356,20,20,17,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,359,355,360,295,351,357,198,363,364,365,258,361,356,350,351,350,20,20,20,20,198,20,362,352,353,295,350,350,20,20,350,20,198,1483,1484,17,96,354,350,20,369,369,369,369,369,369,369,369,81,81,358,359,355,360,357,198,356,20,20,20,350,349,352,353,295,361,352,353,295,1483,350,81,198,1484,17,96,354,20,369,369,369,369,369,369,369,369,81,358,359,355,360,357,198,356,362,352,353,295,349,349,198,198,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,352,353,295,17,96,354,360,17,96,96,20,20,81,81,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,1470,352,353,295,17,96,354,359,17,96,354,359,20,362,352,353,295,362,352,353,295,258,20,20,20,20,20,20,20,20,20,20,20,20,356,17,96,354,0,349,20,20,96,354,350,350,362,352,353,355,295,258,350,295,198,20,1484,369,369,369,369,369,369,369,369,360,357,198,198,352,353,295,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,20,20,377,365,1472,352,353,295,361,351,349,96,354,349,349,349,349,198,349,376,1489,1473,352,362,295,352,353,295,362,352,353,295,96,354,96,354,362,352,353,295,96,354,258,349,349,20,20,198,198,198,258,20,355,361,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,362,17,96,354,370,349,371,372,373,374,375,376,377,378,352,352,1486,350,1487,293,353,353,1488,20,369,81,358,359,355,360,295,295,351,357,198,363,364,365,258,361,356,17,96,354,370,349,371,372,373,374,375,376,377,378,352,1486,350,1487,293,353,1488,20,369,81,358,359,355,360,295,351,357,198,363,364,365,258,361,356,362,352,353,295,350,349,1490,1491,1490,370,371,372,373,374,375,376,377,378,363,364,365,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,311,42,311,316,42,379,267,311,384,380,382,383,42,316,381,381,379,267,311,384,380,382,383,42,316,381,379,267,311,384,380,382,383,42,316,381,381,267,379,267,42,42,379,267,311,384,380,382,383,42,316,381,379,267,311,384,380,382,383,42,316,381,42,267,42,42,42,42,42,42,42,316,381,379,316,381,316,381,42,42,311,316,311,316,42,42,311,316,42,379,267,382,383,267,383,311,42,311,311,379,267,311,384,380,382,383,42,316,381,384,380,382,383,381,381,42,42,42,42,381,381,379,379,267,42,381,379,379,267,267,267,311,384,380,382,383,42,316,316,381,1471,42,311,42,316,311,42,316,311,316,311,316,42,42,381,311,42,311,42,42,42,380,42,380,42,42,42,380,42,42,380,42,42,42,381,381,311,42,316,42,42,42,379,42,42,379,42,311,311,42,42,42,42,42,42,379,267,311,384,380,382,383,42,316,381,379,267,311,384,380,382,383,42,316,381,379,267,311,42,316,381,379,267,311,384,380,382,383,42,316,381,379,267,379,267,267,384,379,267,311,384,380,382,383,42,316,381,311,379,267,379,267,42,42,42,42,379,267,384,311,316,267,379,42,381,384,380,42,380,42,311,42,42,42,267,311,311,311,42,42,311,42,42,42,42,42,380,42,380,42,42,42,42,380,42,380,42,380,42,379,267,267,267,311,379,379,384,381,42,42,42,42,316,381,379,267,311,384,380,382,383,42,316,381,379,267,311,384,380,382,383,42,316,381,379,267,311,384,380,382,383,42,316,381,0,379,267,311,384,380,382,383,42,316,381,379,379,311,311,311,316,311,311,0,0,317,126,126,317,126,317,126,317,126,317,126,317,126,126,317,126,317,126,317,126,317,317,317,126,317,126,126,317,317,317,317,317,126,317,317,126,126,126,126,126,126,126,126,317,126,126,317,126,317,126,317,126,317,126,317,126,317,126,126,317,126,317,126,317,126,317,126,317,126,317,126,126,0,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,394,394,394,394,0,394,0,0,0,0,0,0,0,394,394,394,394,394,395,388,393,394,389,395,390,391,392,388,388,393,394,389,395,390,391,392,388,388,393,394,389,395,390,391,392,388,388,388,393,394,389,395,390,391,392,388,393,394,389,395,390,391,392,388,389,390,390,391,392,388,388,390,391,392,388,390,391,392,388,388,388,389,388,395,393,394,389,395,390,391,392,388,393,390,391,392,388,388,388,388,388,394,394,395,390,391,392,388,393,394,394,394,394,394,394,389,395,390,391,392,388,388,393,389,388,388,388,388,388,388,394,393,394,389,395,390,391,392,388,393,394,389,395,390,391,392,388,388,393,394,389,395,390,391,392,388,393,394,389,395,390,391,392,388,388,393,394,389,395,390,391,392,388,388,393,392,392,395,390,392,395,388,395,395,395,395,395,395,391,394,388,388,388,388,388,388,395,388,394,390,391,392,388,394,390,393,394,389,395,390,391,392,388,393,394,389,395,390,391,392,388,393,394,389,395,390,391,392,388,388,395,390,391,392,388,395,390,391,392,393,394,389,395,390,391,392,388,388,1492,0,0,0,0,405,0,405,405,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1493,1494,400,19,401,414,415,416,417,400,402,368,367,19,19,401,401,401,407,408,409,410,411,412,405,405,406,403,414,415,416,417,400,402,368,367,19,19,401,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,19,401,19,401,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,402,403,0,417,409,1493,405,19,401,405,405,19,401,19,401,402,406,403,19,401,1495,1495,0,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,401,405,406,407,408,401,405,406,401,405,19,401,19,401,19,401,19,401,407,408,409,410,411,412,405,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,19,401,402,19,401,406,403,401,19,401,19,401,19,401,19,401,19,401,1493,1494,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,19,401,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,368,367,19,19,401,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,1496,1496,19,401,19,401,368,367,406,368,367,0,409,400,412,1493,1494,19,401,19,401,19,401,19,401,19,401,19,401,1493,1494,1493,1494,1493,19,401,1493,1494,400,412,400,412,19,405,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,19,401,19,401,414,415,416,417,400,402,368,367,19,401,407,408,409,410,411,412,405,406,403,1493,1494,414,415,416,417,407,408,409,410,411,1497,1498,1499,1499,1497,1498,1499,0,0,0,0,0,422,422,419,419,421,421,421,418,418,418,418,419,422,418,418,420,421,421,419,419,419,422,418,418,420,421,419,419,422,418,420,421,419,421,419,418,419,418,419,421,422,418,420,421,419,422,418,420,421,419,420,418,418,418,418,421,419,418,419,418,421,419,418,421,419,418,419,419,422,418,420,419,422,422,418,420,421,419,421,421,419,421,419,421,419,421,419,419,418,419,418,419,418,419,418,419,418,419,422,418,421,419,422,418,420,421,419,419,422,418,420,0,422,418,418,421,419,418,418,418,418,419,418,419,421,419,421,421,421,419,422,418,420,421,419,422,418,418,420,421,419,419,422,418,420,421,419,422,418,420,421,419,421,418,419,422,418,420,421,419,421,421,419,421,418,419,418,418,0,0,418,419,0,418,418,419,418,419,418,419,418,419,418,419,418,419,418,419,418,418,422,418,418,421,419,422,418,419,418,421,419,0,422,418,420,421,419,422,418,420,421,419,422,418,420,421,419,418,419,418,419,422,418,420,421,419,419,419,419,437,0,0,437,0,0,0,425,433,437,425,425,425,425,439,439,439,433,425,0,0,0,0,0,0,0,0,0,0,0,0,0,427,427,425,425,425,427,439,439,439,425,425,425,427,440,440,440,427,427,425,425,425,427,425,425,425,439,425,425,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,423,423,424,424,424,438,425,425,425,426,426,426,427,427,427,428,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,439,440,423,423,424,424,438,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,423,425,426,427,428,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,429,428,435,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,429,429,426,436,431,423,424,425,426,427,428,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,430,431,432,433,434,435,436,437,423,424,425,426,427,428,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,434,434,438,431,431,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,429,430,431,432,429,429,429,423,424,425,426,427,428,433,434,435,436,437,434,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,423,425,426,427,428,439,440,423,424,425,426,427,428,431,433,434,435,436,437,423,424,425,426,427,428,423,424,425,426,427,428,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,431,432,439,439,440,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,437,437,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,429,430,431,432,426,428,434,435,436,0,0,0,0,429,429,429,423,424,426,428,429,430,431,432,434,435,436,423,424,426,428,429,430,431,432,434,435,436,423,425,426,427,428,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,425,426,427,428,432,423,439,440,425,427,433,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,423,424,424,438,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,438,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,431,431,432,438,424,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,426,428,430,431,434,435,436,430,439,440,423,425,426,427,428,433,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,430,423,424,425,426,427,428,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,431,431,431,431,430,430,431,431,432,423,424,425,426,427,428,430,431,432,433,434,435,436,437,439,440,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,431,431,431,431,430,430,431,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,423,424,438,425,426,427,428,429,430,431,432,433,434,435,436,437,435,436,425,427,433,437,425,427,433,437,425,427,433,437,1500,1501,1500,1501,1502,1502,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,441,442,443,441,441,441,442,442,442,443,443,443,441,441,442,442,443,443,441,442,443,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,442,443,441,442,443,441,442,443,441,442,443,441,442,443,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,441,442,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,443,441,443,442,443,441,442,443,441,442,443,442,443,442,441,442,443,441,441,442,442,443,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,0,441,442,442,443,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,441,442,443,441,442,443,441,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,441,442,443,442,442,442,445,447,445,0,0,0,0,0,445,447,445,444,445,446,447,448,444,444,444,445,445,445,446,446,447,447,447,448,448,444,444,445,445,446,446,447,447,448,448,444,445,446,447,448,445,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,446,444,445,446,447,448,444,445,446,447,448,444,445,447,445,444,445,446,447,448,444,445,447,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,446,448,444,446,448,445,444,445,446,447,448,444,445,446,447,448,445,445,447,444,445,446,447,448,444,444,445,445,446,446,447,447,448,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,0,444,445,446,447,448,445,447,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,444,445,446,447,448,448,444,445,446,447,448,445,447,445,447,445,447,448,448,442,442,442,442,442,442,442,442,0,442,442,442,425,442,442,442,442,442,442,442,442,442,442,442,425,425,425,425,442,442,442,425,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,0,0,0,0,0,442,442,442,442,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,442,442,442,442,442,442,442,445,427,427,425,425,425,427,442,442,442,442,445,442,425,0,442,442,442,442,442,442,442,425,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,425,427,445,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,445,427,427,425,425,425,427,442,0,442,425,442,442,442,442,425,442,425,442,442,442,442,0,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,425,442,442,442,425,442,428,426,450,426,428,423,450,450,450,451,452,452,0,452,451,452,0,0,0,0,449,449,449,450,451,452,450,450,451,451,452,452,452,453,449,450,450,451,451,452,452,453,449,450,451,452,453,449,452,450,451,452,450,451,452,450,451,452,453,449,450,451,452,453,449,450,451,452,453,449,450,451,452,450,451,452,453,449,450,451,452,453,449,450,451,452,450,451,452,449,453,450,451,452,453,450,451,452,453,449,452,452,450,451,452,452,450,451,452,450,451,452,450,451,452,450,451,452,450,451,452,450,451,452,449,450,451,452,453,449,453,450,450,451,452,453,453,449,450,451,452,449,450,450,452,449,449,450,451,452,450,451,452,452,453,450,451,452,450,451,452,453,449,450,450,451,451,452,452,453,449,450,451,452,453,449,450,451,452,453,449,450,451,452,450,451,452,453,449,449,450,451,452,449,449,449,449,449,449,450,451,452,450,453,450,453,453,451,452,450,451,452,450,451,452,450,451,452,450,451,452,450,451,452,450,451,452,450,451,452,450,451,452,453,453,450,451,452,453,449,0,450,451,452,453,449,450,451,452,453,449,450,451,452,453,449,450,451,452,450,451,452,450,451,452,453,449,451,452,451,452,451,452,1503,1503,1503,0,0,455,455,455,455,455,455,0,0,455,455,0,0,455,455,455,0,0,455,455,455,455,455,455,0,0,0,455,455,455,455,0,0,0,0,0,0,0,0,0,0,0,0,456,457,458,459,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,469,470,460,461,462,463,464,465,466,467,468,0,0,0,0,0,0,0,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,459,456,457,458,459,456,457,458,459,456,458,459,456,457,458,459,0,0,0,469,470,0,0,0,0,1504,1505,0,0,1506,1505,0,0,0,1506,1504,0,459,456,457,458,459,472,472,456,457,458,459,472,472,456,458,459,460,461,462,456,463,464,465,466,467,457,458,459,472,472,456,457,458,459,460,461,462,456,463,464,465,466,467,468,457,458,459,462,456,456,465,466,467,468,457,457,458,458,459,459,462,456,456,465,466,467,457,457,458,458,459,459,465,462,466,467,469,470,456,468,457,458,469,470,456,458,456,458,456,458,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,471,472,472,472,469,469,469,470,470,470,460,460,461,461,462,462,456,456,463,463,464,464,465,465,466,466,467,467,468,468,457,457,458,458,459,459,485,471,471,472,472,469,469,470,470,460,460,461,461,462,462,456,456,463,463,464,464,465,465,466,466,467,467,468,468,457,457,458,458,459,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,462,456,472,469,470,468,457,456,458,459,465,466,467,456,465,466,467,457,458,459,456,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,457,456,458,459,457,458,458,459,469,470,469,470,469,470,469,470,469,470,469,470,469,470,0,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,471,456,457,458,459,456,457,458,459,456,457,458,459,456,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,456,457,458,459,456,457,458,459,456,457,458,459,456,457,458,459,456,457,458,459,462,465,466,467,462,465,466,467,468,471,456,458,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,460,461,456,463,464,460,461,456,463,464,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,462,465,466,467,485,456,457,458,459,456,457,458,459,456,456,468,457,457,458,458,459,459,456,456,457,457,458,458,459,459,0,0,0,456,468,457,458,459,456,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,0,0,0,0,472,469,470,472,469,470,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,472,469,470,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,456,457,458,0,0,471,460,461,462,456,463,464,465,466,467,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,456,457,458,459,485,471,472,469,469,470,470,460,460,461,461,462,462,456,456,463,463,464,464,465,465,466,466,467,467,468,468,457,457,458,458,459,459,456,457,458,459,485,471,472,469,470,460,461,462,462,462,456,456,456,456,456,456,456,463,464,465,466,466,467,467,468,457,457,457,458,458,458,458,459,459,459,459,459,459,459,459,468,460,462,463,465,466,457,460,463,456,468,457,458,459,461,462,464,466,467,468,471,471,460,461,462,463,464,465,466,467,460,461,462,463,464,465,466,467,460,461,462,463,464,465,466,467,460,461,462,463,464,465,466,467,471,462,465,466,467,462,466,467,468,460,462,463,466,460,463,460,461,463,464,465,467,468,461,464,460,461,462,464,466,468,461,462,464,466,467,471,460,461,462,456,463,464,465,466,467,468,457,458,459,468,468,468,461,464,467,461,462,464,466,467,468,461,462,464,466,467,468,461,462,464,466,467,468,460,461,462,463,464,466,467,465,460,462,463,466,461,464,467,468,456,468,457,458,459,460,461,462,463,464,466,467,468,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,468,471,460,461,462,456,463,464,465,466,467,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,472,469,470,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,471,0,456,457,458,459,456,457,458,459,471,471,485,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,471,472,472,469,469,470,470,460,460,461,461,462,462,456,456,463,463,464,464,465,465,466,466,467,467,468,468,457,457,458,458,459,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,460,461,462,463,464,465,466,467,468,471,460,461,462,456,463,464,465,466,467,468,457,458,459,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,468,456,457,458,459,456,468,457,458,459,465,466,467,468,457,458,459,471,460,461,462,456,463,464,465,466,467,457,458,459,0,0,0,456,468,457,458,459,456,468,457,458,459,456,468,457,458,459,456,468,457,458,459,461,464,467,461,464,467,461,464,467,461,464,467,0,0,0,0,460,463,461,464,456,457,458,459,471,456,457,458,459,456,457,458,459,471,456,457,458,459,460,460,460,461,461,462,462,462,462,462,456,456,463,463,464,464,465,465,465,466,466,466,466,467,467,467,467,468,468,468,457,457,458,458,459,459,456,457,458,459,462,462,456,456,465,465,466,466,467,467,468,457,457,458,458,459,459,465,462,466,467,468,462,465,466,467,465,462,466,468,462,467,471,460,461,462,456,463,464,465,466,467,457,458,459,462,456,465,466,467,468,457,458,459,471,469,470,456,457,458,459,456,468,457,458,459,456,457,458,459,469,470,485,467,467,467,457,457,467,467,467,467,467,467,467,456,457,458,459,0,460,461,462,462,456,456,463,464,465,465,466,466,467,467,468,468,457,457,458,458,459,459,456,457,458,459,456,457,458,459,467,0,456,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,456,457,458,459,456,456,457,457,458,458,459,459,456,456,457,457,458,458,459,459,457,456,457,458,459,462,465,466,467,456,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,471,468,469,470,456,457,458,459,462,456,456,465,466,467,468,457,457,458,458,459,459,462,456,456,465,466,467,457,457,458,458,459,459,465,462,466,467,462,462,456,456,465,465,466,466,467,467,468,468,457,457,458,458,459,459,0,456,468,457,458,459,468,460,461,462,463,464,465,466,467,460,461,462,463,464,465,466,467,468,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,461,464,467,468,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,460,462,463,466,461,464,467,461,460,462,463,466,461,464,467,461,460,461,463,464,462,465,466,467,456,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,456,457,458,459,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,0,471,471,485,471,472,469,470,460,461,462,456,463,464,465,466,467,468,457,458,459,0,0,0,0,0,0,0,488,468,459,476,482,479,467,471,460,461,462,463,464,465,466,467,456,468,457,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,486,487,488,454,483,468,457,458,459,474,475,476,480,481,482,478,462,479,465,466,467,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1506,1504,1505,456,457,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,1506,456,457,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1505,1504,456,468,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,486,487,488,454,483,468,457,458,459,474,475,476,480,481,482,478,462,479,465,466,467,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1506,1504,1505,456,457,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1506,1504,1505,456,457,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1506,1504,1505,456,457,458,459,1505,459,1506,1504,1505,456,457,458,459,1506,1504,1505,456,457,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,487,488,483,468,458,459,475,476,481,482,478,462,479,466,467,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1505,459,1504,1505,456,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1505,459,1505,459,1505,459,1505,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,1505,459,1504,1505,456,458,459,1504,1505,456,458,459,1504,1505,456,458,459,0,0,0,0,0,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,486,486,487,487,487,488,488,488,486,486,487,487,488,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,486,487,487,488,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,486,487,487,488,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,486,487,488,488,486,487,488,486,487,488,487,488,454,483,484,0,0,478,477,479,473,0,0,0,0,478,454,483,477,479,473,484,454,483,484,484,454,483,484,454,483,484,483,484,454,483,484,0,0,0,0,0,484,454,483,484,454,483,484,483,484,478,454,483,477,479,484,454,483,484,478,454,483,477,479,473,484,478,454,454,483,483,477,479,473,484,484,478,454,454,483,483,477,479,484,484,477,478,479,454,483,473,483,483,483,478,454,483,477,479,473,484,478,478,454,454,483,483,477,477,479,479,473,473,484,484,478,478,454,454,483,483,477,477,479,479,473,473,484,484,478,454,483,477,479,473,484,477,478,479,454,483,484,473,454,483,484,478,454,483,477,479,484,478,454,483,477,479,484,478,454,483,477,479,473,484,478,454,483,477,479,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,454,483,484,454,483,484,454,483,484,454,483,484,478,454,483,477,479,473,484,478,454,483,477,479,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,454,483,484,454,483,484,454,483,484,454,483,484,454,483,484,478,477,479,478,477,479,473,478,454,483,477,479,484,483,478,454,483,477,479,473,484,478,454,483,477,479,473,484,477,473,484,477,473,484,478,454,483,477,479,473,484,478,477,479,454,483,484,454,483,484,454,454,483,483,473,484,484,454,454,483,483,484,484,454,483,473,484,454,483,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,454,483,478,454,483,477,479,484,478,454,483,477,479,484,478,454,483,477,479,484,478,454,483,477,479,484,478,454,483,477,479,484,454,483,484,478,478,454,454,483,483,477,477,479,479,473,473,484,484,454,483,484,478,478,478,454,454,454,483,483,483,483,483,477,479,479,473,484,484,484,484,484,484,484,484,484,484,484,484,473,478,454,477,454,483,473,484,478,479,473,478,477,479,478,477,479,478,477,479,478,477,479,478,477,479,478,479,473,478,477,479,473,477,479,473,478,473,478,454,483,477,479,484,478,479,478,454,483,477,479,473,484,473,473,473,479,478,479,473,478,479,473,478,479,473,478,479,477,478,479,473,454,483,473,484,478,479,473,478,454,483,477,479,473,484,473,478,454,483,477,479,484,478,454,483,477,479,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,454,483,484,478,454,483,477,479,473,484,478,478,454,454,483,483,477,477,479,479,473,473,484,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,477,479,473,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,473,454,483,484,454,483,473,484,478,454,483,477,479,473,484,478,454,483,477,479,484,454,483,473,484,454,483,473,484,454,483,473,484,454,483,473,484,479,479,479,479,0,0,0,0,460,461,454,483,484,454,483,484,454,483,484,454,483,484,478,478,478,478,478,454,454,483,483,477,477,477,479,479,479,479,473,473,473,473,484,484,454,483,484,478,478,454,454,483,483,477,477,479,479,473,484,484,477,478,479,473,478,477,479,477,478,473,478,473,479,478,454,483,477,479,484,478,454,483,477,479,473,484,454,483,484,454,483,473,484,454,483,484,479,479,479,454,454,479,479,479,479,479,479,479,454,483,484,478,478,454,454,483,483,477,477,479,479,473,473,484,484,454,483,484,454,483,484,479,0,478,454,483,477,479,484,454,483,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,454,483,484,454,454,483,483,484,484,454,454,483,483,484,484,454,454,483,484,478,477,479,454,483,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,473,454,483,484,478,454,454,483,483,477,479,473,484,484,478,454,454,483,483,477,479,484,484,477,478,479,478,478,454,454,483,483,477,477,479,479,473,473,484,484,454,483,473,484,473,478,477,479,478,477,479,473,478,454,483,477,479,473,484,479,473,478,454,483,477,479,473,484,478,479,479,478,479,479,460,461,478,477,479,483,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,454,483,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,478,454,483,477,479,473,484,0,0,0,0,479,478,477,479,478,454,483,477,479,484,454,483,473,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,454,483,478,462,479,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,454,483,484,484,484,484,484,484,454,483,484,484,454,483,484,454,483,484,483,484,454,483,484,484,454,483,484,454,483,484,483,484,483,484,484,483,484,483,484,483,484,454,483,484,484,484,484,484,484,454,483,484,484,454,483,484,454,483,484,483,484,454,483,484,484,454,483,484,454,483,484,483,484,483,473,484,484,483,484,483,484,483,484,483,484,484,484,484,484,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,454,483,478,462,479,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,454,483,484,484,484,484,484,484,454,483,484,484,454,483,484,454,483,484,483,484,454,483,484,484,454,483,484,454,483,484,483,484,483,484,484,483,484,483,484,483,484,454,483,484,484,484,484,484,484,454,483,484,484,454,483,484,454,483,484,483,484,454,483,484,484,454,483,484,454,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,484,484,484,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,478,462,479,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,483,484,484,484,484,484,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,484,484,484,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,484,484,484,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,483,484,484,483,484,483,484,483,484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,463,464,463,464,468,459,467,468,457,458,459,465,466,467,468,457,458,459,465,466,467,468,458,459,466,467,474,475,476,0,0,0,474,475,476,476,474,475,476,474,475,476,475,476,474,475,476,476,474,475,476,474,475,476,475,476,474,475,476,474,475,476,474,474,475,475,476,476,474,474,475,475,476,476,474,475,476,474,474,474,475,475,475,476,476,476,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,475,476,474,474,475,475,476,476,474,474,475,475,476,476,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,475,474,475,476,474,475,476,474,475,476,474,474,475,475,476,476,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,474,475,475,476,476,474,474,474,475,475,475,475,476,476,476,476,476,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,0,0,0,474,475,476,474,475,476,474,475,476,474,475,476,474,474,475,475,476,476,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,474,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,474,475,475,476,476,474,474,475,475,476,476,474,474,475,476,474,475,476,474,475,476,474,474,474,474,474,474,474,474,475,475,475,475,475,475,475,475,476,476,476,476,476,476,476,476,474,474,474,474,474,474,474,474,475,475,475,475,475,475,475,475,476,476,476,476,476,476,476,476,474,475,476,474,475,476,474,474,475,475,476,476,474,474,475,475,476,476,474,474,475,475,476,476,474,475,476,474,475,476,474,475,476,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,474,475,476,476,474,475,476,474,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,474,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,474,475,476,476,476,476,476,476,474,475,476,476,474,475,476,474,475,476,475,476,474,475,476,476,474,475,476,474,475,476,475,476,475,476,476,475,476,475,476,475,476,474,475,476,476,476,476,476,476,474,475,476,476,474,475,476,474,475,476,475,476,474,475,476,476,474,475,476,474,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,476,476,476,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,474,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,474,475,476,476,476,476,476,476,474,475,476,476,474,475,476,474,475,476,475,476,474,475,476,476,474,475,476,474,475,476,475,476,475,476,476,475,476,475,476,475,476,474,475,476,476,476,476,476,476,474,475,476,476,474,475,476,474,475,476,475,476,474,475,476,476,474,475,476,474,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,476,476,476,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,475,476,476,476,476,476,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,476,476,476,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,476,476,476,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,475,476,476,475,476,475,476,475,476,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,472,472,472,472,472,472,485,471,471,485,488,476,482,479,486,487,488,454,483,474,475,476,480,481,482,478,479,486,487,488,454,483,474,475,476,480,481,482,478,479,487,488,483,475,476,481,482,478,479,1504,1505,0,1506,1505,0,1506,1504,0,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1506,1504,1505,1505,1505,1505,1505,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1506,1505,1505,1505,1505,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1505,1505,1505,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1506,1504,1505,1505,1505,1505,1505,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1506,1504,1505,1505,1505,1505,1505,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1506,1504,1505,1505,1506,1504,1505,1506,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1505,1505,1505,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1505,1504,1505,1505,1505,1505,1505,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1505,1505,1505,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1505,1505,1505,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,1504,1505,1505,1504,1505,1504,1505,1504,1505,480,481,482,480,481,482,0,0,0,482,480,481,482,480,481,482,481,482,480,481,482,480,480,481,481,482,482,480,480,481,481,482,482,480,481,482,480,480,480,481,481,481,482,482,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,481,482,480,480,481,481,482,482,480,480,481,481,482,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,481,480,481,482,480,481,482,480,481,482,480,480,481,481,482,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,480,481,481,482,482,480,480,480,481,481,481,481,482,482,482,482,482,482,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,480,481,481,482,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,480,481,481,482,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,480,480,480,480,480,480,480,480,481,481,481,481,481,481,481,481,482,482,482,482,482,482,482,482,480,480,480,480,480,480,480,480,481,481,481,481,481,481,481,481,482,482,482,482,482,482,482,482,480,481,482,480,480,481,481,482,482,480,480,481,481,482,482,480,480,481,481,482,482,480,481,482,480,481,482,480,481,482,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,480,481,482,0,0,0,482,480,481,482,480,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,480,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,480,481,482,482,482,482,482,482,480,481,482,482,480,481,482,480,481,482,481,482,480,481,482,482,480,481,482,480,481,482,481,482,481,482,482,481,482,481,482,481,482,480,481,482,482,482,482,482,482,480,481,482,482,480,481,482,480,481,482,481,482,480,481,482,482,480,481,482,480,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,482,482,482,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,480,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,480,481,482,482,482,482,482,482,480,481,482,482,480,481,482,480,481,482,481,482,480,481,482,482,480,481,482,480,481,482,481,482,481,482,482,481,482,481,482,481,482,480,481,482,482,482,482,482,482,480,481,482,482,480,481,482,480,481,482,481,482,480,481,482,482,480,481,482,480,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,482,482,482,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,481,482,482,482,482,482,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,482,482,482,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,482,482,482,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,481,482,482,481,482,481,482,481,482,497,495,495,495,495,495,495,495,498,542,542,0,0,542,504,495,497,497,497,497,498,0,0,0,0,0,0,0,542,0,0,0,0,516,0,497,505,507,508,505,507,508,496,497,495,1507,0,0,0,0,0,0,495,497,0,504,504,547,547,0,0,0,0,0,495,495,0,518,0,0,0,0,0,0,0,0,0,0,0,0,0,0,497,579,0,0,504,0,0,539,539,0,0,0,0,0,0,0,0,495,497,498,0,0,0,0,0,0,516,0,0,0,0,0,0,498,495,496,497,497,518,0,0,495,498,0,0,0,0,0,0,0,0,0,0,496,497,0,0,1507,0,0,0,498,547,546,547,0,0,0,0,0,547,504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,518,0,0,1507,0,0,0,0,0,0,524,497,495,495,495,0,524,542,542,0,0,0,0,0,0,518,527,0,542,546,547,495,496,497,523,1508,499,1509,499,542,546,547,542,546,547,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,526,527,540,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,498,498,541,500,500,501,501,559,560,561,502,502,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,513,513,514,514,515,515,542,542,516,516,517,517,518,518,562,537,555,543,563,564,499,499,495,495,523,544,544,576,565,545,566,546,546,1517,547,547,594,572,548,556,557,549,550,551,552,496,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,498,541,500,500,501,501,559,560,561,502,502,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,513,513,514,514,515,515,542,516,516,517,517,518,518,562,537,555,543,563,564,499,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,499,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,540,542,495,544,546,547,496,497,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,499,523,499,542,546,547,1511,540,499,524,1511,495,496,497,495,496,497,495,496,497,495,496,497,495,496,497,495,496,497,495,496,497,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,510,513,568,526,527,528,529,530,531,534,535,0,557,561,561,0,539,540,498,541,500,501,502,503,504,505,506,507,508,509,510,511,512,513,542,516,517,518,537,543,499,495,523,544,545,546,547,548,549,550,551,552,496,553,554,497,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,540,498,541,500,501,502,503,504,505,506,507,508,509,510,511,512,513,542,516,517,518,537,543,499,495,523,544,545,546,547,548,549,550,551,552,496,553,554,497,540,498,541,500,501,502,503,504,505,506,507,508,509,510,511,512,513,542,516,517,518,537,543,499,495,523,544,545,546,547,548,549,550,551,552,496,553,554,497,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,554,495,496,497,503,505,507,508,513,495,496,497,498,500,501,502,503,505,507,508,510,511,514,515,518,562,537,1517,594,572,1518,1519,1520,1521,1522,1523,1507,539,553,534,1525,541,559,560,561,555,495,496,497,523,545,548,556,557,549,550,551,553,559,559,499,498,499,526,527,558,528,530,498,541,500,501,559,560,561,503,505,506,507,508,509,510,511,512,513,514,515,517,518,562,537,555,563,564,499,523,565,545,566,548,556,557,549,550,567,531,568,1508,499,1509,499,1520,564,564,495,496,497,502,561,503,1521,1521,503,552,535,499,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,0,535,535,554,542,546,547,540,498,542,495,544,546,547,496,497,540,542,495,544,546,547,496,497,499,523,499,495,496,497,501,535,535,577,540,498,542,495,544,546,547,496,497,540,498,542,495,544,546,547,496,497,495,496,497,0,0,502,503,0,0,0,513,0,503,517,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,526,517,523,553,499,498,500,501,559,560,561,503,504,505,506,507,508,509,510,511,512,513,542,516,517,518,562,537,499,495,495,495,495,495,545,546,547,572,548,549,550,551,496,496,496,496,496,497,497,497,497,497,499,1508,499,543,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,499,499,495,523,544,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,495,496,497,495,496,497,495,496,497,498,500,501,502,503,505,507,508,510,511,514,515,518,562,537,1517,594,572,1518,1519,1520,1521,1522,1523,1507,539,553,534,1525,497,495,496,497,497,496,497,498,512,516,517,499,504,504,504,504,504,504,504,504,526,527,558,528,530,498,541,500,501,559,560,561,503,505,506,507,508,509,510,511,512,513,514,515,517,518,562,537,555,543,563,564,499,523,576,565,545,566,548,556,557,549,550,552,577,567,531,554,568,561,560,500,498,500,501,502,503,505,507,508,510,511,514,515,518,562,537,1517,594,572,1518,1519,1520,1521,1522,1523,1507,539,553,534,1525,500,501,502,503,505,506,507,508,509,510,511,512,513,514,515,517,499,500,501,502,503,505,506,507,508,509,510,511,512,513,514,515,517,499,540,542,495,544,546,547,496,497,554,500,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,541,559,560,561,566,577,540,542,495,544,546,547,496,497,508,542,546,547,542,546,547,542,546,547,534,498,504,516,518,507,579,495,496,497,505,507,495,496,497,495,496,497,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,498,541,500,500,501,501,559,560,561,502,502,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,513,513,514,514,515,515,542,516,516,517,517,518,518,562,537,555,543,563,564,499,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,542,546,547,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,542,546,547,553,495,496,497,542,546,547,537,495,496,497,502,542,546,547,500,537,555,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,500,1511,504,537,539,1522,541,576,543,576,576,576,526,541,540,576,552,554,543,499,523,499,524,539,539,526,510,497,539,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,579,577,539,1524,499,495,496,497,526,499,1517,1523,539,507,526,510,495,496,497,1520,499,535,559,537,1521,1521,552,0,0,0,0,0,0,0,527,530,1508,499,1508,496,497,1511,539,539,0,0,0,0,0,0,0,505,507,505,507,523,545,548,556,557,549,550,551,553,498,504,516,518,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,499,523,495,496,497,1510,1512,1513,1514,1515,1516,523,579,542,546,547,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,495,496,497,505,507,508,505,507,508,567,505,507,508,523,545,548,556,557,549,550,551,553,506,509,1524,576,552,554,535,535,1508,543,499,576,552,554,502,560,537,495,496,497,495,496,497,495,496,497,534,540,498,541,500,501,502,503,504,505,506,507,508,509,510,511,512,513,542,516,517,518,537,543,499,495,523,544,545,546,547,548,549,550,551,552,496,553,554,497,495,496,497,541,559,560,561,553,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,498,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,499,499,499,495,496,497,499,526,527,540,1510,1509,1511,558,528,1512,529,524,535,579,1513,1514,1515,1516,530,498,541,500,501,559,560,561,502,503,504,505,506,507,508,509,510,511,512,513,514,515,542,516,517,518,562,537,555,543,563,564,499,495,523,544,576,565,545,566,546,1517,547,594,572,548,556,557,549,550,551,552,496,1518,1519,1520,1521,1522,1523,577,567,1507,539,531,553,534,554,497,1524,568,1525,579,0,0,0,0,1525,498,504,516,518,498,504,516,518,498,504,516,518,1508,543,567,576,552,554,554,541,559,560,561,560,561,0,539,523,545,548,556,557,549,550,551,553,1526,1526,1527,1527,1526,1527,1527,1528,1529,1530,1531,1531,1530,1532,1533,1532,1533,1534,0,0,498,0,0,504,498,0,0,0,504,504,0,0,504,498,0,0,0,498,498,0,0,0,498,0,0,0,527,1508,499,499,499,513,561,561,503,505,507,508,513,541,559,560,561,559,559,499,1508,499,502,561,503,503,499,499,499,503,499,499,1508,561,560,541,559,560,561,508,507,505,507,541,541,499,499,499,499,507,499,559,527,1508,1508,505,507,505,507,499,505,507,508,505,507,508,505,507,508,1508,502,560,541,559,560,561,499,1508,541,559,560,561,560,561,1528,1529,1530,1531,1531,1530,0,0,0,0,0,601,602,603,601,601,602,602,604,603,601,601,602,602,604,603,601,602,604,601,602,601,602,603,601,602,604,603,601,602,604,603,601,602,604,601,602,601,602,604,601,602,604,601,602,601,603,601,602,603,601,602,604,601,602,601,602,601,602,601,602,601,602,601,602,603,601,602,603,601,602,604,601,603,601,602,604,601,601,602,601,602,601,602,601,602,602,603,601,602,604,603,601,601,602,602,604,603,601,602,604,603,601,602,604,601,602,603,601,602,604,601,602,601,602,601,602,601,602,601,602,601,602,601,602,601,602,601,602,604,601,602,604,603,601,602,604,603,601,602,604,603,601,602,604,601,602,601,602,603,601,602,604,442,442,442,1154,498,0,0,0,1397,0,0,0,1397,0,0,0,0,0,0,0,442,0,0,442,1397,0,0,0,0,442,442,1414,504,0,0,0,1138,1147,1414,442,0,442,0,0,0,442,0,442,1146,1147,498,0,0,0,0,0,0,0,425,442,0,0,442,0,0,0,0,0,442,442,1397,1106,1146,1147,1148,1152,1414,0,0,0,0,0,0,1141,1397,442,0,0,0,1151,1151,442,0,1405,0,0,442,0,1397,442,1397,442,0,0,94,1397,1417,0,0,0,0,442,442,425,425,425,425,0,0,1448,1448,1397,0,0,442,0,0,0,0,0,0,0,0,0,0,0,1405,0,442,1408,0,0,0,0,0,0,442,1397,425,1405,442,0,0,0,442,442,0,0,0,0,0,1397,504,504,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,1103,0,69,69,0,68,69,1150,0,1146,1147,1148,1152,1146,1147,1148,1152,0,0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,1160,0,1397,1397,442,442,1397,0,0,1397,1153,996,0,0,442,1141,1408,1408,492,442,0,0,0,0,0,0,0,0,362,1417,1149,996,1462,0,442,0,0,0,0,0,0,0,0,0,1469,442,0,442,442,442,442,442,442,442,442,442,442,442,442,442,0,0,442,442,442,442,442,442,69,69,492,1106,442,445,427,427,425,1149,425,425,427,248,504,0,1160,442,442,68,498,0,0,0,0,0,0,442,442,0,445,0,442,425,94,0,0,1397,0,498,0,442,442,442,1397,0,442,442,1397,1397,0,442,442,1397,1103,1155,0,0,1165,1165,0,0,1141,1150,425,1397,1397,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,1397,1397,442,442,211,0,0,0,1126,498,0,706,0,425,427,445,362,68,0,442,442,442,0,0,0,442,442,0,1138,442,706,0,442,0,0,248,0,442,0,0,0,70,70,69,69,442,70,70,69,69,1405,498,442,1417,1397,0,0,1138,442,0,0,0,442,442,442,442,442,442,0,0,0,0,0,0,0,0,0,0,0,1154,0,0,94,0,1126,0,0,0,0,0,442,492,492,1106,442,445,427,427,425,1149,425,425,427,23,1151,1397,1151,442,1397,211,23,0,0,0,0,0,0,442,1397,425,442,60,0,0,442,442,442,425,442,1148,1152,1148,1152,1152,0,0,0,0,0,0,0,425,68,70,70,0,0,69,0,0,442,1465,1146,1147,1148,0,0,1397,442,0,1470,0,0,0,442,442,0,0,0,1397,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,442,0,0,0,0,0,0,0,1138,442,442,442,69,69,442,0,0,0,0,0,0,0,1397,0,0,1153,996,442,442,442,1397,1397,442,442,442,442,442,442,442,442,425,0,0,0,0,0,0,0,0,0,1155,1155,442,472,472,442,472,472,442,425,442,0,472,472,1397,1397,527,1441,1441,1493,1494,1441,71,58,59,72,1145,1145,1145,1104,1508,499,71,58,59,72,71,58,59,72,1042,1044,24,362,0,0,362,709,24,24,24,24,1145,707,100,168,428,1183,1184,1186,499,499,71,58,59,72,0,1145,1139,513,73,1438,1186,426,1462,141,1184,1185,196,208,196,208,196,208,1119,561,561,59,72,1404,362,417,409,1493,192,202,1159,651,653,24,1422,1107,1040,1042,1044,503,505,507,508,513,362,1119,168,569,756,1007,1019,1020,1051,1052,1113,541,559,560,561,1183,1184,1185,1186,559,559,499,1119,1042,1044,574,0,24,0,0,1448,1119,0,976,28,362,1508,499,202,1495,1495,0,502,485,1145,561,503,503,1145,499,74,0,499,499,1014,1454,407,408,1409,0,0,0,1422,503,707,709,651,653,651,651,651,653,651,653,1119,1145,1145,1145,1145,1145,499,1042,1044,1158,1042,1044,1158,1183,1184,1185,1186,1119,499,1094,1107,1107,450,707,1508,1535,1471,561,196,208,560,642,426,428,1145,1536,1537,1536,1537,362,24,1134,1019,1020,1051,1052,1113,196,208,541,559,560,561,1183,1184,1185,1186,756,569,1140,423,450,0,508,1184,1186,1119,1119,71,58,59,72,71,71,58,59,72,1044,0,0,0,1441,1441,362,507,1493,1494,505,507,1186,1119,24,24,1470,60,168,569,1463,74,1463,362,362,74,73,1496,1496,651,653,1145,15,15,1463,1139,1104,1461,1134,1145,541,471,1412,1145,168,1412,541,499,499,471,1412,1145,168,1412,1119,362,73,1438,1454,651,707,709,58,1183,1184,1185,1186,499,0,499,569,485,507,28,1145,1145,409,14,499,1131,450,1472,559,1401,1145,1409,1119,450,1145,527,1508,1508,1119,1156,1119,1422,196,208,1493,1494,505,507,505,507,1042,24,24,24,24,24,0,499,1441,1493,1494,1493,1494,1538,145,1493,1119,1119,1119,0,0,0,1139,22,1473,362,71,58,0,362,28,574,22,1172,709,709,1019,1020,1104,24,24,1438,1462,1462,362,1462,1493,1494,1538,73,505,507,508,505,507,508,505,507,508,0,1182,1145,1035,1156,1508,502,145,560,1051,1052,0,0,0,1105,1183,1184,1185,1186,0,1535,569,165,1113,1185,1113,1113,1051,1040,1035,1158,1052,574,1035,574,1035,1119,196,208,1139,0,0,1019,1020,1051,1052,1113,196,208,541,559,560,561,1183,1184,1185,1186,756,22,1119,362,24,499,0,362,1105,1469,1508,569,709,1019,1020,1051,1052,1113,541,559,560,561,1183,1184,1185,1186,756,1007,196,208,560,561,145,488,476,482,479,0,0,0,100,1140,1401,1402,1403,1404,1119,1493,1494,28,1017,486,487,488,454,483,474,475,476,480,481,482,478,479,486,487,488,454,483,474,475,476,480,481,482,478,479,487,488,483,475,476,481,482,478,479,1183,1184,1185,1186,1444,1445,1446,1539,1540,1541,1542,1539,1540,1542,1539,1540,1541,1542,1541,1542,1539,1540,1541,1543,1544,1543,1544,1545,1528,1529,1530,1531,1531,1530,1546,1546,1547,1546,1547,1548,1549,611,0,0,0,0,0,0,611,0,0,0,0,0,0,611,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,606,607,608,609,610,611,612,613,614,615,616,606,607,608,609,610,611,612,613,614,615,616,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,610,617,606,607,608,609,610,611,612,613,614,615,616,608,608,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,613,614,615,616,607,609,617,606,607,608,609,610,611,612,613,614,615,616,617,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,610,610,607,607,607,607,607,607,606,607,608,613,614,617,610,612,613,614,615,616,617,615,610,616,617,613,606,608,609,616,609,612,615,615,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,617,606,607,608,609,610,611,612,613,614,615,616,610,614,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,265,386,619,264,620,266,265,386,619,264,620,266,265,386,619,264,620,266,386,265,386,266,265,386,266,265,386,619,264,620,266,265,386,619,264,620,266,265,386,266,265,386,266,619,264,620,266,619,264,620,266,264,620,0,1474,266,1474,265,265,386,619,264,620,266,386,265,386,266,265,265,386,619,619,264,620,266,266,619,265,386,619,264,620,266,265,386,619,264,620,266,264,620,265,386,619,264,620,266,265,386,619,264,620,266,386,265,386,266,265,1474,386,386,265,619,264,620,266,265,386,266,265,386,619,264,620,266,265,386,619,264,620,266,265,386,619,264,620,266,265,386,619,264,620,266,0,53,50,51,44,0,0,44,0,0,0,0,0,0,0,0,0,0,53,50,51,44,0,52,52,52,52,52,52,0,0,0,0,0,0,0,0,0,52,52,52,52,52,52,52,52,52,0,53,50,51,44,0,0,0,53,50,51,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,50,51,660,44,643,55,645,0,0,1550,0,53,50,51,660,44,643,55,645,0,0,0,53,50,51,44,0,0,0,0,0,0,0,0,0,0,0,0,0,52,643,55,645,0,0,0,53,50,51,44,0,0,0,0,0,621,24,622,623,624,30,625,190,29,0,0,0,0,24,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,622,629,630,631,632,623,623,633,624,624,52,52,634,634,635,30,30,636,625,625,637,190,190,44,638,639,640,641,642,627,643,29,29,644,55,55,645,646,647,648,24,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,622,629,630,631,632,623,623,633,624,624,52,634,635,30,30,636,625,625,637,190,190,44,638,639,640,641,642,627,643,29,29,644,55,645,646,647,648,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,634,55,24,622,623,624,30,625,190,29,24,622,623,624,30,625,190,29,627,627,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,628,45,628,629,630,631,632,633,634,635,636,637,44,638,639,640,641,642,627,643,644,55,645,646,647,648,659,651,652,653,649,626,658,622,623,624,30,625,190,29,45,628,629,630,631,632,633,634,635,636,637,44,638,639,640,641,642,627,643,644,55,645,646,647,648,31,45,628,629,630,631,632,633,634,635,636,637,44,638,639,640,641,642,627,643,644,55,645,646,647,648,24,622,623,624,30,625,190,29,634,644,45,45,24,623,624,30,625,190,29,621,623,624,30,625,190,640,643,29,642,654,655,656,53,50,51,24,47,657,191,621,45,31,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,24,31,31,24,31,626,658,659,652,622,623,624,625,52,634,55,634,55,634,634,621,0,0,0,52,634,55,52,634,55,651,652,653,649,635,30,625,190,29,646,651,649,635,30,636,637,29,646,647,651,649,30,29,651,652,653,649,635,30,636,625,637,190,29,646,647,651,652,653,649,30,625,190,29,635,646,24,45,628,622,629,630,632,623,633,624,52,52,634,634,635,30,636,625,637,190,44,638,639,640,643,29,644,55,645,646,647,648,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,643,643,643,29,29,644,55,645,646,647,648,29,1535,631,1551,631,641,642,627,622,621,623,624,30,625,190,640,643,29,642,626,658,659,621,622,623,624,659,624,1536,1552,1537,651,652,653,30,625,190,1536,1552,1537,651,652,653,30,625,190,634,55,626,658,659,621,622,623,624,641,621,621,24,621,622,623,624,30,625,190,29,1553,621,621,621,621,634,55,0,0,0,52,630,649,635,30,29,644,646,658,45,623,624,30,625,190,659,624,30,625,190,640,640,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,24,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,622,629,630,631,632,623,623,633,624,624,52,634,635,30,30,636,625,625,637,190,190,44,638,639,640,641,642,627,643,29,29,644,55,645,646,647,648,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,654,655,656,47,657,191,46,623,624,24,622,623,624,30,625,190,29,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,24,31,628,629,630,632,633,635,636,637,44,638,639,644,626,658,659,649,628,632,628,632,628,632,626,658,659,621,622,623,624,635,636,637,644,646,647,651,652,653,649,30,625,190,29,621,633,633,633,626,658,659,622,623,624,0,0,0,0,0,0,0,660,622,629,623,624,635,30,625,637,190,29,644,645,646,647,648,651,649,30,29,654,655,47,657,191,621,46,628,622,629,630,632,633,635,636,637,638,639,29,644,646,647,648,29,654,655,656,47,657,191,46,45,634,634,1554,1554,658,623,0,52,658,623,623,623,640,634,634,24,622,623,29,24,622,623,624,30,625,190,29,24,622,623,624,30,625,190,29,24,622,623,624,30,625,190,29,1554,24,622,623,624,30,625,190,29,1554,24,622,623,624,30,625,190,29,24,622,623,624,30,625,190,29,0,621,621,658,659,623,624,24,0,24,24,622,623,624,30,625,190,29,622,623,624,30,625,190,29,29,29,45,654,655,656,47,657,191,46,52,0,0,0,24,1535,45,628,629,630,631,632,633,634,635,636,637,44,638,639,640,641,642,627,643,644,55,645,646,647,648,52,634,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,0,0,0,0,0,654,655,656,53,50,51,47,657,191,621,45,45,46,660,628,628,622,629,629,630,630,631,632,632,623,633,633,624,52,634,635,635,30,636,636,625,637,637,190,44,44,638,638,639,639,640,641,642,627,627,643,29,644,644,55,645,646,647,648,1555,24,45,622,623,624,30,625,190,29,24,1556,45,628,622,629,630,632,623,633,624,635,30,636,625,637,190,44,638,639,29,644,1556,654,655,656,53,50,51,47,657,191,621,45,46,660,628,622,629,630,631,632,623,633,624,52,634,635,30,636,625,637,190,44,638,639,640,641,642,627,643,29,644,55,645,646,647,648,0,660,633,633,633,644,644,649,29,644,649,29,644,649,644,649,29,640,1557,1558,1559,1560,1557,1559,1561,1562,1558,1563,1564,1565,1566,1567,1568,1569,1570,1564,1565,1566,1562,1561,1563,0,0,0,0,0,115,115,115,115,115,115,115,0,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,115,664,113,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,113,673,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,115,115,115,115,115,115,115,115,115,664,664,664,664,113,113,113,113,115,0,673,673,673,673,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,115,115,115,115,115,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,651,653,24,24,651,653,651,651,651,653,651,653,1535,642,1536,1537,1536,1537,24,24,24,651,653,651,24,24,24,24,24,0,24,24,1535,24,0,605,0,0,0,0,605,0,0,0,0,0,0,0,0,0,0,0,693,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,680,680,680,1571,681,682,683,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,689,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,680,680,680,692,691,681,682,683,684,685,680,684,685,686,687,688,689,690,691,692,693,684,685,686,687,688,689,690,691,692,693,687,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,690,688,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,681,682,683,605,684,685,686,687,688,689,690,691,692,693,680,684,685,686,0,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,0,0,696,695,696,695,696,695,696,695,696,695,696,695,696,695,695,696,696,695,696,695,696,695,696,695,696,695,696,695,696,695,696,695,696,695,696,695,699,699,0,699,0,0,699,699,699,699,699,699,699,0,699,0,0,699,699,699,200,698,699,699,700,700,701,697,697,200,698,699,700,701,697,200,698,699,700,701,697,699,700,697,697,699,699,200,698,699,700,701,697,200,698,699,700,701,697,698,0,699,700,697,699,700,697,699,700,697,0,698,701,0,200,701,200,701,200,698,699,700,701,697,699,699,700,697,699,700,697,699,700,697,699,700,697,0,0,699,700,697,200,698,699,700,701,697,698,701,699,700,697,200,0,699,700,697,699,699,699,200,200,698,699,700,701,697,200,698,699,700,701,697,200,698,699,700,701,697,200,698,699,700,701,697,699,200,200,698,699,700,701,697,699,699,699,0,0,0,0,0,0,0,0,0,0,0,699,0,0,699,700,697,200,698,699,700,701,697,200,698,699,700,701,697,200,698,699,700,701,697,200,698,699,700,701,697,0,698,708,708,0,0,0,0,0,0,0,0,0,708,708,708,704,705,0,706,0,706,0,0,0,0,0,0,704,705,708,717,717,717,702,569,703,704,705,706,707,708,709,709,722,710,702,702,715,716,569,569,703,703,704,704,705,705,705,718,717,717,706,706,707,707,708,708,709,709,711,722,710,702,702,715,716,569,569,703,703,704,704,705,705,718,717,706,706,707,707,708,708,709,709,711,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,705,717,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,707,717,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,710,711,0,702,715,716,569,704,705,717,706,707,708,709,702,569,703,704,705,706,707,708,709,702,715,716,569,704,705,717,706,707,708,709,702,715,716,569,704,705,717,706,707,708,709,702,569,703,704,705,706,707,708,709,705,569,703,718,706,707,709,569,710,702,715,716,569,703,704,706,707,709,711,702,703,703,708,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,717,705,717,705,717,705,717,705,717,708,0,1572,706,707,709,707,709,702,569,703,704,705,706,707,708,709,702,569,704,705,706,707,708,709,702,569,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,702,715,716,569,704,705,718,717,706,707,708,709,707,722,710,702,715,716,569,703,704,705,718,717,706,706,706,707,708,709,711,569,703,718,706,707,709,702,569,707,708,709,710,702,715,716,569,703,704,706,707,709,711,569,703,718,706,707,709,702,569,703,707,709,702,569,703,707,709,705,717,1572,706,707,709,705,705,705,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,705,717,569,717,717,717,704,705,706,708,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,722,710,702,702,715,716,569,569,703,703,704,704,705,705,718,717,706,706,707,707,708,708,709,709,711,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,717,702,569,703,704,705,706,707,708,709,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,717,569,717,717,702,569,703,704,705,706,707,708,709,569,569,569,702,569,704,705,706,707,708,709,569,707,709,722,703,704,569,718,705,702,702,715,569,718,569,569,718,569,704,705,706,708,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,718,722,717,709,715,709,708,702,569,703,703,704,705,706,707,708,709,569,718,569,702,715,716,569,704,705,717,706,707,708,709,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,702,569,703,704,705,706,707,708,709,702,569,703,704,705,706,707,708,709,722,710,702,715,716,569,703,704,705,718,717,706,707,708,709,711,1572,722,706,707,709,704,705,706,708,704,705,706,708,704,705,706,708,569,718,709,569,569,569,569,1573,1574,1574,1575,1575,1573,492,492,492,492,492,492,492,492,492,492,723,0,492,492,492,492,492,492,0,0,492,492,492,0,492,723,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,0,492,492,492,492,492,492,492,492,492,492,492,492,492,1576,1577,492,492,723,723,1576,1577,492,492,723,1576,1577,492,723,492,492,492,492,492,492,492,492,492,492,492,492,1576,1577,492,723,1576,1577,492,723,492,492,492,492,492,492,492,492,1576,1577,492,723,723,492,723,723,492,492,492,492,492,492,492,723,723,1576,1577,492,492,492,492,723,492,492,492,492,492,492,492,1576,492,723,492,1576,1577,492,723,1576,1577,492,492,723,1576,1577,492,723,1576,1577,492,723,492,1576,1577,492,723,492,1577,1578,492,492,492,492,492,492,492,492,492,492,492,1576,1577,1578,723,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,723,1576,1577,492,723,1576,1577,492,723,1576,1577,492,723,492,492,1576,1577,492,723,492,492,492,492,492,492,492,492,1539,1540,1541,1542,1539,1540,1542,1539,1540,1541,1542,1541,1542,1539,1540,1541,0,0,0,0,0,1579,1579,1579,0,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,724,725,588,588,724,725,726,588,1579,725,724,725,726,588,726,724,725,588,726,726,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,724,725,726,588,588,724,725,726,588,0,0,0,1580,728,728,728,728,728,728,728,728,0,1580,728,728,728,728,728,728,728,728,728,728,728,0,0,0,0,729,730,729,729,593,730,729,729,593,730,729,593,729,729,730,729,593,730,729,593,593,730,729,729,729,729,729,729,729,593,730,729,593,729,729,729,729,729,729,730,729,593,729,593,729,729,729,729,730,729,593,730,729,729,593,730,729,593,730,729,593,729,730,729,593,729,729,729,729,729,729,729,729,729,729,729,729,730,729,593,730,729,593,730,729,593,729,729,730,729,593,729,0,0,587,587,587,587,587,587,587,731,731,731,731,0,0,0,0,739,0,0,397,575,575,0,0,0,0,0,397,397,397,0,739,575,0,731,731,731,731,731,731,731,731,731,731,731,731,575,575,737,737,731,731,731,731,731,731,731,731,731,731,731,731,397,0,0,0,0,733,736,587,732,734,734,735,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,734,735,731,732,587,735,587,587,587,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,738,736,587,732,734,735,731,737,738,739,587,732,734,735,731,737,738,739,587,732,734,735,731,737,738,739,734,587,587,735,587,587,733,736,587,732,734,735,741,731,737,738,739,397,587,734,735,734,735,731,731,734,735,734,735,587,587,732,734,735,741,741,731,737,738,739,397,397,732,733,736,587,587,587,587,587,587,587,587,587,587,587,732,734,734,735,741,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,737,738,739,397,587,731,734,735,587,735,587,1581,587,734,735,733,732,741,397,587,587,587,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,731,737,737,735,738,731,737,732,733,587,732,734,587,587,738,741,397,587,587,733,0,587,732,734,735,731,737,738,739,741,397,733,736,587,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,733,736,587,732,734,735,741,731,737,738,739,397,587,587,733,736,587,732,734,735,741,731,737,738,739,397,738,1582,1582,1582,1583,0,0,532,532,532,570,532,532,570,532,570,532,532,532,570,532,570,532,532,532,532,532,532,532,570,532,570,532,532,532,532,532,532,570,532,570,570,532,532,532,532,532,532,532,532,570,532,532,570,532,570,532,570,532,532,570,532,532,532,532,532,532,532,532,532,532,532,532,532,532,570,532,570,532,570,532,532,570,570,532,570,0,0,0,0,0,0,0,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,747,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,746,747,748,749,0,0,750,750,751,750,751,750,751,750,751,750,751,750,750,750,750,750,751,751,751,750,751,750,750,750,750,751,751,751,750,750,750,751,750,751,750,751,750,751,750,750,750,750,751,750,751,750,751,750,751,750,750,751,751,750,751,750,750,750,750,751,750,750,751,750,751,750,751,750,750,0,0,752,752,753,752,753,752,753,752,753,752,753,752,752,752,752,753,753,753,752,753,752,752,752,752,753,753,753,752,752,752,753,752,753,752,753,752,753,752,752,752,753,752,753,752,753,752,752,753,753,752,753,752,752,752,752,753,752,752,753,752,753,752,753,752,0,0,0,0,754,754,1584,1585,755,754,1584,1585,755,754,1584,1585,755,754,754,754,1584,1585,755,754,1584,1585,755,755,754,754,754,755,754,1584,1585,755,754,754,754,754,754,754,1584,1585,755,755,754,754,754,1584,1585,755,754,1584,1585,755,754,1584,1585,755,754,1584,1585,755,754,1584,1585,755,755,754,754,1584,1585,755,754,1584,1585,755,754,1584,1585,755,754,1584,1585,755,0,0,0,0,756,996,492,756,0,0,996,492,0,0,211,706,0,706,0,0,492,492,211,0,0,0,0,996,709,756,756,756,707,756,756,569,756,1007,574,756,976,756,707,709,756,707,756,756,756,756,756,569,756,756,756,756,756,569,707,709,569,574,709,709,569,574,574,756,756,756,756,756,569,709,756,1007,1539,1540,1541,1542,1539,1540,1542,1539,1540,1541,1542,1541,1542,1539,1540,1541,0,0,0,0,0,0,740,757,758,759,740,740,760,761,757,757,758,758,759,759,740,740,760,761,757,757,758,758,759,759,740,760,761,757,758,759,740,757,758,759,740,757,758,759,740,760,761,757,758,759,740,760,761,757,758,759,740,760,740,760,761,757,740,757,758,759,740,760,761,757,740,760,761,757,740,757,758,759,740,757,758,759,761,740,760,761,757,758,759,740,760,761,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,760,761,757,758,759,740,740,760,761,757,758,759,740,757,758,759,740,740,757,757,740,760,761,757,758,759,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,760,757,757,740,760,761,757,758,759,740,740,760,761,757,757,758,758,759,759,740,760,761,757,758,759,740,760,761,757,758,759,740,757,758,759,740,760,761,757,758,759,758,740,757,758,759,758,740,740,740,757,758,759,761,761,761,757,760,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,757,758,759,740,740,757,758,759,740,760,761,757,740,760,761,757,758,759,740,760,761,757,758,759,740,760,761,757,758,759,740,757,758,759,740,757,758,759,740,760,761,757,758,759,763,1586,0,1586,763,763,0,0,0,1586,0,0,0,745,763,763,763,745,762,763,763,764,2,765,745,762,763,764,2,765,745,762,763,764,2,765,763,763,745,762,763,764,2,765,745,762,763,764,2,765,762,763,763,763,762,763,764,2,765,2,2,745,762,763,764,2,765,763,763,763,763,763,1586,763,745,762,763,764,2,765,762,763,764,2,765,763,763,763,763,763,745,762,763,764,2,765,745,762,763,764,2,765,745,762,763,764,2,765,745,762,763,764,2,765,763,745,762,763,764,2,765,763,763,763,1586,763,763,745,762,763,764,2,765,745,762,763,764,2,765,745,762,763,764,2,765,745,762,763,764,2,765,762,771,772,778,0,779,779,0,0,0,771,772,778,0,766,787,768,769,0,187,779,779,779,776,777,775,779,776,777,775,775,768,769,0,770,0,779,0,0,0,0,187,0,0,0,0,0,0,187,771,772,770,0,0,0,0,0,775,771,772,779,779,779,766,766,766,766,780,185,786,781,788,787,775,775,776,776,777,777,770,770,778,778,766,767,767,187,187,782,768,768,771,772,772,769,769,184,773,779,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,767,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,770,767,768,771,772,769,184,770,767,768,771,772,769,184,770,767,768,771,772,769,184,766,773,780,185,786,774,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,774,774,774,775,776,777,770,778,767,187,768,772,769,779,767,781,775,776,777,770,778,767,187,768,772,769,779,775,776,777,770,778,767,187,768,772,769,779,185,781,775,775,776,776,777,777,770,766,767,187,187,782,768,771,772,772,769,184,773,779,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,187,187,187,782,768,768,768,768,768,771,771,771,771,771,772,769,769,769,769,769,769,184,773,773,779,766,773,767,185,185,185,770,766,185,782,185,766,766,766,766,766,770,782,773,773,773,766,766,766,782,782,767,782,781,775,776,777,187,779,786,774,787,782,185,766,781,185,780,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,774,773,773,766,766,766,766,766,766,773,780,781,184,185,781,787,767,184,781,781,781,786,774,782,185,781,775,776,777,187,779,766,766,766,766,774,786,788,787,185,766,185,771,184,187,770,767,768,771,772,769,184,775,776,777,187,772,779,766,766,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,781,780,185,786,781,788,787,775,776,777,770,778,766,767,187,782,768,771,772,769,184,773,779,774,766,766,781,781,1587,1587,1588,1587,1587,1588,1589,1589,1589,1590,1590,1590,1591,1591,1592,1593,1592,1594,1593,1593,1591,1591,1594,1595,1595,1596,1595,1595,1596,1595,1596,0,0,0,0,0,0,0,0,596,790,1597,1597,0,0,0,0,0,0,1598,596,790,0,0,1597,789,583,1599,1600,789,789,596,792,595,791,1601,790,197,197,585,583,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,197,583,0,1600,1600,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,1602,197,197,197,583,585,583,791,789,596,792,595,791,1601,790,197,585,583,794,792,595,1598,789,595,595,595,197,197,1598,197,197,197,789,596,792,595,791,1601,790,197,585,583,583,791,585,583,583,197,789,789,197,789,789,595,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,583,595,595,595,595,792,595,595,794,789,792,595,585,1597,1601,583,595,595,595,595,595,595,595,595,595,595,1598,583,1598,0,197,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,789,596,792,595,791,1601,790,197,585,583,585,805,805,820,818,0,858,851,0,0,0,0,0,914,889,720,805,823,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,0,0,0,0,0,0,0,0,0,0,0,0,0,0,885,0,930,525,865,0,525,0,0,0,0,0,0,0,0,0,805,799,802,806,802,806,0,0,0,0,822,859,859,831,0,0,0,0,0,864,899,0,0,0,912,0,911,0,817,914,816,816,889,822,816,855,816,855,816,816,855,1603,847,847,573,862,720,720,720,720,720,0,858,0,817,817,0,0,720,720,720,720,851,0,0,0,0,0,0,0,0,0,0,0,913,720,720,720,720,720,720,0,799,0,824,0,864,862,744,744,744,744,744,744,744,744,744,744,899,0,823,0,805,888,908,915,851,851,573,850,802,802,195,884,0,0,0,0,0,0,847,847,0,852,885,909,847,847,1604,1605,1606,851,851,824,575,575,860,831,0,802,802,0,818,818,859,909,599,0,799,828,860,851,864,909,851,819,913,817,817,817,817,817,817,0,0,0,820,573,0,0,0,0,0,0,824,575,0,0,0,0,0,914,0,913,720,720,720,720,720,720,720,720,720,720,720,720,805,806,819,820,0,0,0,0,0,854,863,863,0,0,0,0,912,0,911,0,859,847,522,818,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,0,1607,1607,802,806,0,930,525,865,525,0,0,0,0,0,909,909,0,0,914,0,0,0,0,0,914,0,0,0,916,0,0,0,0,0,0,0,862,744,744,744,744,744,744,744,744,744,744,744,744,0,0,0,0,0,0,0,0,828,888,908,916,915,817,817,817,720,0,858,0,0,581,0,865,0,818,896,806,0,865,0,0,0,0,0,0,0,0,930,525,896,525,0,0,0,0,909,575,575,885,802,862,798,744,744,798,744,744,744,744,744,744,581,0,909,909,744,744,744,744,909,799,802,799,915,852,899,0,0,0,0,0,0,0,0,828,888,908,916,915,854,863,856,817,847,720,801,803,804,727,837,837,837,799,805,802,806,820,826,837,835,814,843,742,815,815,799,799,816,816,817,817,818,818,819,819,820,820,821,821,575,575,822,822,823,823,824,824,825,825,826,826,522,521,930,827,827,533,1608,906,828,829,907,807,720,720,809,932,900,901,525,573,830,801,831,831,803,832,832,805,805,833,834,804,835,835,727,836,837,838,838,839,840,840,841,811,842,842,843,843,844,845,798,798,846,808,847,847,848,849,850,850,851,851,852,852,853,853,744,744,854,854,802,802,806,806,855,855,856,856,857,857,858,858,859,859,860,860,861,581,581,862,862,863,863,864,864,865,865,866,866,867,868,814,814,869,869,870,796,871,871,872,519,873,873,874,784,797,875,875,876,800,877,877,878,879,222,213,213,742,742,880,880,881,882,883,911,912,195,195,884,884,913,885,885,220,914,221,902,586,599,886,886,915,887,888,908,908,916,903,909,909,889,889,904,890,890,891,892,893,893,894,895,896,721,897,897,898,783,899,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,1603,1609,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,838,840,842,843,798,847,850,851,852,853,744,802,806,855,856,857,858,859,860,581,862,863,864,865,866,869,871,873,875,877,742,195,884,885,886,889,890,893,897,899,835,868,814,1610,843,742,838,815,835,814,835,814,807,809,807,720,842,521,1603,836,801,803,804,727,839,866,521,799,805,802,806,799,805,802,806,799,805,802,806,799,805,802,806,799,805,802,806,799,805,802,806,799,805,802,806,821,837,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,533,801,803,804,727,830,867,844,213,861,533,840,533,803,727,807,807,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,828,829,720,525,830,831,832,805,833,834,835,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,195,884,885,886,887,888,889,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,828,829,720,525,830,831,832,805,833,834,835,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,195,884,885,886,887,888,889,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,828,829,720,525,830,831,832,805,833,834,835,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,195,884,885,886,887,888,889,890,891,892,893,894,895,896,721,897,898,783,899,799,805,802,806,899,820,811,837,850,816,799,805,802,806,825,840,799,805,802,806,799,805,802,806,827,807,807,807,807,826,866,892,825,521,816,818,819,575,822,824,825,826,900,901,801,831,803,832,805,804,835,727,836,837,838,840,811,798,808,847,850,852,856,857,858,859,860,861,581,862,814,742,221,902,586,903,904,842,850,834,857,846,222,811,842,870,796,872,519,874,784,797,876,800,878,879,882,883,891,892,894,895,721,898,783,720,1608,720,798,815,815,799,805,802,806,835,809,809,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,815,906,907,807,809,870,872,874,876,878,882,883,891,894,895,898,819,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,835,838,840,842,843,798,847,850,851,852,853,744,854,802,806,855,856,857,858,859,860,581,862,863,864,865,866,814,869,871,873,875,877,213,742,880,195,884,885,886,908,909,889,890,893,897,899,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,838,840,842,843,798,847,850,851,852,853,744,802,806,855,856,857,858,859,860,581,862,863,864,865,866,869,871,873,875,877,742,195,884,885,886,889,890,893,897,899,799,805,802,806,0,809,841,849,844,845,848,213,880,881,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,835,837,838,840,842,843,798,847,850,851,852,853,744,854,802,806,855,856,857,858,859,860,581,862,863,864,865,866,814,869,871,519,873,875,877,222,213,742,880,195,884,885,886,908,909,889,890,893,897,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,835,838,840,842,843,798,847,850,851,852,853,744,854,802,806,855,856,857,858,859,860,581,862,863,864,865,866,814,869,871,873,875,877,213,742,880,195,884,885,886,908,909,889,890,893,897,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,720,831,832,805,838,840,842,798,847,850,851,852,853,744,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,899,799,533,805,802,806,903,850,807,815,799,799,799,799,799,816,817,818,819,820,821,575,822,823,824,825,826,827,906,907,807,720,809,525,830,831,832,805,805,805,805,805,833,834,835,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,802,802,802,802,806,806,806,806,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,914,914,599,599,886,915,915,887,888,908,916,916,909,909,889,890,891,892,893,894,895,896,721,897,898,783,899,821,835,842,853,846,222,815,799,816,817,818,819,820,821,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,573,573,573,830,801,801,801,831,831,803,832,805,833,834,804,804,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,798,846,808,847,848,849,850,851,852,853,744,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,796,871,872,519,519,873,874,784,784,797,875,876,800,800,877,878,879,879,222,213,742,880,881,882,883,911,912,195,884,913,885,885,885,220,914,914,221,902,586,599,599,886,915,915,915,915,887,888,908,916,916,916,916,903,909,889,904,890,891,892,892,893,894,895,896,721,721,721,897,898,783,783,899,799,805,802,806,799,805,802,806,799,805,802,806,887,799,805,802,806,887,742,887,816,818,819,575,822,824,825,826,900,901,801,831,803,832,805,804,835,727,836,837,838,840,811,798,808,847,850,852,856,857,858,859,860,861,581,862,814,742,221,902,586,903,904,838,825,801,804,930,220,220,220,908,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,838,840,842,843,798,847,850,851,852,853,744,802,806,855,856,857,858,859,860,581,862,863,864,865,866,869,871,873,875,877,742,195,884,885,886,889,890,893,897,899,900,900,533,801,803,804,727,908,801,804,220,220,220,744,932,932,908,865,799,816,817,818,819,820,821,575,822,823,824,825,826,827,720,831,832,805,838,840,842,843,798,847,850,851,852,853,744,802,806,855,856,857,858,859,860,581,862,863,864,865,866,869,871,873,875,877,742,195,884,885,886,889,890,893,897,899,857,796,519,784,797,800,879,892,721,783,887,887,914,599,915,916,909,799,805,802,806,807,809,799,805,802,806,799,805,802,806,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,799,805,802,806,842,842,799,533,803,805,727,802,806,838,840,814,838,842,842,575,827,829,835,836,837,841,811,846,808,848,849,222,881,814,841,846,848,867,222,881,533,803,727,903,832,837,837,837,826,964,964,964,964,964,964,964,964,964,964,964,964,857,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,837,1610,964,964,868,835,814,857,814,837,932,844,845,848,932,846,222,846,815,838,850,851,533,869,870,871,872,873,874,875,876,877,878,882,883,220,886,890,891,893,894,895,897,898,799,805,802,806,797,830,853,861,819,833,868,799,805,802,806,899,850,857,220,720,825,807,809,846,222,901,220,914,599,915,916,909,533,803,727,836,807,809,220,220,838,908,799,805,802,806,720,533,807,833,839,0,861,815,799,816,817,818,819,820,821,575,822,823,824,825,826,720,831,832,805,838,840,842,798,847,850,851,852,853,744,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,899,799,801,805,804,802,806,809,887,533,801,803,804,727,809,809,213,880,881,213,880,881,853,1610,744,830,784,840,914,599,915,916,829,1604,1605,1606,221,902,586,819,1608,842,834,843,742,832,825,799,805,802,806,799,805,802,806,799,805,802,806,721,845,880,868,856,815,799,816,817,818,819,820,821,575,822,823,824,825,826,827,828,829,720,525,830,831,832,805,833,834,835,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,195,884,885,886,887,888,889,890,891,892,893,894,895,896,721,897,898,783,899,914,599,915,916,909,868,799,805,802,806,825,533,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,870,872,874,876,878,882,883,891,894,895,898,866,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,887,887,825,799,805,802,806,784,913,815,799,816,817,818,819,820,821,575,822,823,824,825,826,522,521,930,827,533,1608,906,828,829,907,807,720,809,932,900,901,525,573,830,801,831,803,832,805,833,834,804,835,727,836,837,838,839,840,841,811,842,843,844,845,798,846,808,847,848,849,850,851,852,853,744,854,802,806,855,856,857,858,859,860,861,581,862,863,864,865,866,867,868,814,869,870,796,871,872,519,873,874,784,797,875,876,800,877,878,879,222,213,742,880,881,882,883,911,912,195,884,913,885,220,914,221,902,586,599,886,915,887,888,908,916,903,909,889,904,890,891,892,893,894,895,896,721,897,898,783,899,827,819,519,885,815,846,222,833,834,866,857,857,887,533,801,803,804,727,821,838,807,809,856,856,856,1611,1611,1612,1612,1613,1613,1612,1613,1611,1614,1615,1616,1617,1615,1615,1618,1618,1619,1620,1620,0,0,0,0,1607,0,0,0,0,0,939,940,941,942,943,943,939,940,941,942,943,939,940,941,942,943,939,940,941,942,939,940,941,942,1610,1610,939,940,941,942,943,939,940,941,942,943,1621,943,943,943,943,939,940,941,942,943,943,939,940,941,942,943,943,943,943,943,939,939,939,940,940,940,941,941,941,942,942,942,943,943,0,0,0,0,0,939,940,941,942,943,939,940,941,942,943,939,940,941,942,943,939,940,941,942,943,939,940,941,942,939,940,941,942,943,0,1610,1610,939,940,941,942,941,942,943,939,940,941,942,943,0,941,942,1610,1610,943,939,940,941,942,943,939,940,941,942,943,939,940,941,942,943,939,940,941,942,943,0,939,940,941,942,943,0,0,0,944,0,0,0,0,0,0,0,0,0,0,0,493,491,1622,493,1623,491,945,945,944,946,947,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1624,945,944,946,947,945,944,946,947,945,944,946,947,1625,493,491,1622,493,1623,491,945,944,946,947,945,947,945,947,945,947,945,944,944,946,946,947,1622,493,1623,491,945,944,946,946,947,947,945,945,947,944,946,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,945,1626,945,947,493,491,945,947,945,944,946,1626,491,1627,491,945,945,1622,1623,945,944,946,947,944,946,1624,1624,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1622,493,1623,491,945,944,946,947,1624,493,1628,1629,1629,0,0,0,0,1630,1631,1632,0,0,0,0,1633,1634,0,0,0,0,1635,1636,1637,0,0,0,0,959,0,959,959,959,959,0,0,0,0,0,0,0,186,212,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,186,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,949,212,582,950,951,949,212,582,950,951,949,212,582,950,951,186,212,212,212,212,212,212,212,212,212,212,212,212,212,212,949,582,950,958,951,582,950,958,951,186,959,949,212,582,950,958,951,949,212,186,959,959,949,950,186,959,959,949,212,212,582,950,958,951,212,959,0,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,212,212,186,949,212,959,186,0,959,949,212,582,950,951,959,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,949,186,959,949,212,582,950,958,951,186,959,949,212,582,950,958,951,212,1638,1638,1639,1638,1640,1640,1641,1639,1638,1641,1639,1641,1640,931,931,968,931,0,931,931,971,931,931,968,968,0,970,971,970,968,969,931,969,931,968,931,931,931,931,931,931,931,968,931,0,931,968,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,968,931,971,0,0,0,0,968,931,931,931,969,969,968,968,931,931,964,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,962,968,931,968,931,968,931,968,931,968,931,968,931,968,931,969,968,931,964,970,971,962,969,968,931,964,970,971,962,964,964,969,968,931,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,970,971,962,968,931,968,931,962,968,931,968,931,969,931,964,970,962,962,968,931,962,969,968,931,964,970,971,962,964,964,962,969,968,931,964,969,968,931,964,968,931,969,968,931,964,969,968,931,964,969,968,931,964,968,931,962,969,968,968,968,968,968,931,931,931,931,931,964,970,969,968,968,931,964,970,971,962,968,931,968,931,968,931,968,931,969,931,964,970,962,969,968,931,964,969,968,931,964,968,931,968,931,968,931,969,968,931,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,970,971,962,968,931,968,931,962,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,964,968,931,968,931,962,962,968,931,969,968,931,964,968,931,0,968,931,968,931,968,931,969,968,931,964,970,971,962,968,931,969,968,931,964,970,971,962,969,968,931,964,970,971,962,969,968,931,964,970,971,962,968,931,969,968,931,964,970,971,962,964,964,1642,1642,973,974,973,974,0,974,0,0,0,0,974,978,0,978,973,981,990,0,0,0,0,0,0,974,0,399,974,0,974,0,974,0,399,0,0,0,0,0,399,399,399,974,974,990,973,974,974,981,980,981,980,981,980,980,980,0,399,399,0,0,0,0,974,974,399,0,981,399,0,974,973,590,591,574,990,976,520,592,986,987,590,591,977,974,574,574,978,979,980,981,399,982,973,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,574,978,979,980,981,399,982,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,973,974,574,574,574,1643,973,973,973,973,973,973,973,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,976,977,574,978,979,980,981,982,973,983,984,977,574,978,979,980,981,982,973,983,984,977,574,978,979,980,981,982,973,983,984,574,973,973,973,574,574,0,0,976,986,987,977,574,978,973,210,976,976,976,984,520,592,986,987,979,986,987,979,973,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,973,973,973,973,973,973,977,983,574,974,574,978,979,980,981,399,399,982,973,973,973,973,973,988,988,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,399,982,973,983,988,984,210,973,973,973,574,574,974,973,973,974,574,976,520,592,986,987,977,574,978,973,983,210,210,973,590,591,0,574,574,973,590,591,399,988,590,591,973,973,973,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,574,978,979,980,981,399,982,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,574,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,973,574,973,0,0,0,0,978,978,977,983,978,978,574,590,591,574,973,973,1644,574,399,988,574,574,574,574,574,574,574,973,574,982,574,574,973,574,982,399,973,973,973,973,982,984,574,982,982,574,990,977,574,978,979,980,981,982,973,983,984,399,988,973,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,574,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,574,574,574,574,973,990,976,520,592,986,987,590,591,977,974,574,978,979,980,981,399,982,973,983,988,984,210,210,0,1645,1003,1003,1003,0,0,0,0,997,996,996,0,0,0,0,211,0,1004,1006,0,211,1010,995,1003,1003,1003,0,0,0,0,0,0,0,0,0,0,0,1003,0,996,0,0,0,0,1003,1004,1006,995,1646,1003,1004,1006,1003,1004,1006,995,996,997,578,211,998,999,1646,1000,1012,995,995,995,996,996,996,997,997,997,1007,1647,578,578,1003,1003,1008,1004,1004,719,1009,211,211,584,1005,589,597,1010,1648,1006,1006,998,999,1646,1000,1012,995,995,996,996,997,997,1007,1647,578,578,1003,1008,1004,719,1009,211,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,1003,1004,1006,995,996,997,578,211,995,996,997,578,211,1003,1004,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,998,999,1000,0,0,995,996,997,578,1003,1004,211,1005,1006,995,996,997,578,211,995,996,997,578,1003,1004,211,1005,1006,995,996,997,578,1003,1004,211,1005,1006,995,996,997,578,211,995,995,996,997,1647,578,584,597,1010,1648,1007,1005,995,996,997,1007,578,1008,719,1009,211,589,719,719,1012,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,1003,1004,1006,995,996,997,1003,1004,1006,1003,1004,1006,578,1646,995,996,996,996,997,1003,1004,211,1006,995,996,997,1003,1004,1006,211,995,996,997,578,211,996,997,578,211,996,997,578,211,995,996,997,578,211,995,996,997,578,211,995,996,997,1007,578,1003,1004,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,995,996,997,1647,578,584,597,1010,1648,995,995,996,995,996,997,1007,578,1008,719,1009,211,589,1010,995,996,997,1647,578,584,597,1010,1648,995,997,578,995,997,578,1003,1004,1006,995,996,997,578,211,995,996,997,578,211,1010,1646,1003,1004,1006,584,1003,1004,1006,1003,1004,1006,1003,1004,1006,996,211,995,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,995,996,996,997,997,1007,1647,578,578,1003,1008,1004,719,1009,211,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,1003,1004,1006,995,996,997,578,211,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,1003,1004,1006,1003,1004,1006,578,1010,1003,1004,1006,997,997,997,995,578,995,996,997,578,211,995,578,1010,1010,1010,996,997,578,211,995,597,1010,1010,995,211,1646,1646,1010,0,1646,1646,719,584,584,1005,996,211,995,996,997,578,211,995,996,997,578,211,995,996,997,578,211,995,996,997,578,211,995,996,997,578,211,995,996,997,578,211,1003,1004,1006,1010,211,995,996,997,578,211,997,1005,1646,1012,1646,1646,1648,995,996,997,578,1003,1004,211,1005,1006,584,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,995,996,997,578,211,995,996,997,578,211,589,998,999,1646,1000,1012,995,996,997,1007,1647,578,1003,1008,1004,719,1009,211,584,1005,589,597,1010,1648,1006,0,996,211,996,211,996,211,1648,584,584,0,1007,0,719,995,995,1005,1003,1003,1003,0,996,996,0,0,0,1003,1003,1003,0,0,0,1003,0,996,0,0,0,1007,578,0,1007,0,0,0,1004,0,0,0,1646,1646,1646,1646,1646,0,1646,1646,719,1646,1646,1646,719,0,0,0,0,0,0,1018,1018,0,0,0,0,0,0,0,1018,1018,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1016,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1013,1015,1016,1016,1016,1017,1022,1649,1019,1020,1019,1020,1014,1021,1015,1022,1022,1021,1021,1021,1021,1021,1021,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1016,1016,1014,1649,1024,1016,1016,1023,1013,1013,1017,1023,1024,1016,1018,1018,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1022,1017,1014,1013,1019,1020,1014,1014,1023,1021,1015,1013,1022,1016,1019,1020,1016,1018,1021,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1021,1023,1017,0,1018,1013,1019,1020,0,0,0,0,1014,1021,1021,1021,1021,1021,1021,1021,1016,1018,1019,1020,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1014,1017,1014,1017,1649,1013,1022,1019,1020,1014,1017,1023,1024,1016,1021,1018,1015,1021,1019,1020,1017,1014,1014,1017,1650,1651,1652,1653,0,0,0,0,0,0,1019,1020,1014,1019,1020,1019,1020,1019,1020,1019,1020,1017,0,0,0,0,0,0,0,0,0,0,0,0,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1031,1032,1030,1031,1032,1033,1030,1031,1032,1033,1026,1027,1028,1029,1028,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1030,1031,1032,1033,1029,1030,1030,1031,1032,1033,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1030,1031,1032,1033,1026,1027,1028,1029,1026,1027,1028,1030,1031,1032,1033,1026,1027,1028,1029,0,1043,1043,1043,1039,0,1043,1043,1043,0,0,0,0,0,1043,1038,1039,0,0,0,0,1059,0,0,1038,1039,0,0,0,0,0,0,0,0,1038,1039,0,0,0,0,0,0,0,0,0,0,0,0,1037,1038,1039,1066,1038,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1037,1038,1039,0,0,0,0,0,1043,1043,1043,1037,1066,1034,1035,1036,1059,1037,1038,1039,1059,1059,1057,1042,1044,1040,1041,1042,1043,1035,1044,1034,1046,1050,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1040,1037,1037,1045,1053,1061,1054,1041,1041,1048,1055,1056,1038,1038,1662,1663,1067,1039,1039,1057,1062,1063,1064,1058,1058,1065,1042,1042,1043,1043,1035,1035,1044,1044,1066,1036,1049,1059,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1040,1037,1045,1053,1061,1054,1041,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1042,1043,1043,1035,1035,1044,1044,1066,1036,1049,1059,1040,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1050,1037,1038,1039,1059,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1043,1034,1036,1059,1655,1050,1040,1655,1037,1038,1039,1037,1038,1039,1037,1038,1039,1037,1038,1039,1037,1038,1039,1037,1038,1039,1037,1038,1039,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1046,1047,1048,1049,1050,1051,1052,1040,1037,1045,1053,1054,1041,1055,1056,1038,1039,1057,1058,1042,1043,1035,1044,1059,1040,1041,1042,1043,1035,1044,1050,1051,1052,1040,1037,1045,1053,1054,1041,1055,1056,1038,1039,1057,1058,1042,1043,1035,1044,1059,1050,1051,1052,1040,1037,1045,1053,1054,1041,1055,1056,1038,1039,1057,1058,1042,1043,1035,1044,1059,1040,1041,1042,1043,1035,1044,1037,1038,1039,0,1040,1045,1057,1042,1044,1037,1038,1039,1041,1055,1663,1057,1058,1042,1043,1044,1051,1052,1054,1037,1038,1039,1045,1055,1057,1042,1044,1040,1035,1046,1060,1051,1052,1047,1040,1045,1061,1054,1041,1048,1062,1063,1064,1065,1042,1043,1044,1036,1049,1061,1061,1037,1038,1039,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1056,1067,1059,1050,1037,1038,1039,1058,1059,1050,1037,1038,1039,1059,1037,1038,1039,1057,1050,1037,1038,1039,1058,1059,1050,1037,1038,1039,1058,1059,1037,1038,1039,0,0,0,1040,1041,1042,1043,1035,1044,1040,1042,1043,1035,1044,1040,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1036,1045,1055,1057,1042,1044,1057,1042,1044,1040,1037,1037,1037,1037,1037,1041,1038,1038,1038,1038,1038,1039,1039,1039,1039,1039,1042,1043,1035,1044,1066,1066,1036,1059,1036,1664,1040,1053,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1040,1040,1037,1045,1053,1061,1054,1041,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1037,1038,1039,1037,1038,1039,1037,1038,1039,1039,1041,1055,1663,1057,1058,1042,1043,1044,1035,1038,1039,1037,1038,1039,1038,1039,1038,1040,1035,1046,1060,1051,1052,1047,1040,1045,1053,1061,1054,1041,1048,1056,1067,1062,1063,1064,1065,1042,1043,1044,1036,1049,1041,1055,1663,1057,1058,1042,1043,1044,1040,1041,1042,1035,1044,1040,1041,1042,1035,1044,1050,1037,1038,1039,1059,1056,1035,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1051,1052,1054,1050,1037,1038,1039,1059,1057,1063,1059,1066,1059,1059,1044,1043,1036,1037,1038,1039,1037,1038,1039,1037,1038,1039,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1040,1037,1045,1053,1061,1054,1041,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1042,1043,1043,1035,1035,1044,1044,1066,1036,1049,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1059,1040,1041,1042,1043,1035,1044,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1059,1055,1037,1038,1039,1059,1037,1038,1039,1035,1059,1040,1041,1042,1043,1035,1044,1655,1035,1054,1053,1036,1054,1053,1050,1056,1038,1039,1040,1042,1043,1035,1044,1034,1044,1035,1037,1038,1039,1034,1037,1038,1039,0,1038,1066,0,0,0,0,1045,1055,1057,1042,1043,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1040,1041,1042,1043,1035,1044,1037,1038,1039,1654,1656,1657,1658,1659,1660,1661,1059,1040,1037,1041,1038,1039,1042,1043,1035,1044,1045,1055,1035,1664,1053,1056,1067,1051,1052,1062,1037,1038,1039,1037,1038,1039,1037,1038,1039,1051,1040,1035,1052,1035,1035,1050,1051,1052,1040,1037,1045,1053,1054,1041,1055,1056,1038,1039,1057,1058,1042,1043,1035,1044,1059,1066,1037,1038,1039,1051,1052,1054,1055,1057,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1040,1041,1042,1043,1035,1044,1040,1040,1041,1042,1043,1035,1035,1044,1040,1035,1037,1038,1039,1034,1046,1050,1654,1655,1060,1656,1657,1658,1659,1660,1661,1051,1052,1047,1040,1037,1045,1053,1061,1054,1041,1048,1055,1056,1038,1662,1663,1067,1039,1057,1062,1063,1064,1058,1065,1042,1043,1035,1044,1066,1036,1049,1059,1662,1663,1043,1043,1043,1664,1053,1056,1051,1052,1054,1045,1055,1069,0,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,0,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,1069,0,0,0,0,0,0,0,0,1042,1044,1040,1042,1044,1051,1052,1042,1044,1042,1044,1042,1044,1051,1052,1044,1042,1035,1051,1052,1051,1040,1035,1052,1035,1035,1051,1052,1051,1052,0,0,0,0,0,0,0,0,0,0,0,0,1665,1665,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,0,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,1071,1665,1072,1665,1665,1665,1665,1665,1665,1071,1070,1077,1078,1079,1080,1072,1072,1071,1070,1081,1078,1079,1080,1077,1086,1070,1081,1665,1665,1665,1665,1072,1070,1081,1078,1079,1080,1077,1086,1665,1665,1072,1071,1070,1081,1078,1079,1080,1077,1086,1071,1070,1077,1665,1078,1079,1080,1078,1079,1080,1665,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1665,1665,1665,1665,1665,1665,1665,1665,1072,1071,1070,1077,1665,1665,1071,1071,1071,1666,1667,1666,1667,1665,1072,1665,0,1665,1070,1070,1665,1070,1081,1077,1070,1081,1081,1071,1665,1071,1070,1086,0,1077,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,1072,1071,1070,1081,1078,1079,1080,1077,1086,1070,0,0,0,0,0,0,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1665,1666,1667,1666,1667,1665,1665,1665,1665,1665,1108,1121,0,1106,1103,0,0,0,0,0,0,0,1106,1103,0,1106,0,0,0,0,0,0,0,0,0,0,0,0,1121,1109,1108,0,1093,1097,1100,1104,1117,1104,1105,1106,1107,1108,1109,1097,1093,1121,1103,1103,1094,1099,1099,1100,1102,1115,1111,1116,1112,1104,1104,1105,1105,1106,1106,1106,1107,1107,1108,1108,1108,1109,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1104,1105,1105,1106,1106,1107,1107,1108,1108,1109,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1099,1106,1108,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1111,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1110,1111,1099,1102,1111,1112,1104,1105,1106,1107,1108,1109,1113,1104,1105,1106,1107,1108,1109,1099,1102,1111,1112,1104,1105,1106,1107,1108,1109,1113,1099,1102,1111,1112,1104,1105,1106,1107,1108,1109,1113,1104,1105,1106,1107,1108,1109,1107,1112,1104,1109,1093,1113,1093,1100,1115,1116,1112,1104,1105,1107,1109,1113,1110,1117,1118,1106,1108,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1103,1099,1106,1108,1099,1106,1108,1097,1103,1099,1106,1108,1103,1099,1106,1108,1106,1108,1115,0,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1103,1103,1094,1099,1102,1111,1112,1104,1105,1106,1107,1108,1109,1113,1094,1107,1107,1097,1093,1121,1103,1094,1099,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1112,1104,1109,1105,1107,1104,1104,1105,1093,1100,1115,1116,1112,1104,1105,1107,1109,1113,1110,1117,1118,1112,1104,1109,1104,1105,1107,1109,1104,1105,1107,1109,1100,1097,1099,1106,1108,1116,1094,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1113,1102,1097,1112,1097,1100,1099,1106,1108,1103,1106,1108,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1104,1105,1105,1106,1106,1107,1107,1108,1108,1109,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1104,1105,1106,1107,1108,1109,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1100,1104,1105,1106,1107,1108,1109,1104,1115,1117,1104,1105,1106,1107,1108,1109,1097,1105,1100,1111,0,1093,1103,1116,1106,1108,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,1104,1105,1106,1107,1108,1109,0,1111,1104,1106,1108,1104,1105,1106,1107,1108,1109,1111,1112,1109,1105,1113,1113,1113,1097,1102,1099,1102,1111,1112,1104,1105,1106,1107,1108,1109,1113,1103,1113,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1094,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,1104,1105,1106,1107,1108,1109,1094,1100,1104,1105,1106,1107,1108,1109,1094,1100,1097,1093,1121,1103,1094,1099,1100,1102,1115,1111,1116,1112,1104,1105,1106,1107,1108,1109,1113,1110,1117,1118,0,1105,1106,1108,1106,1108,1106,1108,1113,1104,1106,1103,0,1106,1103,1106,0,0,0,0,0,0,1104,1107,1113,1094,1107,1107,1113,1104,1104,1105,1113,1113,1113,1113,1105,1113,1129,1129,1129,1126,1126,0,0,0,0,0,0,0,0,0,1128,1128,1128,1124,16,1125,1126,1124,1124,16,16,1125,1125,1126,1126,1126,1127,1128,1128,1129,1668,1669,1124,1124,16,16,1125,1125,1126,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1127,1128,1129,1668,1669,1126,1128,1124,16,1125,1126,1124,16,1125,1126,1128,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1127,1128,1129,1668,1669,1127,1124,16,1125,1126,1128,1124,16,1125,1126,1124,16,1125,1126,1128,1124,16,1125,1126,1128,1124,16,1125,1126,0,1124,16,1125,1126,1127,1129,16,16,16,1124,1125,1126,1124,16,1125,1126,1127,1128,1129,1668,1669,1125,1128,1126,1128,1126,1128,1124,16,1125,16,16,16,16,1124,1125,1124,16,1126,1128,1126,1128,1124,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1125,16,0,1124,16,1125,1126,1128,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1125,1124,16,1125,1126,1127,1129,1124,16,1125,1124,16,1125,1126,1128,1124,16,1125,1126,1124,16,1125,1126,1126,1128,1128,1128,1128,1126,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,1124,16,16,1125,1125,1126,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1127,1128,1129,1668,1669,1128,1124,16,1125,1126,1124,16,1125,1126,1127,1128,1129,1668,1669,1128,1128,16,1128,1124,16,1125,1126,1125,16,1125,1124,16,1125,1126,1124,16,1125,1124,16,1125,1124,1125,1125,1125,0,16,16,16,16,16,16,16,16,16,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1126,16,16,1125,1125,1124,1125,1128,1124,1125,1126,1124,16,1125,1126,1125,1124,1125,1125,16,16,16,16,1124,1125,1125,1124,16,1125,1126,1128,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1127,1128,1129,1668,1669,1124,16,1125,1126,1124,16,1125,1126,1124,16,1125,1124,16,1125,1126,1127,1128,1129,1668,1669,16,16,1126,1126,1126,16,0,0,1132,1131,1131,1132,1131,1132,1131,1132,1131,1132,1131,1132,1131,1131,1132,1131,1131,1132,1132,1131,1132,1131,1132,1131,1132,1131,1132,1131,1132,1131,1132,1131,1132,1131,1131,1131,1132,0,1131,1132,1131,1132,1131,1132,1131,1132,1131,1132,1670,1670,0,1126,1126,0,0,0,1131,1134,0,0,1135,0,1135,1135,1135,1134,1135,1135,1133,1134,1135,1133,1134,1135,1133,1135,1135,1134,1135,1133,1134,1135,1133,1133,1134,1135,1134,1135,1134,1135,0,0,1134,1133,1134,1135,1133,1135,1135,1135,1135,1135,1134,1135,1134,1134,1135,1133,1134,1134,1133,1135,1134,1135,1135,1135,1135,1134,1135,1133,1134,1135,1133,1134,1135,1133,1134,1135,1133,1135,1134,1135,1133,1135,1135,1135,1134,1135,0,1134,1135,1134,1135,1133,1134,1135,1133,1134,1135,1133,1134,1135,1133,0,0,0,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,1136,1538,1538,1136,1137,1136,1137,1136,1137,1136,1137,1136,1137,0,571,22,0,571,571,22,571,571,22,22,571,571,22,22,571,22,571,22,571,22,571,22,571,22,571,22,571,22,571,22,571,22,571,22,571,22,571,22,22,571,22,571,571,22,571,22,571,22,571,22,571,22,571,22,571,22,22,22,571,22,571,22,571,22,571,22,571,571,571,571,22,22,571,22,22,571,22,22,22,22,571,22,22,571,22,571,22,571,22,571,22,571,22,571,22,571,571,22,22,571,22,571,22,571,22,571,22,571,22,571,22,22,22,22,22,22,22,22,571,571,571,22,22,571,22,22,571,571,22,571,22,571,22,571,22,571,22,571,22,571,571,22,22,22,22,22,22,22,22,22,22,22,22,22,22,571,22,571,22,571,22,571,571,22,22,571,22,571,571,22,571,22,571,22,571,22,571,22,571,22,571,22,22,22,22,0,0,1140,1154,0,0,0,1138,1147,0,1146,1147,1143,0,0,1146,1147,1148,1152,1141,1151,1151,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1157,0,0,0,0,0,1164,0,0,1150,1166,0,1146,1147,1148,1152,0,1146,1147,1148,1152,0,0,1166,0,1160,1153,1141,1177,1149,0,1173,0,1149,1160,1155,0,0,0,0,0,1165,1165,1141,1150,0,1143,1138,0,1138,1154,0,0,1149,1151,1151,0,0,0,1148,1152,1148,1152,1152,1166,1146,1147,1148,0,1173,0,0,1140,0,0,0,0,0,0,0,0,0,0,0,0,1138,0,0,1153,1155,1155,0,1164,1166,1145,1145,1145,1139,1140,1164,1166,1164,1166,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1177,1162,1671,1672,1673,1674,1167,1173,1141,1141,1141,1142,1142,1143,1143,1143,1675,1676,1677,1180,1139,1139,1140,1140,1174,1163,1163,1164,1164,1168,1678,1169,1178,1170,1171,1144,1144,1138,1138,1165,1165,1145,1145,1146,1146,1146,1147,1147,1147,1148,1148,1148,1149,1149,1149,1150,1150,1150,1151,1151,1151,1152,1152,1152,1153,1153,1153,1154,1154,1154,1155,1155,1155,1156,1156,1157,1157,1158,1158,1159,1159,1160,1160,1161,1166,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1141,1142,1142,1143,1143,1675,1676,1677,1180,1139,1139,1140,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1144,1138,1138,1165,1145,1145,1146,1146,1147,1147,1148,1148,1149,1149,1150,1150,1151,1151,1152,1152,1153,1153,1154,1154,1155,1155,1156,1156,1157,1157,1158,1158,1159,1159,1160,1160,1161,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1163,1164,1166,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1145,1674,1164,1166,1145,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1139,1139,1161,0,1162,0,1674,1159,1141,1142,1143,1139,1140,1163,1164,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1166,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1675,1180,1141,1142,1143,1139,1140,1163,1164,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1166,1141,1142,1143,1139,1140,1163,1164,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1166,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1674,1141,1142,1143,1678,1178,1144,1145,1156,1157,1158,1159,1160,1167,1167,1141,1142,1143,1139,1140,1168,1169,1170,1171,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1172,1142,1142,1141,1142,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1145,1145,1140,1138,1140,1138,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1162,1162,0,1164,1166,1141,1143,1163,1164,1165,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1166,1163,1164,1166,1162,1162,1141,1142,1143,1139,1140,1163,1164,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1166,1141,1143,1163,1164,1165,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1166,1141,1142,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1138,0,0,0,1675,1180,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1675,1180,1145,1145,1145,0,1145,1145,1674,1158,1674,1158,1167,1173,1141,1142,1143,1139,1140,1164,1171,1144,1138,1165,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1157,1158,1158,1159,1160,1161,1166,1172,1141,1142,1143,1678,1178,1144,1145,1156,1157,1158,1159,1160,1167,1141,1142,1143,1139,1140,1174,1168,1169,1170,1171,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1172,1145,1141,1142,1143,1678,1178,1144,1145,1156,1157,1158,1159,1160,1142,1139,1140,1144,1145,1156,1157,1158,1159,1142,1139,1140,1144,1145,1156,1157,1158,1159,1163,1164,1166,1167,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1163,1164,1166,1163,1140,1140,1139,1674,1178,1174,1164,1166,1165,1164,1166,1164,1166,1141,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1675,1180,1675,1180,1177,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1141,1142,1142,1143,1143,1675,1676,1677,1180,1139,1139,1140,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1144,1138,1138,1165,1145,1145,1146,1146,1147,1147,1148,1148,1149,1149,1150,1150,1151,1151,1152,1152,1153,1153,1154,1154,1155,1155,1156,1156,1157,1157,1158,1158,1159,1159,1160,1160,1161,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1164,1166,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1164,1166,1164,1166,1164,1166,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1145,1139,1139,1145,1675,1180,1145,1145,1142,1140,1138,1140,1138,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1177,1139,1140,1158,0,0,1142,1145,1145,1162,1145,1145,0,1156,1165,0,1178,1674,1141,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1167,1671,1672,1673,1139,1139,1177,1164,1166,1172,1141,1142,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1675,1180,1675,1180,1167,1675,1180,1144,1145,1156,1162,1162,1174,1674,1158,1141,1142,1143,1139,1140,1163,1164,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1166,1165,1139,1139,1674,1138,1138,1138,1138,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1167,1138,1138,1138,1138,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1141,1142,1143,1139,1140,1144,1138,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,0,1168,1171,1177,1162,1671,1672,1673,1674,1167,1173,1141,1142,1143,1675,1676,1677,1180,1139,1140,1174,1163,1164,1168,1678,1169,1178,1170,1171,1144,1138,1165,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1166,1172,0,1177,1675,1180,1167,1675,1180,1167,1167,1167,1170,1141,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1141,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1141,1143,1138,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1160,1139,1174,0,1140,1140,1178,0,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,1182,0,0,0,0,0,0,0,0,0,0,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1186,1183,1184,1185,1186,1183,1184,1185,1186,1186,1184,1185,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1185,1185,1183,1184,1185,1186,1183,1184,1185,1186,1184,1186,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1185,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1183,1184,1185,1186,1185,1185,1183,1184,1185,1186,0,0,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,1187,0,0,1187,1187,1187,1187,1187,1187,1187,0,0,0,0,0,0,0,0,0,0,0,49,49,49,54,54,54,54,49,0,0,0,0,0,49,0,0,0,49,49,49,49,598,598,1196,1194,1194,743,1193,1195,54,54,1192,49,49,49,598,1196,1194,743,1193,1195,54,1192,49,49,598,1196,1194,743,1193,1195,54,1192,49,54,54,598,1194,54,49,54,54,49,49,49,54,49,49,49,49,49,54,54,54,54,598,1196,1194,743,1193,1195,54,1192,49,598,1196,1194,743,1193,1195,54,1192,49,54,743,1193,49,49,49,49,598,1194,743,54,1192,49,598,1194,743,54,1192,49,598,1194,743,54,1192,49,49,1194,54,49,49,0,743,1193,1195,54,1192,49,0,0,598,54,49,0,49,49,49,49,49,49,598,1196,1194,743,1193,1195,54,1192,49,1196,598,1194,54,49,598,1194,54,49,54,598,1194,54,49,598,1194,54,49,54,49,1195,1192,598,1194,743,1195,54,54,54,54,1192,49,598,1196,1194,743,1193,1195,54,54,54,54,54,1192,49,49,49,49,49,54,54,54,54,54,49,49,49,49,49,49,49,54,54,54,54,54,54,743,1193,1195,54,1192,49,0,598,1194,54,49,1679,0,54,49,49,54,54,54,598,598,1194,54,49,54,598,1196,1194,743,1193,1195,54,1192,49,598,1196,1194,743,1193,1195,54,1192,49,49,598,1196,1194,743,1193,1195,54,1192,49,598,1196,1194,743,1193,1195,54,1192,49,54,49,598,1196,1194,743,1193,1195,54,1192,49,54,49,0,49,49,49,49,1194,598,1196,49,54,1192,54,54,1194,54,49,0,49,49,49,49,49,49,49,49,49,49,54,49,49,54,49,49,49,49,49,49,49,0,0,54,54,598,1194,743,54,1192,49,54,54,598,1196,1194,743,1193,1195,54,54,1192,49,49,49,598,1196,1194,743,1193,1195,54,1192,49,54,54,598,1196,1194,743,1193,1195,54,1192,49,49,49,598,1196,1194,743,1193,1195,54,1192,49,54,1195,1192,1192,1192,1192,1195,1192,1192,1192,0,1206,1206,0,0,0,934,404,934,404,934,934,934,404,404,404,1206,1206,934,934,404,404,1206,934,404,1206,934,404,934,404,404,404,404,934,404,1206,934,404,1206,934,404,934,404,934,404,1206,934,934,404,934,404,1206,934,404,1206,934,404,404,934,934,404,934,404,404,934,404,1206,934,934,404,934,404,934,404,1206,934,404,934,934,404,1206,934,404,1206,934,404,934,934,934,404,404,934,404,1206,934,934,404,404,404,1206,934,404,934,404,934,404,934,934,404,934,934,934,934,934,934,934,934,934,404,404,934,404,934,404,934,404,0,0,934,404,934,934,404,934,934,404,404,934,404,1206,934,934,404,404,1206,934,404,1206,934,404,1206,934,934,934,404,404,934,934,404,934,404,1206,934,404,934,404,404,404,934,934,404,934,934,934,934,404,934,404,934,404,0,934,934,934,934,404,934,404,934,934,404,934,404,934,404,934,934,404,934,404,934,404,934,404,934,404,934,404,934,404,934,404,404,404,404,934,404,1206,934,404,1206,934,934,404,1206,934,404,934,404,1206,934,404,934,404,404,934,404,1206,934,934,934,404,934,404,934,404,934,404,934,404,934,404,1680,0,0,0,0,0,0,0,0,0,0,0,0,1231,279,1213,0,0,0,0,0,0,0,0,1231,279,1213,0,0,0,0,1231,279,1213,1231,279,1213,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1222,1229,1216,1222,1229,1216,1222,1229,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1210,1227,1216,1217,1215,1220,1221,1222,1229,1208,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1224,1223,1224,1223,1224,1223,1232,1234,1236,1232,1232,1232,1234,1236,1231,1232,1233,279,1234,1235,1213,1236,1237,1233,1232,1233,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1232,1235,1237,1232,1232,1234,1236,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1232,279,1234,1235,1213,1236,1237,1232,1216,1217,1215,1220,1221,1222,1229,1208,1230,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,279,1213,1231,279,1213,1231,279,1213,279,1213,1232,1234,1236,1232,1234,1236,1234,1236,1232,1234,1236,1234,1236,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1216,1222,1229,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1216,1217,1215,1220,1221,1222,1229,1208,1210,1230,1224,1231,1232,1233,1223,279,1234,1235,1213,1236,1237,1227,1227,0,0,0,0,0,0,0,0,1212,0,0,0,1212,0,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1214,1207,1226,1228,1218,1214,1207,1226,1228,1218,1214,1207,1226,1228,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1211,1218,1219,1209,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1212,1238,1239,1212,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1239,1218,1219,1209,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1238,1218,1219,1209,1211,1214,1207,1226,1228,1218,1214,1207,1226,1228,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,1218,1219,1209,1211,1214,1207,1226,1228,1212,1238,1239,0,0,0,0,0,0,1225,1240,1225,1241,1243,1242,1244,1240,1225,1241,1243,1242,1244,1240,1225,1241,1243,1242,1244,1240,1240,1240,1240,1225,1241,1243,1242,1244,1240,1225,1241,1243,1242,1244,1225,1225,1225,1225,1225,1225,1240,1225,1241,1225,1225,1240,1225,1241,1225,1241,1240,1225,1225,1240,1225,1241,1243,1242,1244,1225,1225,1240,1225,1243,1242,1225,1225,1225,1225,1240,1225,1241,1243,1242,1244,1225,1225,1225,1225,1225,1225,1225,1225,1240,1225,1241,1243,1242,1244,1240,1225,1241,1243,1242,1244,1225,1241,1243,1242,1240,1225,1241,1243,1242,1244,1225,1241,1243,1242,1244,1225,1240,1225,1241,1243,1242,1244,1225,1225,1243,1242,1225,1225,1225,1225,1241,1243,1242,1244,1240,1241,1241,1225,1225,1225,1225,1225,1241,1243,1242,1240,1225,1241,1240,1225,1241,1243,1242,1244,1225,1240,1225,1241,1243,1242,1244,1225,1225,1225,1240,1225,1241,1243,1242,1244,1240,1225,1241,1243,1242,1244,1225,1225,1240,0,0,26,1681,0,0,26,1681,0,0,0,0,0,1248,1248,0,1682,1248,1248,0,1245,1245,1245,1245,0,1245,0,1245,1248,1248,1249,1250,1245,1248,1249,1250,1245,1248,1249,1250,1248,1245,1248,1249,1250,1245,1248,1249,1250,1245,1245,1245,1245,1248,1249,1250,1245,1245,1248,1249,1250,1245,1248,1249,1250,1248,1245,0,0,1245,0,1245,1248,1249,1250,1248,1248,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1248,1248,1245,1245,1245,1245,1245,1245,1245,1248,1249,1250,1245,1245,1248,1248,1249,1250,1245,1245,1245,1245,1245,1248,0,0,1248,1245,1245,1248,1245,1245,1245,1245,1248,1249,1250,1245,1248,1249,1250,1245,1248,1249,1250,1245,1248,1249,1250,1245,1245,1245,1248,1249,1250,1682,1245,1683,1245,1249,1250,1245,0,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,0,1248,1248,0,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,1245,0,1245,1245,1245,1248,1249,1250,1245,1248,1249,1250,1245,1248,1249,1250,1245,1248,1249,1250,0,1245,1248,1249,1250,1245,1245,0,1245,1245,1245,0,0,0,0,0,0,0,0,0,0,0,0,0,1264,1264,1264,1264,1264,1264,1264,1265,1265,1266,1267,1268,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1264,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1268,1264,1264,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1268,1265,1264,1264,1264,1264,1264,1264,1264,1264,1264,1265,1268,1265,1268,1264,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1264,1264,1265,1265,1268,1684,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1266,1267,1269,1270,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1264,1264,1267,1270,1684,1264,1684,1264,1266,1267,1269,1270,1271,1272,1267,1270,1264,1264,1264,1264,1264,1264,1264,1265,1268,1264,1267,1270,1267,1270,1266,1267,1270,1271,1272,1268,1268,1264,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1265,1266,1267,1268,1269,1270,1264,1271,1272,1264,1264,1268,1264,0,0,0,0,0,0,0,0,0,0,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,0,0,0,0,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1275,1276,1277,1274,1275,1276,1277,1274,1275,1276,1277,1274,0,0,1278,1278,1275,1279,0,0,0,1278,1275,1279,1276,1277,1274,1278,1277,1274,0,0,0,0,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1275,1279,0,0,0,1685,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1276,1278,1275,1279,1276,1277,1274,0,0,0,1278,0,0,0,0,1278,0,0,0,0,1278,0,1278,1686,0,1686,0,1275,1279,1276,1279,1277,1278,1686,1279,0,0,0,0,1275,1276,1277,1274,0,0,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1278,1275,1279,1276,1277,1274,1685,0,0,1273,1273,1273,0,1273,1273,1273,1273,1273,1273,1273,0,1273,1273,1273,1273,1273,1273,1273,1273,1273,1273,1273,1273,1273,0,0,0,0,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1284,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1285,1286,1284,1285,1286,1285,1286,1284,0,1286,1284,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,1284,1285,1286,0,0,0,0,0,0,0,0,0,0,0,1283,1282,1283,1282,1283,1282,1283,1282,1283,1282,1283,1282,1283,1282,0,1283,1282,1283,1282,1283,1282,1283,1282,1283,1282,1283,1282,0,1283,1282,1283,1282,1283,1282,1283,1282,1283,1282,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1287,1287,1287,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1287,1287,1288,1289,1290,1291,1292,1293,1294,1287,1287,1287,1287,1287,1287,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1287,1287,1290,1684,1287,1287,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1289,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1287,1684,1287,1287,1684,1287,1289,1291,1292,1293,1294,1294,1287,1287,1287,1287,1287,1287,1287,1289,1292,1293,1294,1290,1290,1287,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1288,1289,1290,1291,1292,1293,1294,1287,1290,1290,1287,0,0,0,0,1295,0,0,0,0,1295,1687,1687,1295,1295,1296,1295,1296,1295,1296,1295,1296,1295,1296,1295,1296,1295,1296,1295,1296,1295,1296,1295,1688,1689,1295,1295,1690,1295,1296,1295,1296,1691,1295,1296,1295,1296,1295,1296,1295,1296,1296,1295,1296,1296,1688,1689,1296,1295,1296,1295,1296,1295,1296,1295,1296,1295,1296,1687,1692,1693,1693,1694,1693,0,0,1297,1297,1297,1297,1297,1298,1297,1297,1298,1297,1298,1297,1298,1297,1298,1297,1298,1297,1297,1297,1297,1298,1298,1297,1298,1297,1298,1297,1298,1297,1297,1298,1297,1298,1297,1298,1298,1298,1297,1298,1297,1298,1297,1298,1297,1298,1298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1299,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1301,1302,1257,1260,1255,1256,1261,1251,1303,1304,1252,1300,1301,1302,1257,1260,1255,1256,1261,1251,1303,1304,1252,1300,1301,1302,1257,1260,1255,1256,1261,1251,1303,1304,1252,1299,1260,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1299,1299,0,1299,1299,1299,1299,1299,1303,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1299,1299,1303,1684,1299,1299,1299,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1257,1260,1255,1256,1263,1254,1261,1251,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1299,1684,1299,1299,1684,1299,1300,1257,1260,1255,1256,1263,1254,1261,1251,1304,1252,1261,1251,1304,1252,1300,1301,1302,1300,1299,1299,1299,0,1299,1299,1299,1299,1257,1256,1263,1254,1261,1251,1304,1252,1302,1303,1302,1303,1299,1299,1300,1301,1302,1257,1260,1255,1256,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1300,1299,1301,1302,1257,1260,1255,1256,1263,1254,1261,1251,1303,1304,1252,1299,1303,1303,1301,1302,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1314,1305,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1314,1311,1305,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1305,1305,1305,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1305,1305,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1311,1306,1314,1306,1307,1308,1309,1310,1311,1312,1313,1314,1306,1311,1314,1311,1305,1306,1306,1314,1306,1307,1308,1309,1310,1311,1312,1313,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1305,1306,1307,1308,1309,1310,1311,1312,1313,0,0,0,0,0,0,0,0,0,0,0,0,0,1315,1315,1315,1315,1315,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1315,1315,1316,1317,1318,1319,1320,1315,1316,1317,1318,1319,1320,1315,1316,1317,1318,1319,1320,1321,1315,1321,1315,1316,1317,1318,1319,1320,1315,1315,1315,1315,1315,1315,1315,1315,1315,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1315,1315,1321,1315,1315,1684,1315,1315,1315,1315,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1315,1315,1695,1684,1315,1315,1315,1315,1684,1315,1315,1316,1317,1318,1319,1320,1315,1315,1315,1315,0,1315,1315,1315,1315,1315,1315,1316,1317,1319,1315,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1321,1315,1316,1317,1318,1319,1320,1315,1315,1315,1315,1695,0,0,0,0,0,0,0,0,1696,0,0,0,0,1248,1696,0,1248,0,0,0,0,0,0,1696,1322,1322,1322,1322,1322,1322,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1322,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1322,1322,1323,1324,1325,1322,1323,1324,1325,1323,1324,1325,1322,1322,1322,1322,1322,1322,1322,1322,1322,1322,1322,1323,1324,1322,1324,1323,1324,1322,1323,1324,1325,1322,1322,1322,1322,1322,1322,1322,1323,1323,1324,1325,1322,1696,1322,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1322,1323,1324,1325,1322,1322,1322,1323,1324,1322,1322,1322,1322,1323,1324,1325,1322,1323,1324,1325,1322,1322,1322,1322,1322,1322,1322,1322,1323,1324,1322,1696,1323,1324,1325,1696,1322,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1323,1324,1325,1322,1322,1322,1323,1324,1325,1696,1322,1322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1258,1258,1258,1258,1258,1258,1327,1246,1246,1247,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1246,1247,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1258,1258,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1246,1247,1258,1258,1258,1246,1247,1334,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1246,1247,1246,1247,1258,1258,1258,1258,0,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1258,1246,1247,1246,1247,1329,1246,1247,1258,1258,1258,1258,1258,1258,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1258,1327,1246,1246,1247,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1258,1258,1258,1258,1246,1247,1246,1247,1246,1247,1246,1329,1684,1258,1258,1246,1246,1247,1258,1258,1258,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1328,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1258,1258,1684,1246,1258,1258,1258,1258,1258,1684,1258,1246,1246,1247,1327,1328,1330,1331,1332,1333,1334,1335,1336,1328,1332,1335,1336,1327,1327,1258,1258,1258,1258,0,1258,1258,1258,1258,1258,1258,1258,1258,1246,1247,1258,1258,1258,1258,1258,1258,1328,1331,1333,1335,1336,1329,1329,1258,1258,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1327,1246,1247,1328,1329,1330,1331,1332,1333,1334,1335,1336,1258,1258,1258,1246,1329,1329,1258,1258,0,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1337,1697,1342,0,1340,1340,0,0,1342,0,0,0,0,1342,0,0,0,0,0,1696,1698,0,0,1699,1699,1700,1701,1702,1703,0,0,1342,0,0,0,0,0,0,0,0,0,0,0,1704,1705,1706,1707,0,0,0,0,0,0,0,1696,1708,1698,1709,0,0,1710,1710,1701,1340,0,0,0,0,0,0,1342,0,0,0,0,1696,1708,1697,1338,1341,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1339,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1340,1340,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1344,1711,1340,1341,1340,1343,0,1323,1324,1325,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1341,1712,1345,1350,1338,1713,1338,1699,1345,1350,1338,1345,1338,1338,1702,1345,1350,1338,1703,1345,1350,1338,1341,1341,1324,1341,1342,1340,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1345,1350,1714,1712,1345,1345,1350,1350,1338,1338,1341,1340,1343,1341,1341,1696,1708,1339,1715,1716,1344,1344,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1344,1346,1347,1348,1349,1351,1352,1353,1354,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1339,1697,1338,1700,1717,1704,1706,1345,1350,1338,1707,1345,1350,1338,1343,1343,1344,1346,1347,1348,1349,1351,1352,1353,1354,1355,1714,1345,1350,1338,1718,1350,1338,1709,1345,1350,1338,1710,1345,1350,1338,1345,1338,1338,1341,1343,1705,1345,1350,1338,1711,1340,1711,1340,1346,1347,1348,1349,1351,1352,1353,1354,1355,1696,1339,1323,1324,1325,1696,1339,1714,1712,1345,1345,1350,1350,1338,1338,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1341,1342,1340,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1338,1354,1339,1355,1717,1705,1345,1350,1338,1704,1343,1696,1708,1339,0,0,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,1356,0,0,1357,347,1357,347,1357,347,1357,1357,347,1357,347,1357,347,347,347,1357,347,347,1357,1357,1357,347,347,347,1357,1357,347,1357,347,1357,347,1357,347,1357,347,1357,1357,347,1357,347,1357,347,1357,347,1357,347,347,1357,347,1357,347,1357,347,1357,347,0,0,1359,0,1359,0,1359,0,0,0,0,0,0,1359,0,1359,1364,1358,1358,1365,1359,1359,1362,1362,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,1359,1362,1358,1359,1359,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,0,1358,1364,1364,1365,1359,1362,1364,1365,1359,1362,1367,1365,1364,1365,1359,1362,1359,1364,1367,1365,0,0,1365,0,1364,1358,1365,1359,1362,1367,1367,1367,1367,1367,1365,1365,1364,1367,1365,1358,1359,1362,1359,1362,1367,1365,0,1367,1364,1365,1364,1364,1358,1359,1359,1362,1358,1359,1362,0,0,0,1367,1365,0,1367,0,1367,1365,0,1364,1358,1358,1375,1375,1364,1358,1365,1359,1359,1362,1364,1364,1358,1365,1365,1365,1359,1362,1362,1359,1362,1365,1359,1359,1364,1359,1362,1359,1359,1364,1364,1359,1362,1364,1719,1364,0,0,0,1719,0,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,1362,1364,1358,1365,1359,1362,1362,1367,1367,1367,1367,1365,1364,1358,1364,1358,1359,1359,1358,0,1358,1359,1359,1367,0,1385,1364,0,1358,1358,1364,1358,1365,1364,1364,1367,1365,1364,1365,1367,1364,1359,1359,1375,1367,1364,1365,1364,1367,1365,1367,1365,1385,0,0,0,0,1358,1364,1365,1359,1362,1359,0,0,1367,1365,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,1364,1358,1365,1359,1362,0,0,1364,0,0,0,1361,1361,1384,1361,1384,1361,1384,1361,1361,1384,1361,1384,1361,1361,1361,1361,1384,1361,1361,1361,1361,1361,1384,1361,1384,1361,1361,1384,1361,1384,1361,1384,1361,1384,1361,1384,1361,1384,1385,1384,1384,0,0,1384,1385,1384,1361,1361,1384,1361,1384,1361,1384,1361,1384,0,0,0,0,1368,1368,1368,1368,1368,1368,1368,1368,1368,1368,1368,0,1368,1368,1368,1368,1368,0,0,1368,1368,1368,1368,1368,1368,0,0,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,1372,0,0,0,0,0,0,0,0,0,0,1374,1374,1363,1373,1373,1391,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1373,1720,1373,1373,1373,1374,1363,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1363,1373,1373,1389,1390,1373,1389,1390,1373,1389,1390,1374,0,0,1374,1363,1373,1391,1388,1389,1390,1374,1373,1391,1373,1374,1373,1391,1374,1373,1391,1374,1374,1374,1363,1363,1373,1373,1391,1388,1389,1389,1390,1374,1363,1373,1391,1388,1389,1390,1373,1373,1374,1363,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1374,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1374,1388,1374,1363,1373,1391,1388,1389,1390,1374,1363,1374,1374,1363,1373,1374,1388,1375,1363,1391,1389,1390,1381,1381,1381,1381,1381,1381,1381,1381,1381,1373,1389,1390,1374,1363,1373,1389,1374,1363,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,1374,1363,1373,1391,1388,1389,1390,0,0,0,0,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1393,1378,1393,1378,1393,1378,1719,1393,1378,1393,1378,1393,1378,1393,1378,1719,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1378,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1393,1378,1721,1721,0,0,0,1371,1371,1379,1379,1371,0,0,0,0,1371,0,0,1379,1371,1371,1379,1379,1371,1371,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,1371,1371,1379,1371,1394,1377,1379,1371,1394,1377,1371,1379,1371,1394,1379,1371,1394,1379,1371,1394,1371,1371,1379,1371,1394,1377,1379,1371,1371,1371,1371,1379,1371,1371,1379,1371,1379,1371,1371,1394,1394,1377,1377,1379,1371,1371,1371,1394,1377,1371,1371,1371,1371,1371,1371,1371,1371,1379,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,1371,1379,1371,1394,1377,1379,1379,1379,1371,1371,1371,1371,1371,1371,1371,1394,1377,1371,1379,1371,1394,1371,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,1379,1371,1394,1377,0,0,0,0,0,0,0,1369,1370,1380,1382,1369,1370,1380,1382,1369,1370,1380,1382,1722,1369,1370,1380,1382,1369,1370,1380,1382,1380,1380,1382,1370,1369,1370,1380,1382,1369,1370,1370,1380,1369,1370,1380,1382,1369,1370,1380,1382,1370,1369,1370,1380,1382,1369,1370,1380,1382,1369,1369,1370,1380,1382,1369,1370,1380,1382,1380,1380,1382,1380,1382,1380,1380,1382,1380,1380,1380,1380,1382,1382,1369,1370,1380,1382,1369,1370,1380,1382,1369,1370,1380,1382,1369,1370,1380,1382,1380,0,0,0,0,0,1383,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1383,1396,1383,1396,1367,1383,1396,1367,1396,1387,1386,1383,1396,1367,1386,1367,1367,1396,1367,1396,1367,1396,1367,1367,1396,1387,1387,1386,1383,1396,1387,1386,1383,1396,1396,1387,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1383,1383,1383,1367,1383,1367,1396,1367,1387,1367,1396,1367,1396,1367,1396,0,0,1383,1383,1396,1387,1367,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,1387,1386,1383,1396,0,1397,1397,1421,1421,1397,1414,1419,1418,1418,1414,1420,1397,1414,1397,1405,0,1415,1397,1397,1397,1417,0,0,0,0,0,0,1397,1405,1424,1408,1397,1405,1410,1397,0,1418,0,1420,1397,1397,1397,1397,1408,1408,0,1418,1417,1419,0,1415,1418,0,1397,1397,1397,1397,1397,1415,1421,0,1397,1397,1397,1397,1424,1424,1419,1419,1419,1405,0,1410,1417,0,1397,0,0,0,1397,1397,1397,1420,1397,1397,0,1397,1397,1397,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1420,1397,1397,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1426,1422,1397,1397,1397,712,712,1398,1398,1398,713,713,713,1399,1399,1399,1400,1400,1400,1401,1401,1402,1402,1402,1403,1403,1403,1404,1404,1404,1405,1405,1405,1406,1406,1406,1123,1123,1407,1407,1408,1408,1408,1409,1409,1409,1423,714,714,714,1410,1410,1411,1411,1411,1119,1119,1412,1412,1413,1413,1414,1414,1181,1181,1415,1415,1415,1416,1416,1416,1417,1417,1417,1418,1418,1418,1419,1419,1419,1420,1420,1420,1421,1421,1421,1424,1426,1422,1397,1397,712,712,1398,1398,713,713,1399,1399,1400,1400,1401,1401,1402,1402,1403,1403,1404,1404,1405,1405,1406,1406,1123,1123,1407,1407,1408,1408,1409,1409,1423,714,714,1410,1410,1411,1411,1119,1119,1412,1412,1413,1413,1414,1414,1181,1181,1415,1415,1416,1416,1417,1417,1418,1418,1419,1419,1420,1420,1421,1421,1424,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,1411,1418,1419,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1181,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1422,1119,1414,1404,1412,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,0,0,1422,714,1411,1423,714,1119,1119,1119,1119,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1119,1422,1397,714,1410,1119,1412,1413,1414,1181,1415,1416,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1423,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,1398,713,1399,1400,1402,1403,1404,1405,1406,1408,1409,714,1411,1415,1416,1417,1418,1419,1420,1421,1397,1411,1418,1419,1411,1409,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1411,1412,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,1398,713,1399,1400,1402,1403,1404,1405,1406,1408,1409,714,1411,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1422,0,0,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1119,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1406,1119,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1181,1181,1181,1181,1415,1416,1417,1418,1419,1420,1421,1424,1423,714,1119,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1422,1397,714,1410,1119,1412,1413,1414,1181,1415,1416,1418,1419,1420,1421,1423,714,1119,1423,712,1398,713,1399,1400,1401,1402,1403,1404,1406,1123,1407,1409,714,1411,1119,1412,1413,1181,1416,712,1398,713,1399,1400,1401,1402,1403,1404,1406,1123,1407,1409,714,1411,1119,1412,1413,1181,1416,1423,1397,1411,1418,1419,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1423,1413,1397,1411,1418,1419,1119,1181,712,1413,1413,1119,1119,1397,1405,1408,1410,1414,1415,1417,1418,1419,1420,1421,1119,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1426,1422,1397,1397,712,712,1398,1398,713,713,1399,1399,1400,1400,1401,1401,1402,1402,1403,1403,1404,1404,1405,1405,1406,1406,1123,1123,1407,1407,1408,1408,1409,1409,1423,714,714,1410,1410,1411,1411,1119,1119,1412,1412,1413,1413,1414,1414,1181,1181,1415,1415,1416,1416,1417,1417,1418,1418,1419,1419,1420,1420,1421,1421,1424,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1410,1412,1412,1412,1412,1119,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1414,1181,1410,714,1411,1119,1119,1181,1119,1181,1401,1409,1119,0,1119,1119,1422,1426,1426,1397,1405,1408,1410,1414,1415,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1119,1119,1119,1119,1181,1123,1407,1181,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1414,1181,1181,1415,1416,1417,1418,1419,1420,1421,1119,1119,1119,1119,1181,1181,1181,1416,1416,1119,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1119,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1426,1422,1397,712,1398,713,1399,1400,1401,1402,1403,1404,1405,1406,1123,1407,1408,1409,1423,714,1410,1411,1119,1412,1413,1414,1181,1415,1416,1417,1418,1419,1420,1421,1424,1397,1405,1408,1410,1414,1415,1417,1418,1419,1420,1421,1397,1405,1408,1410,1414,1415,1417,1418,1419,1420,1421,1397,1405,1408,1410,1414,1415,1417,1418,1419,1420,1421,1413,1119,1181,712,712,713,1399,1400,1401,1402,1403,1404,1406,1123,1407,1423,1119,1181,1543,1544,1543,1544,1545,1546,1546,1547,1546,1547,1548,1549,1397,1397,1397,1414,1414,1397,1414,1397,1405,1397,1397,1397,1417,0,0,0,0,1397,1405,1408,1397,1405,1397,0,1397,1397,1397,1397,1408,1408,0,1417,0,1397,1397,1397,1397,1397,1397,1397,1397,1397,1405,1417,1397,0,1397,1397,1397,1397,1397,1397,1397,1397,0,0,0,0,0,1397,1397,1119,1404,1422,1119,1119,1119,1409,1422,1119,1119,1119,1119,1119,1412,1412,1412,1412,1119,1401,1409,1119,1119,1119,1422,1119,1119,1119,1119,1119,1401,1402,1403,1404,1119,1543,1544,1543,1544,1545,1546,1546,1547,1546,1547,1548,1549,1433,1433,1433,0,0,0,0,1432,1433,1429,1428,1432,1433,1429,1428,1432,1433,1429,1428,1432,1433,1429,1428,1432,1433,1429,1428,1428,1429,1432,1429,1428,1432,1432,1433,1429,1428,1429,1432,1433,1429,1432,1432,1433,1429,1428,1432,1429,1428,1432,0,0,1429,1429,1432,1433,1429,1428,1432,1433,1429,1428,1432,1433,1428,1432,1433,1429,1428,1432,1433,1429,1428,1429,1432,1432,1433,1429,1428,1432,1433,1429,1428,1432,1433,1429,1428,1432,1432,1433,1429,1428,1432,1429,0,1429,0,1723,1724],"f":[0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],0,0,[[]],[[]],[[]],[[]],[3,4],[5,4],0,0,0,[[]],[[]],0,0,[[]],[[]],0,0,0,0,[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[13,14,15]],[[[17,[16]],[17,[[18,[13]]]],[20,[19]],[20,[21]],[20,[22]],20,20]],[[23,24]],[[15,24]],[[14,24]],[[13,24]],[[25,24]],[23,1],[[],1],[15,1],[[],1],[[],1],[[],1],[14,1],[[],1],[13,1],[25,1],[[],1],[[],1],[[],1],[23,1],[15,1],[[],1],[14,1],[[],1],[13,1],[[],1],[[],1],[25,1],[[],1],[2],[2],[2],[2],[2],[2],[[],26],[23,24],[15,24],[14,24],[13,24],[25,24],[23,24],[15,24],[14,24],[13,24],[25,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,28]],[23,23],[15,15],[14,14],[13,13],[23,29],[15,30],[14,30],[13,30],[25,30],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[23,[[7,[24,6]]]],[15,[[7,[24,6]]]],[14,[[7,[24,6]]]],[13,[[7,[24,6]]]],[25,[[7,[24,6]]]],[[32,33]],[13,34],[[],14],[[],13],[[],25],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[13,35],[26,36],[37],[25,35],[[14,14],36],[[],36],[[23,38],[[12,[24]]]],[[15,38],[[12,[24]]]],[[14,38],[[12,[24]]]],[[13,38],[[12,[24]]]],[[25,38],[[12,[24]]]],[[23,39],[[12,[24]]]],[[15,39],[[12,[24]]]],[[14,39],[[12,[24]]]],[[13,39],[[12,[24]]]],[[25,39],[[12,[24]]]],[[23,39],[[12,[24]]]],[[15,39],[[12,[24]]]],[[14,39],[[12,[24]]]],[[13,39],[[12,[24]]]],[[25,39],[[12,[24]]]],[23,39],[15,39],[14,39],[13,39],[25,39],[[23,38],[[12,[24]]]],[[15,38],[[12,[24]]]],[[14,38],[[12,[24]]]],[[13,38],[[12,[24]]]],[[25,38],[[12,[24]]]],[[23,40],[[10,[41]]]],[[15,40],[[10,[41]]]],[[14,40],[[10,[41]]]],[[13,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[23]]]],[24,[[12,[15]]]],[24,[[12,[14]]]],[24,[[12,[13]]]],[42],[42],[42],[42],[[]],[[13,39],[[12,[34]]]],[[13,14],[[12,[34]]]],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[23,44],[15,44],[14,44],[13,44],[25,44],[[],45],[[],45],[[],45],[[],45],[[],45],[14],[[23,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[23,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[15,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[14,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[13,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[25,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[23,6]]],[[7,[24,6]]]],[[[7,[15,6]]],[[7,[24,6]]]],[[[7,[14,6]]],[[7,[24,6]]]],[[[7,[13,6]]],[[7,[24,6]]]],[[[7,[25,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[25,36],[23,46],[15,47],[14,47],[13,47],[25,47],0,0,[[23,39],[[12,[38]]]],[[15,39],[[12,[38]]]],[[14,39],[[12,[38]]]],[[13,39],[[12,[38]]]],[[25,39],[[12,[38]]]],0,[25],[[25,[48,[13]]],25],[[25,[48,[13]],49],25],0,[23,[[12,[43]]]],[23,50],[15,50],[14,50],[13,50],[25,50],[[[7,[23,6]]],51],[[[7,[15,6]]],51],[[[7,[14,6]]],51],[[[7,[13,6]]],51],[[[7,[25,6]]],51],[[23,24],[[12,[36]]]],[[15,24],[[12,[36]]]],[[14,24],[[12,[36]]]],[[13,24],[[12,[36]]]],[[25,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[23,53],[15,53],[14,53],[13,53],[25,53],[25,25],[25],[[23,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[15,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[14,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[13,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[25,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[25,35],25],[[25,35],25],[25,35],[[25,[48,[13]]],25],[[25,[48,[13]],49],25],[25,25],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[23,38],[15,38],[14,38],[13,38],[[],38],[25,38],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[23,39],[23,38],[23,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,4],[4,4],[28,28],[28,28],[28,28],[4,4],[28,28],[28,28],[28,28],[28,28],[28,28],[28,28],[[28,56,57],28],[28,28],[[28,58],28],[[28,59],28],[28,28],[[28,58],28],[[28,56,58],28],[[28,59],28],[[28,56,59],28],[60,61],[60,61],[60,61],[60,61],[[],61],[[],61],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[[],62],[62,62],[[],38],[62,38],[[],57],[[],57],[60,61],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28],[[],4],[4,4],[[63,28]],[62,62],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[28,71],28],[[28,72],28],[[],28],[[],64],[[],65],[[],66],[[],67],[[],63],0,[64],[64],[4,4],[[]],[[]],[[[7,[73,6]]],[[10,[[7,[6]],[7,[73,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,12],[[[9,[73]]],[[10,[9,[9,[73]]]]]],[73,12],[69,[[7,[74,6]]]],[70,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[[28,56,75],28],[[],28],[4,4],[[62,62],36],[[68,68],36],[[69,69],36],[[70,70],36],[[],36],[[],36],[[],36],[[],36],[[76,42]],[[4,28]],[[28,40],[[10,[41]]]],[[76,40],[[10,[41]]]],[[62,40],[[10,[41]]]],[[65,40],[[10,[41]]]],[[66,40],[[10,[41]]]],[[68,40],[[10,[41]]]],[[69,40],[[10,[41]]]],[[70,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[42],[42],[28,[[34,[6]]]],[[],43],[[],43],[[],43],[[],43],[[28,56],[[12,[57]]]],[[28,56],[[12,[57]]]],[[28,77],[[10,[28,77]]]],[[28,77],[[10,[28,62]]]],[62],[68],[69],[70],[74,61],[74,61],[[],61],[[],61],[74,61],[74,61],[28,28],[28,28],[28,28],[28,28],[[28,56],28],[28,28],[28,28],[[28,77,76]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,36],[69,36],[70,36],[28,36],[69,36],[70,36],[[],36],[28,28],[[],38],[[],78],[[],28],[[28,[0,[79,80]]],76],[[42,[81,[36]]]],[[],57],0,0,[28,28],[28,28],[28,28],[[28,77],[[12,[76]]]],[28],[76],[82,61],[82,61],[49,67],0,[[],67],0,[[],4],[4,4],[[28,[0,[79,80]]],28],[28],[28],[[],4],[[28,77],28],[[28,77],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[62,11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28],[[],4],0,[[],36],[[],38],[[],78],0,0,[[],4],[28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,48],[[83,42,24],84],[[]],[[]],[[]],[[85,86]],[87],[60,61],[60,61],[[],61],[[88,24]],[[48,24]],[[89,24]],[[90,24]],[[91,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[88,1],[[],1],[[],1],[48,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[89,1],[[],1],[90,1],[[],1],[[],1],[91,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[88,1],[[],1],[48,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[89,1],[[],1],[[],1],[90,1],[[],1],[91,1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[92,93],[92,93],[88,24],[48,24],[89,24],[90,24],[91,24],[88,24],[48,24],[89,24],[90,24],[91,24],0,[[[95,[94]],[96,[18]]]],0,[97,98],[87,98],[99,11],0,0,[83,11],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[100,28]],[48,48],[92,101],[18],[87,87],[88,88],[48,48],[84,84],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[86,86],[89,89],[90,90],[91,91],[83,83],[99,99],[108,108],[100,100],[48,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[48,84],[88,[[7,[24,6]]]],[48,[[7,[24,6]]]],[89,[[7,[24,6]]]],[90,[[7,[24,6]]]],[91,[[7,[24,6]]]],[48,48],[84,84],[48,84],[[88,88],109],[[48,48],109],[[105,105],109],[[89,89],109],[[90,90],109],[[91,91],109],0,[[32,33]],[[18,48],36],[92,92],[[88,[7,[110,6]],39]],[[111,88,[7,[110,6]],39]],[100,[[7,[98,6]]]],0,[[],88],[[],48],[[],111],[[],100],0,[92],[92],[[],[[10,[88]]]],[[],[[10,[102]]]],[[],[[10,[103]]]],[[],[[10,[86]]]],[[],[[10,[89]]]],[[],[[10,[90]]]],[[],[[10,[91]]]],0,[[]],[[]],[92,[[10,[92]]]],[[]],[[]],[[[7,[98,6]]],[[10,[[7,[6]],[7,[98,6]]]]]],[[[7,[110,6]]],[[10,[[7,[6]],[7,[110,6]]]]]],[[]],[[]],[[]],[[[7,[112,6]]],[[10,[[7,[6]],[7,[112,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[99,1],[[12,[84]]]],[92,12],[98,12],[110,12],[112,12],[[[9,[98]]],[[10,[9,[9,[98]]]]]],[[[9,[110]]],[[10,[9,[9,[110]]]]]],[[[9,[112]]],[[10,[9,[9,[112]]]]]],[92,12],[98,12],[110,12],[112,12],[92],[48],[84],[108,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[37],[37],[37],[37],[37],[[88,88],36],[[48,48],36],[[84,84],36],[[105,105],36],[[106,106],36],[[86,86],36],[[89,89],36],[[90,90],36],[[91,91],36],[[108,108],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[]],[[],12],[[48,38],[[12,[24]]]],[[48,39],[[12,[24]]]],[[48,39],[[12,[24]]]],[48,39],[[48,38],[[12,[24]]]],[107,106],[[[17,[87]]]],[[94,40],[[10,[41]]]],[[92,40],[[10,[41]]]],[[92,40],[[10,[41]]]],[[116,40],[[10,[41]]]],[[116,40],[[10,[41]]]],[[18,40],[[10,[41]]]],[[88,40],[[10,[41]]]],[[48,40],[[10,[41]]]],[[84,40],[[10,[41]]]],[[102,40],[[10,[41]]]],[[103,40],[[10,[41]]]],[[104,40],[[10,[41]]]],[[105,40],[[10,[41]]]],[[106,40],[[10,[41]]]],[[107,40],[[10,[41]]]],[[117,40],[[10,[41]]]],[[117,40],[[10,[41]]]],[[118,40],[[10,[41]]]],[[111,40],[[10,[41]]]],[[86,40],[[10,[41]]]],[[89,40],[[10,[41]]]],[[90,40],[[10,[41]]]],[[91,40],[[10,[41]]]],[[108,40],[[10,[41]]]],[[100,40],[[10,[41]]]],[88],[[111,88]],[87],[[[17,[87]]]],[[]],[[]],[[]],[119],[[],92],[[]],[[]],[[]],[[]],[117,116],[[]],[[]],[[]],[48,88],[78,88],[[]],[78,88],[84,88],[38,88],[86,88],[84,88],[89,88],[48,88],[[]],[[]],[48,84],[[]],[[]],[[]],[[]],[[]],[[]],[120,117],[[]],[[]],[[]],[38,86],[[]],[78,86],[78,86],[121,86],[122,86],[86,89],[[],89],[[]],[89,90],[122,90],[[]],[86,90],[[]],[[[12,[38]]],91],[[]],[[]],[[]],[[]],[[]],[24,[[12,[88]]]],[24,[[12,[48]]]],[[],83],[[],99],[42],[42],[42],[[18,48],12],[[83,42,84],[[12,[24]]]],[97,[[34,[103,6]]]],[[104,91],[[12,[54]]]],[[],121],[[]],[38,12],[38,12],[[87,123],105],[97,48],[87,48],[18,48],[87,[[12,[86]]]],[87,84],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[86,89],[87,105],[122,[[10,[107,117]]]],[[124,122],[[10,[107,117]]]],[[18,48],12],[[83,42,84],[[12,[24]]]],[[18,125]],[88,44],[48,44],[89,44],[90,44],[91,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[83,126,84],[[12,[24]]]],[83,11],[[97,38],36],[88],[48],[84],[106],[86],[89],[90],[91],[108],[48,88],[84,88],0,[18,127],[[83,42],127],[74,61],[[]],[[]],[[],61],[74,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[88,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[48,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[89,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[90,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[91,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[[7,[88,6]]],[[7,[24,6]]]],[[[7,[48,6]]],[[7,[24,6]]]],[[[7,[89,6]]],[[7,[24,6]]]],[[[7,[90,6]]],[[7,[24,6]]]],[[[7,[91,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,36],[98,36],[110,36],[112,36],[108,36],[122,36],[106,36],[107,36],[18,36],[[83,42],36],[122,36],[106,36],[107,36],[104,36],[48,36],[84,36],[108,36],[48,36],[84,36],[18,127],[48,47],[18,127],[86,[[12,[38]]]],0,[89,91],[18,39],[[83,42],39],[97,[[129,[[7,[128,6]]]]]],[87,48],[87,[[10,[[34,[84,6]],116]]]],0,0,[122,[[129,[[7,[128,6]]]]]],[[124,122],[[129,[[7,[128,6]]]]]],0,[87,84],[[48,18]],[87],0,[[],92],[[48,39],[[12,[38]]]],[[],92],[36,124],[[],85],[[],87],[[54,43],88],[106,107],[[121,[12,[78]]],86],[[122,[12,[38]]],86],[[88,88],[[12,[109]]]],[[48,48],[[12,[109]]]],[[105,105],[[12,[109]]]],[[89,89],[[12,[109]]]],[[90,90],[[12,[109]]]],[[91,91],[[12,[109]]]],[97,122],[86,122],0,0,[130],[130],[[],88],[97,128],[122,[[10,[[7,[127,6]],117]]]],[[124,122],[[10,[[7,[127,6]],117]]]],0,[88,[[12,[43]]]],[89,[[12,[43]]]],[90,[[12,[43]]]],[91,[[12,[43]]]],[88,50],[48,50],[89,50],[90,50],[91,50],[[[7,[88,6]]],51],[[[7,[48,6]]],51],[[[7,[89,6]]],51],[[[7,[90,6]]],51],[[[7,[91,6]]],51],[[88,24],[[12,[36]]]],[[48,24],[[12,[36]]]],[[89,24],[[12,[36]]]],[[90,24],[[12,[36]]]],[[91,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[88,53],[48,53],[89,53],[90,53],[91,53],[[]],[87],[18,12],[[83,42,84],[[12,[[7,[24,6]]]]]],[[18,39]],[92,93],[124,121],[82,61],0,[88,10],[102,10],[103,10],[86,10],[89,10],[90,10],[91,10],[18,48],[[88,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[48,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[89,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[90,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[91,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[83,42,84,24],84],[[97,85]],[[97,38,85],48],[18],[18],[116,[[12,[93]]]],[117,[[12,[93]]]],[89,90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[131,[[10,[106]]]],[[],10],[132,[[10,[107]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[88,38],[48,38],[89,38],[90,38],[91,38],[83,54],[99,54],0,[84,48],[[99,84],[[7,[24,6]]]],[84,48],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[17,[87]],[96,[18]]]],0,0,[[],[[10,[117]]]],[124,[[10,[117]]]],0,[122,[[10,[117]]]],[[124,122],[[10,[117]]]],[88,48],[88,84],[[54,43],84],[[[7,[98,6]]],87],[[85,[34,[86,6]]],85],[[85,86],85],0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],26],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[133,28]],[134,134],[[]],[[],[[7,[31,6]]]],[[],133],[[],135],[136],[136],[[]],[[]],[[]],[[]],[134,[[7,[74,6]]]],[26,36],[37],[[134,134],36],[[],36],[[134,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[42],[42],[[],43],0,[134],[74,61],[[],61],[74,61],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[]],[[]],[[]],[[]],[[]],[134,36],[134,36],[[136,84,38,38]],[82,61],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,[[],1],[[],1],[2],[[]],[[]],[[137,28]],[[],137],[[],138],[[[96,[139]],[17,[18]]]],[[]],[[]],[42],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[[96,[139]]]],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[35],[35,140],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],142],[[143,28]],0,[[],144],[145,145],[141,141],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],146],[[],[[12,[39]]]],[[]],[141],[[],147],[[],145],[[],148],[[],149],[[],143],[49,150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151],[149],[49,152],[[147,40],[[10,[41]]]],[[145,40],[[10,[41]]]],[[141,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[42],[153,154],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,36],[[153,153]],[[149,97],[[129,[[7,[128,6]]]]]],[153,154],[[],155],[36,156],[151],[49,157],[[147,48],[[48,[151]]]],[151],[[[17,[148]],[12,[[17,[18]]]],[96,[147]],[96,[[18,[151]]]]]],[[147,48,145],[[48,[151]]]],0,0,[[],158],[[49,35],[[155,[[150,[140]]]]]],[[],153],[[]],[[151,35]],[[151,35]],[49,159],[151,35],[35,160],0,[151],[[],161],[49,[[155,[162,[152,[162]]]]]],[49,162],[[],35],[[],163],[[]],[[]],[[],144],[151],[[],[[12,[49]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],38],[[],38],[[],54],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[151,35],0,[[145,35],145],[[145,35],145],[[]],0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[21,24]],[[],1],[[],1],[[],1],[21,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[21,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[21,38],[21,24],[21,24],[21,38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[164,28]],[[165,28]],[[166,28]],[[]],[[]],[21,21],[167,167],[168,168],[169,169],[21,30],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[21,[[7,[24,6]]]],[[21,21],109],[[32,33]],0,[168],[[],21],[[],168],[[],164],[[],165],[[],169],[[],166],[21],[[],[[10,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],0,0,[[21,21],36],[[],36],[113,[[10,[114,115]]]],[[170,171]],[[21,38],[[12,[24]]]],[[21,39],[[12,[24]]]],[[21,39],[[12,[24]]]],[21,39],[[21,38],[[12,[24]]]],[[170,171],36],[[21,40],[[10,[41]]]],[[21,40],[[10,[41]]]],[[172,40],[[10,[41]]]],[[]],[38,21],[[]],[78,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[21]]]],[42],[42],[42],[42],[42],[42],[[]],[38,12],[38,12],[[],43],[21,44],[[],45],[21],[[42,153,153]],[42,173],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[21,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[21,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,47],[[],36],0,0,0,0,[21],0,0,[[21,39],[[12,[38]]]],[[[175,[[174,[38]]]]],21],[[21,21],[[12,[109]]]],0,0,[21,50],[[[7,[21,6]]],51],[[21,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[21,53],[21,10],[[21,[175,[[174,[38]]]]]],[[21,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[176,177]],[177],[[]],0,[[]],[[]],[[]],[[]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[21,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[176,178]],[179],[39,168],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[2],0,[[]],[[]],[[180,28]],0,0,0,[[],180],[[]],[[]],[42],0,0,[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],0,0,0,[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,[[181,24]],[[],1],[[],1],[[],1],[181,1],[[],1],[[],1],[181,1],[[],1],[2],[2],[2],[181,24],[181,24],[[]],[[]],[[]],[[]],[[]],[[]],[[182,28]],[181,181],[181,30],[[]],[[],[[7,[31,6]]]],[181,[[7,[24,6]]]],[[32,33]],[[],181],[[]],[[]],[[]],[[],12],[[181,38],[[12,[24]]]],[[181,39],[[12,[24]]]],[[181,39],[[12,[24]]]],[181,39],[[181,38],[[12,[24]]]],[[]],[[]],[[]],[[]],[42],[[]],[38,12],[38,12],[181,44],[[],45],[183,[[34,[184,6]]]],0,[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[181,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[181,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[181,47],0,[[181,39],[[12,[38]]]],[42,183],[181,50],[[[7,[181,6]]],51],[[181,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[181,53],[[183,185,186,42],[[10,[187]]]],0,[[181,[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],44],[181,38],[[],12],[[],12],[[],12],[[183,42]],0,0,0,0,0,[[188,24]],[[189,24]],[[],1],[188,1],[[],1],[189,1],[188,1],[[],1],[189,1],[[],1],[2],[2],[188,24],[189,24],[188,24],[189,24],[[]],[[]],[[]],[[]],[188,188],[189,189],[188,29],[189,190],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[188,[[7,[24,6]]]],[189,[[7,[24,6]]]],[[],188],[[],189],[189],[189],[[],[[10,[188]]]],[[]],[[]],[113,[[10,[114,115]]]],[[],189],[[188,38],[[12,[24]]]],[[189,39],[[12,[24]]]],[[188,39],[[12,[24]]]],[[188,39],[[12,[24]]]],[188,39],[189,39],[[188,38],[[12,[24]]]],[[189,39],[[12,[24]]]],[[188,40],[[10,[41]]]],[[189,40],[[10,[41]]]],[[]],[[]],[42],[42],[39,12],[39,12],[188,44],[189,44],[[],45],[[],45],[[188,38],[[12,[39]]]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[188,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[189,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[188,6]]],[[7,[24,6]]]],[[[7,[189,6]]],[[7,[24,6]]]],[[]],[[]],[188,46],[189,191],[[188,39],[[12,[38]]]],[188,[[12,[43]]]],[188,50],[189,50],[[[7,[188,6]]],51],[[[7,[189,6]]],51],[[188,24],[[12,[36]]]],[[189,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[188,53],[189,53],[188,10],[[188,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[189,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],44],[[],44],[188,38],[189,38],[[],12],[[],12],[188,39],[188,38],[188,55],0,0,0,0,0,0,[[192,24]],[[],1],[[],1],[[],1],[192,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[192,1],[[],1],[2],[2],[2],[2],[2],[192,24],[192,24],[193,12],0,[193,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[194,28]],[193,195],0,0,0,0,[192,192],[192,30],[[]],[[],[[7,[31,6]]]],[192,[[7,[24,6]]]],[[32,33]],[[],192],[[],196],[[]],[[]],[[]],[[]],[[]],[193,197],0,[193,170],0,[[],12],[[198,[200,[[20,[[199,[192]]]]]]]],[[192,38],[[12,[24]]]],[[192,39],[[12,[24]]]],[[192,39],[[12,[24]]]],[192,39],[[192,38],[[12,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],0,[[]],[38,12],[38,12],[192,44],[[],45],0,0,[201,[[34,[184,6]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[192,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[192,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[192,47],[[192,39],[[12,[38]]]],[42,201],[35,196],0,0,[192,50],[[[7,[192,6]]],51],[[192,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[192,53],[[201,185,186,42],[[10,[187]]]],[[192,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[193],0,[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[192,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[201,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[202,24]],[[203,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[202,1],[[],1],[[],1],[203,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[202,1],[[],1],[203,1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[202,24],[203,24],[202,24],[203,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[204,28]],[205,195],[206,195],[207,195],0,0,0,0,[202,202],[203,203],[202,30],[203,29],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[202,[[7,[24,6]]]],[203,[[7,[24,6]]]],[[32,33]],[[],202],[[],203],[[],208],0,[[],[[10,[203]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[205,197],[206,197],[207,197],0,0,0,[205,170],[206,170],[207,170],0,0,0,[113,[[10,[114,115]]]],[[],12],[[198,[200,[[20,[[199,[202]]]]]]]],[[202,38],[[12,[24]]]],[[203,38],[[12,[24]]]],[[202,39],[[12,[24]]]],[[203,39],[[12,[24]]]],[[202,39],[[12,[24]]]],[[203,39],[[12,[24]]]],[202,39],[203,39],[[202,38],[[12,[24]]]],[[203,38],[[12,[24]]]],[[203,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],0,[[]],[38,12],[38,12],[202,44],[203,44],[[],45],[[],45],0,0,[[203,38],[[12,[39]]]],[209,[[34,[184,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[202,6]]],[[7,[1,6]]]],[[[7,[203,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[202,6]]],[[7,[24,6]]]],[[[7,[203,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[202,47],[203,46],[[202,39],[[12,[38]]]],[[203,39],[[12,[38]]]],[42,209],0,0,0,[[198,[96,[210]],[17,[211]],[17,[212]],20]],0,[203,[[12,[43]]]],[202,50],[203,50],[[[7,[202,6]]],51],[[[7,[203,6]]],51],[[202,24],[[12,[36]]]],[[203,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[202,53],[203,53],[[209,185,186,42],[[10,[187]]]],[203,10],[[202,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[203,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[]],[[]],[205],[206],[207],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[202,38],[203,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[209,42]],[203,39],[203,38],[203,55],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],213],0,0,0,0,0,0,0,0,0,0,0,0,0,[[214,24]],[[215,24]],[[],1],[[],1],[214,1],[[],1],[[],1],[[],1],[215,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[214,1],[[],1],[215,1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[214,24],[215,24],[214,24],[215,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[216,28]],[214,214],[215,215],[217,217],[214,29],[215,30],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[214,[[7,[24,6]]]],[215,[[7,[24,6]]]],[[32,33]],[[32,33]],[[],215],[218],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[37],[37],0,0,0,[[214,214],36],[[217,217],36],[[],36],[[],36],[[],12],[[214,38],[[12,[24]]]],[[215,38],[[12,[24]]]],[[214,39],[[12,[24]]]],[[215,39],[[12,[24]]]],[[214,39],[[12,[24]]]],[[215,39],[[12,[24]]]],[214,39],[215,39],[[214,38],[[12,[24]]]],[[215,38],[[12,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[214]]]],[24,[[12,[215]]]],[42],[42,218],[[]],[[]],[38,12],[38,12],[[],43],[[],43],[214,38],[214,44],[215,44],[[],45],[[],45],[214],[217],[[214,38],[[12,[39]]]],[219,[[34,[184,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[214,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[215,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[214,6]]],[[7,[24,6]]]],[[[7,[215,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,46],[215,47],[[214,39],[[12,[38]]]],[[215,39],[[12,[38]]]],[42,219],0,[[198,[17,[220]],[96,[[221,[218]]]],[17,[218]],20]],[214,[[12,[43]]]],[214,50],[215,50],[[[7,[214,6]]],51],[[[7,[215,6]]],51],[[214,24],[[12,[36]]]],[[215,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[214,53],[215,53],[[219,185,186,42],[[10,[187]]]],[[214,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[215,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[218,222],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[214,38],[215,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[219,42]],[214,39],[214,38],[214,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[223,24]],[[224,24]],[[],1],[[],1],[223,1],[[],1],[224,1],[[],1],[[],1],[[],1],[[],1],[[],1],[223,1],[224,1],[[],1],[[],1],[2],[2],[2],[2],[2],[223,24],[224,24],[223,24],[224,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[225,195],[226,195],[223,30],[224,30],[223,[[7,[24,6]]]],[224,[[7,[24,6]]]],[[32,33]],[[32,33]],[[32,33]],[[],223],[[],224],0,0,0,[[]],[[]],[[]],[[]],[[]],[225,197],[226,197],0,0,[225,170],[226,170],0,0,[[223,38],[[12,[24]]]],[[224,38],[[12,[24]]]],[[223,39],[[12,[24]]]],[[224,39],[[12,[24]]]],[[223,39],[[12,[24]]]],[[224,39],[[12,[24]]]],[223,39],[224,39],[[223,38],[[12,[24]]]],[[224,38],[[12,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[[]],[[]],[[]],[38,12],[38,12],[38,12],[38,12],[223,44],[224,44],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[223,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[224,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[223,6]]],[[7,[24,6]]]],[[[7,[224,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[223,47],[224,47],[[223,39],[[12,[38]]]],[[224,39],[[12,[38]]]],0,0,0,0,[223,50],[224,50],[[[7,[223,6]]],51],[[[7,[224,6]]],51],[[223,24],[[12,[36]]]],[[224,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[223,53],[224,53],[[223,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[224,[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,[[]],[[]],[225],[226],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[223,38],[224,38],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[],1],[[],1],[2],[[]],[[]],[[]],[[]],[227,[[34,[184,6]]]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[42,227],[[227,185,186,42],[[10,[187]]]],[[],10],[[],10],[[],11],[[],12],[[227,42]],0,0,0,0,0,0,0,0,0,[[228,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[228,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[228,1],[2],[2],[2],[2],[2],[2],[[],26],[228,24],[228,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[229,28]],[230,230],[228,228],[228,29],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[228,[[7,[24,6]]]],[[32,33]],[[32,33]],[[],228],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],[[230,230],36],[[],36],[[],12],[[228,38],[[12,[24]]]],[[228,39],[[12,[24]]]],[[228,39],[[12,[24]]]],[228,39],[[228,38],[[12,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,231],[42],[[]],[[]],[[],43],[228,44],[[],45],[230],[[228,38],[[12,[39]]]],[232,[[34,[184,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[228,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[228,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[228,36],[228,46],[[228,39],[[12,[38]]]],[42,232],[[198,[17,[220]],[96,[[221,[231]]]],[17,[231]],20]],[228,[[12,[43]]]],[228,50],[[[7,[228,6]]],51],[[228,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[228,53],[[232,185,186,42],[[10,[187]]]],[[228,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[231,222],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[228,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[232,42]],[228,39],[228,38],[228,55],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[233,28]],[234,234],[235,235],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[32,33]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[37],[37],[[234,234],36],[[235,235],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,236],[[]],[[],43],[[],43],[234],[235],[237,[[34,[184,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42,237],[[237,185,186,42],[[10,[187]]]],[236,222],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[237,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[139,238]],[[238,239]],[[139,138]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[238,[[12,[239]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[240,28]],[[241,28]],[[242,28]],[[243,28]],[[244,28]],[238],[138,138],[[]],[[],[[7,[31,6]]]],[[138,138],109],0,[[],240],[[],138],[[],139],[[],241],[[],242],[[],243],[[],244],[[[96,[139]],245]],[[[96,[139]],[17,[16]],[17,[169]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[238,[[12,[49]]]],[26,36],[37],[[138,138],36],[[],36],0,[[[34,[138,6]]],240],[[138,40],[[10,[41]]]],[[246,40],[[10,[41]]]],[[238,40],[[10,[41]]]],[[139,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[247,138],[42],[42],[42],[42],[42],[42],[42],[[139,138],[[12,[238]]]],[[],43],[238,39],[[139,138],[[12,[246]]]],[[139,138],[[12,[238]]]],[138],[238,39],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[139,127],[238,[[12,[246]]]],[238,127],0,[[138,[175,[[174,[38]]]],39],238],[[138,138],[[12,[109]]]],[[[96,[139]]]],[[[96,[139]]]],[238,[[12,[239]]]],0,0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[238,[[12,[239]]]],0,[238,127],0,[[238,239],238],[[238,[175,[[174,[38]]]]],238],0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[[]],[[],[[10,[248]]]],[[248,40],[[10,[41]]]],[[248,40],[[10,[41]]]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[]],[130],[[],78],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[249,39],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[250,250],[251,251],[252,252],[253,253],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[252,252],109],[176,127],[[176,254],36],[[],255],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[26,36],[37],[37],[176,255],[249,176],[176],[256,170],[[176,250],171],[[250,250],36],[[251,251],36],[[252,252],36],[[253,253],36],[[],36],[[],36],[[],36],[[],36],[[250,40],[[10,[41]]]],[[251,40],[[10,[41]]]],[[252,40],[[10,[41]]]],[[253,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[249,252],[[249,251],[[12,[176]]]],[[255,257],[[12,[251]]]],[[176,254],[[12,[253]]]],[[],43],[[],43],[[258,42,153]],[[255,257],[[12,[[12,[251]]]]]],[[255,257],[[12,[[12,[251]]]]]],[39,253],[[176,254],[[12,[259]]]],[251],[253],[176,251],[[249,251]],[250,39],[[249,251]],[[42,258]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[176,36],[249,127],[176,39],[249,39],[39,250],[[252,252],[[12,[109]]]],[176,127],[253,39],[176,127],[176,260],[256,171],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[257,257],[[]],[[],[[7,[31,6]]]],[261],[[],262],[[]],[[]],[[]],[26,36],[37],[[257,257],36],[[],36],[[257,40],[[10,[41]]]],[[]],[[]],[[]],[42],[[262,257],[[12,[261]]]],[[],43],[[262,11],[[12,[257]]]],[[258,42,153]],[39,257],[257],[261,257],[257,39],[[42,258]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[257,39],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[2],[263,[[265,[264]]]],[263,[[266,[264]]]],[[]],[[]],[[]],[263],[[]],[[263,40],[[10,[41]]]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[9,[[9,[1]]]],[263,[[265,[264]]]],[[]],[[],36],[263,36],[[],36],[263,36],[[],153],[263,153],[263,263],[[]],[263],[[]],[263],[153],[[263,153]],[[],10],[[],10],[[],11],[[],12],[263,267],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[259,259],[254,254],[268,268],[269,269],[270,270],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[254,254],109],[32,[[12,[254]]]],[[],259],[[],32],[271],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[272,12],[26,36],[26,36],[37],[[259,259],36],[[254,254],36],[[],36],[[],36],[[273,40],[[10,[41]]]],[[259,40],[[10,[41]]]],[[272,40],[[10,[41]]]],[[254,40],[[10,[41]]]],[[32,40],[[10,[41]]]],[[268,40],[[10,[41]]]],[[269,40],[[10,[41]]]],[[270,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[81,[271]]],254],[271,254],[[]],[[]],[[]],[[]],[[]],[42,271],[42],[42],[[],43],[[32,11],[[12,[254]]]],[[32,254],[[12,[272]]]],[[32,254],272],[[32,254],[[12,[38]]]],[[258,42,153]],[[32,11],[[12,[254]]]],[39,254],[254],[272,254],[254,39],[[32,33],254],[[32,33,273],254],[32,254],[32,254],[[42,258]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[270,153,153],36],[[270,153,153],36],[32,36],[[268,153,153],36],[272,36],[32,127],[272,274],[32,39],[273,38],[272,38],[[],273],[39,254],[153,268],[[],273],[[[175,[[174,[38]]]],259,274,12],273],[[254,254],[[12,[109]]]],[32,[[12,[254]]]],[[268,153]],[[270,153]],[254,39],[273,259],[272,259],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[273,[[12,[11]]]],[[],11],[[],11],[[],11],[[],11],[272,[[12,[11]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,[245,170],[[245,170],[[12,[275]]]],[[170,24]],0,0,[[],1],[[],1],[[],1],[[],1],[170,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[170,1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[],26],[170,24],[170,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[245],[170,170],[275,275],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[170,[[7,[24,6]]]],[[170,170],109],[[245,170],36],[[],276],[[],[[10,[170]]]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],[[276,170],[[279,[170,170,277,278]]]],[[170,170],36],[[275,275],36],[[],36],[113,[[10,[114,115]]]],[[170,171]],[[245,75]],[[245,39]],[245],[[280,40],[[10,[41]]]],[[280,40],[[10,[41]]]],[[276,40],[[10,[41]]]],[[170,40],[[10,[41]]]],[[245,40],[[10,[41]]]],[[275,40],[[10,[41]]]],[[245,170],[[12,[275]]]],[[]],[[]],[[]],[281,170],[[]],[[]],[[]],[43,170],[153,170],[24,[[12,[170]]]],[42],[170,153],[[276,170],[[10,[170,280]]]],[[245,170],[[12,[275]]]],[[],43],[[258,42,153]],[39,170],[170,44],[[],45],[170],[[]],[170,153],[[42,153,153]],[42],[[42,258]],[[276,170,170],[[12,[170]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[170,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[[7,[170,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[276,36],[245,36],[276,127],[276,127],[276,39],[245,153],[276,[[10,[280]]]],[[],36],[282,12],[[170,170],[[12,[109]]]],[130],[170,[[12,[43]]]],[170,50],[[[7,[170,6]]],51],[[170,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[170,53],[[276,170],[[12,[170]]]],[[245,153]],[[245,153],282],[245,170],[[245,153],[[12,[170]]]],[170,10],[[170,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[176,177]],[177],[[]],[282],[170,39],0,0,[170,43],[[]],[[]],[[],78],[245,39],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[170,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[176,178]],[179],[276,127],0,0,0,0,0,0,0,0,[[258,42]],[[258,42]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[283],[284],[[285,283]],[286,286],[[]],[[],[[7,[31,6]]]],[[286,286],109],[287,39],[288,39],[[],283],[[],285],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[283,127],[26,36],[37],[[286,286],36],[[],36],[283],[[286,40],[[10,[41]]]],[[286,40],[[10,[41]]]],[[283,40],[[10,[41]]]],[[284,40],[[10,[41]]]],[[285,40],[[10,[41]]]],[[288,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[[283,39],12],[[],43],[[258,42,153]],[[258,42,153]],[283,285],[283,285],[286],0,[[42,258]],[[42,258]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[283,36],[284,36],[[285,283],36],[284,287],[[285,283],287],[283,289],[284,288],[[285,283],288],[287,39],[283,39],[284,39],[[285,283],39],[288,39],[[285,283],39],[[285,283],288],[[176,258]],[[176,258]],[287,12],[288,12],[283,39],[283,39],[[286,286],[[12,[109]]]],[283],[95],[[95,123]],[283],[95],[287],[288],[[]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[283],[[[96,[283]]]],[288,287],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,290],[60,291],[60,292],[60,61],[60,290],[60,291],[60,292],[[],61],[[],290],[[],291],[[],292],[42],[42],[42],[[],178],[60,61],[60,290],[60,291],[60,292],[[]],[[],291],[[],292],[153],[[],178],[293],[[],[[34,[[7,[74,6]],6]]]],[[],[[7,[74,6]]]],[[[293,[10]]]],[42],[[],153],[293],[74,61],[74,290],[74,291],[74,292],[[],61],[74,61],[74,290],[74,291],[74,292],[293],[42],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],153],[[],[[174,[38]]]],[[],290],[[],294],[[],295],[[],75],[[],75],[[],75],[[]],[42],[82,61],[82,290],[[],75],[42],[[]],[[]],[153],[153],[[],75],[[],75],[[],75],[[],11],[[[293,[10]]]],[42],[[]],[[[293,[10]]]],0,0,0,0,0,0,0,0,[296,[[298,[297]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[179,178],[179,178],[[299,179]],[178],[179],[179],[179],[178],[179],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[300,300],[300,300],0,[[301,39],301],0,[[302,301],302],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178],[299],[303,303],[178,178],[179,179],[299,299],[301,301],[304,304],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[299,178],[[],178],[[],179],[[],299],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[[178,178],36],[[179,179],36],[[304,304],36],[[],36],[[],36],[[],36],[[178,178]],[[179,179]],[[299,299]],[[179,179]],[[179,179]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[[170,171]],[305,12],[306,12],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[[170,171],36],[39,301],[[303,40],[[10,[41]]]],[[300,40],[[10,[41]]]],[[178,40],[[10,[41]]]],[[179,40],[[10,[41]]]],[[299,40],[[10,[41]]]],[[304,40],[[10,[41]]]],[[304,40],[[10,[41]]]],[[307,40],[[10,[41]]]],[[307,40],[[10,[41]]]],[302],[[300,42]],[302],[[300,42]],[302],[[300,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[179,299],[[]],[[]],[[]],[[]],[[]],[42,300],[42],[42],[42],[[300,42,170],[[10,[304]]]],[[178,178],[[34,[6]]]],[[179,179],[[34,[6]]]],[[299,299],[[34,[6]]]],[[299,179],[[34,[6]]]],[[300,42,170],[[10,[304]]]],[[300,42],[[10,[304]]]],[[300,42],[[10,[304]]]],[[300,42,170],[[10,[304]]]],[258],[[300,42],[[10,[307]]]],[[300,42],[[10,[307]]]],[[300,42],[[10,[307]]]],[[300,42,153,153],[[10,[307]]]],[[300,42,170],[[10,[304]]]],[[178,39]],[178,36],[178,36],[178,36],[[]],[[]],[[42,258]],[[42,153,153]],[[42,254,153,153],308],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,254,153,153]],[[42,254,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,153,153]],[[42,254,153,153]],[[42,254,153,153]],[42],[42,254],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42,254],[42,254],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42,254],[42,254],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[303,36],[303,36],[[178,178],36],[[179,179],36],[[299,299],36],[[300,42,153,153],36],[[300,42],309],[[300,42],306],[[300,42],306],[[300,42],306],[[300,42],309],[[300,42],305],[[300,42],305],[[300,42],309],[[300,42],309],[309,39],[[],36],[254,36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[254,36],[254,36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[254,36],[254,36],[[301,39],301],[[301,39],301],[42,300],[[],178],[[],301],[[300,176]],[309,12],[305,12],[306,12],[[300,42],302],[[300,42],302],[130],[130],[178],[179],[178,127],[178,127],[[176,177]],[[308,254,176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[254,176,177]],[[254,176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[176,177]],[[254,176,177]],[[254,176,177]],[177],[[308,254,177]],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[[254,177]],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[177],[[254,177]],[[254,177]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[300,42]],[[300,42]],[309],[305],[306],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[176,178]],[[254,176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[254,176,178]],[[254,176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[176,178]],[[254,176,178]],[[254,176,178]],[[300,42]],[179],[[254,179]],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[[254,179]],[[254,179]],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[179],[[254,179]],[[254,179]],[[300,42]],[178,127],0,0,0,0,0,[[310,311,24]],[[312,42,24]],0,0,[[310,311,24]],[[312,42,24]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[310,310],[313,313],[312,312],[314,314],[315,315],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[310,316],36],0,[[310,42,42,170,170]],[[312,42,42]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],310],[[],312],[[],315],[[310,311,24]],[[312,42,24]],0,0,[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[315,42,276],[[10,[280]]]],[313,310],[[],313],[[312,314],312],[[],314],[[310,316],[[12,[24]]]],[[312,42],[[12,[24]]]],0,0,[[310,311],[[12,[[267,[24]]]]]],[[312,42],[[12,[[267,[24]]]]]],0,[[310,317],[[12,[[267,[24]]]]]],[[312,126],[[12,[[267,[24]]]]]],0,0,[[310,311]],[[312,42]],0,0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,[[258,42]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[281,281],[[]],[[],[[7,[31,6]]]],[[],318],[[],319],[318],[318],[[]],[[]],[[]],[[]],[[281,40],[[10,[41]]]],[[318,40],[[10,[41]]]],[[319,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[42],[42],[[319,[175,[254]]],[[12,[283]]]],[[258,42,153]],[[258,42,153]],[[42,258]],[[42,258]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[320],[[]],[[]],[[]],[[]],[320,[[324,[[323,[[322,[[321,[[287,[281]]]]]]]]]]]],[[],319],[[176,258]],[[319,[175,[254]],170]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[319],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[57,58],57],[[57,59],57],[60,61],[60,290],[[61,60],61],[[290,60],290],[[291,60],291],[60,291],[[292,60],292],[60,292],[60,61],[60,61],[60,61],[60,290],[[61,60],61],[[290,60],290],[[291,60],291],[60,291],[[292,60],292],[60,292],[60,61],[60,61],[[],61],[[],290],[61,61],[290,290],[291,291],[[],291],[292,292],[[],292],[[],61],[[],61],[42],[42],[[57,42]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[60,61],[60,290],[[61,60],61],[[290,60],290],[[291,60],291],[60,291],[[292,60],292],[60,292],[60,61],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[291,291],[[],291],[292,292],[[],292],[325,325],[326,326],[327,327],[328,328],[329,329],[330,330],[331,331],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],0,[[57,71],57],[[57,72],57],[[332,56],36],[[],333],[[],57],[[],326],[[],334],[[],335],[[],336],[[],332],[[],328],[[],337],[[],338],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[74,6]]]],[325,[[7,[74,6]]]],[331,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[[74,74],36],[[325,325],36],[[336,336],36],[[327,327],36],[[56,56],36],[[329,329],36],[[330,330],36],[[331,331],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[325,40],[[10,[41]]]],[[339,40],[[10,[41]]]],[[339,40],[[10,[41]]]],[[327,40],[[10,[41]]]],[[328,40],[[10,[41]]]],[[329,40],[[10,[41]]]],[[330,40],[[10,[41]]]],[[331,40],[[10,[41]]]],[[337,40],[[10,[41]]]],[[338,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[332,56],[[12,[57]]]],[57,336],[[],43],[[],43],[[],43],[[],43],[[332,56],[[12,[57]]]],[74],[325],[56],[329],[330],[331],[74,61],[74,290],[[61,74],61],[[290,74],290],[[291,74],291],[74,291],[[292,74],292],[74,292],[74,61],[74,61],[[]],[[],61],[61,61],[[],61],[[],61],[74,61],[74,290],[[61,74],61],[[290,74],290],[[291,74],291],[74,291],[[292,74],292],[74,292],[74,61],[74,61],[[57,42],[[10,[339]]]],[[332,56,57],[[12,[57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[331,36],[[],36],[325,36],[331,36],[[],333],[[],57],[[],326],[[],334],[[],335],[[],332],[[],328],[[],290],[290,290],[130],[[332,56],[[12,[57]]]],[[332,56],12],[[57,42]],[42],[82,61],[82,290],[[61,82],61],[[290,82],290],[82,61],[82,61],[338],[[57,36],57],[[57,328],57],[[57,74],57],[[57,336],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[328,327],328],[[328,327],328],0,0,0,0,0,0,[[],294],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[340,39],[341],[340],[342],[343],[260,260],[171,171],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[177,39],[[344,170],36],[340,36],[[],345],[[],341],[[],340],[[],342],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[346],[26,36],[26,36],[[],260],[177],[177,39],[177,39],[[260,260],36],[[171,171],36],[[],36],[[],36],[[344,40],[[10,[41]]]],[[340,40],[[10,[41]]]],[[260,40],[[10,[41]]]],[[171,40],[[10,[41]]]],[[343,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[42],[[345,260],[[12,[177]]]],[[341,254],[[12,[346]]]],[[344,170],[[12,[[266,[264]]]]]],[340,12],[[342,254],[[12,[344]]]],[[343,171],12],[[344,170],[[12,[347]]]],[[343,171],[[12,[347]]]],[343],[[343,171],347],[[344,170],[[12,[347]]]],[[343,171],[[12,[347]]]],[343],[[343,171],347],[[177,254],[[12,[343]]]],[346,[[12,[[266,[264]]]]]],[[343,171],[[12,[[266,[264]]]]]],[[343,171],[[12,[[265,[264]]]]]],[343,[[266,[264]]]],[343],[[343,171],[[266,[264]]]],[340,12],[[342,254],[[12,[344]]]],[[342,272],344],[[340,125]],[39],[346,[[12,[270]]]],[[344,170],[[12,[270]]]],[[343,171],[[12,[270]]]],[[343,171],270],[[344,170],12],[[177,254],36],[346,253],[[345,260]],[260,39],[171,39],[[345,260]],[340,127],[340],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177,36],[345,36],[341,36],[344,36],[340,36],[343,36],[346,36],[343,274],[177,127],[345,[[348,[177]]]],[341,127],[340,127],[340,127],[345,39],[341,39],[344,39],[340,39],[343,39],[[],340],[39,260],[39,171],0,[340,12],0,[[],39],0,0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[340,127],[340,127],[39,340],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[349,349],[198],[[349,170],349],[60,290],[60,290],[60,290],[60,290],[60,290],[60,290],[[],290],[[],290],[[],290],[[258,42]],[[350,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[258,42]],[[351,258,42]],[[351,42]],[[258,42]],[[258,42]],[42],[[352,42]],[[353,42]],[[295,42]],[[],178],[352,178],[353,178],[295,178],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[96],[354],[17],[96],[354],[355,38],[[]],[[]],[60,290],[60,290],[60,290],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[96],[354],[356,153],[153],[[352,153]],[[353,153]],[[295,153]],[349,349],[17,17],[258,258],[[]],[[],[[7,[31,6]]]],[[357,125]],[349,198],[[],178],[352,178],[353,178],[295,178],[[20,170],36],[[],351],[352,[[34,[[7,[74,6]],6]]]],[353,[[34,[[7,[74,6]],6]]]],[[],[[34,[[7,[74,6]],6]]]],[295,[[34,[[7,[74,6]],6]]]],[17],[96],[354],[81],[358],[359],[355],[360],[96],[354],[81],[358],[360],[349],[349],[349],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[[198,170],349],0,0,0,[[361,361],36],[[],36],[[17,40],[[10,[41]]]],[[96,40],[[10,[41]]]],[[354,40],[[10,[41]]]],[[20,40],[[10,[41]]]],[[362,40],[[10,[41]]]],[[81,40],[[10,[41]]]],[[359,40],[[10,[41]]]],[[355,40],[[10,[41]]]],[[355,40],[[10,[41]]]],[[363,40],[[10,[41]]]],[[364,40],[[10,[41]]]],[[365,40],[[10,[41]]]],[[361,40],[[10,[41]]]],[[361,40],[[10,[41]]]],[[356,40],[[10,[41]]]],[[20,75]],[[20,75]],[[]],[96,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[354,359],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,350],[42],[[350,42]],[[20,170],[[10,[304]]]],[[20,170],[[10,[361]]]],[[20,170],[[10,[267,361]]]],[[20,170],[[10,[267,361]]]],[[198,170],[[12,[349]]]],[[20,170],[[10,[304]]]],[[],153],[352,153],[353,153],[295,153],[[350,42]],[[350,42]],[20,[[10,[304]]]],[20,[[10,[304]]]],[[350,42]],[[20,170],[[10,[304]]]],[[198,170],349],[258],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[258],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[258],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[[258,42,153]],[20,[[10,[307]]]],[20,[[10,[307]]]],[[20,170],[[10,[304]]]],[[350,42]],[349,170],[74,290],[74,290],[74,290],[[]],[74,290],[74,290],[74,290],[[42,258]],[[42,258]],[[42,258]],[198],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[[42,258]],[42],[[352,42]],[[353,42]],[[295,42]],[[349,366],349],[[349,39],349],[198],[198],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],290],[[],290],[[],290],[17],[96],[354],[360],[17],[96],[96],[20],[20],[81],[81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,36],[96,36],[354,36],[359,36],[17,36],[96,36],[354,36],[359,36],[20,36],[[],36],[352,36],[353,36],[295,36],[[],36],[352,36],[353,36],[295,36],[258,36],[20,309],[[20,170],367],[20,306],[20,306],[20,306],[[20,170],368],[20,309],[20,305],[20,305],[20,305],[20,309],[20,309],[356,153],[17,153],[96,153],[354,153],0,[349],[20],[20],[[96,125],267],[[354,125],267],[[350,42],36],[350,258],[[],[[174,[38]]]],[352,[[174,[38]]]],[353,[[174,[38]]]],[355,38],[295,[[174,[38]]]],[258,38],[42,350],[[[174,[38]]],295],[[351,42],198],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[176,258]],[[351,245],198],[[],290],[[],290],[[],290],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[369],[20,302],[20,302],0,0,[[],295],[[],295],[[],295],[[],295],[130],[351],[349,349],[96,267],[354,267],[349,349],[349,349],[349,349],[349,349],[198],[349,349],0,[42],[[]],[[352,42]],[42],[[295,42]],[82,290],[82,290],[82,290],[42],[[352,42]],[[353,42]],[[295,42]],[96],[354],[96],[354],[153],[[352,153]],[[353,153]],[[295,153]],[[96,153]],[[354,153]],[258],[[349,170],349],[[349,170],349],[20],[20],[198,349],[198],[198,349],[[]],[20,20],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[352,11],[[],11],[[],11],[[],11],[[],11],[[],11],[353,11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[295,11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[42],[[352,42]],[[353,42]],[[295,42]],[[350,42]],[[349,125],349],[170,370],[42],[[170,42]],[[370,42]],[[371,42]],[[372,42]],[[373,42]],[[374,42]],[[375,42]],[[376,42]],[[377,42]],[[378,42]],[[363,42]],[[364,42]],[[365,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[311,170],311],[[42,57,56]],[311,176],[316,176],[42,249],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[267],[379],[267],[42,126],[42,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,262],[267],[42,380],[42,153],[42],[42],[42],[42],[42],[316,316],[381,381],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[42,[[12,[254]]]],[42,32],[311,36],[316,36],[[311,254],36],[[316,254],36],[42,36],[42,36],[[311,11],36],[[316,11],36],[[],42],[379],[267],[382],[383],[267],[383],[311],[[42,170],36],[311],[311],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[384],[380],[382],[383],[26,36],[37],[42,245],[42,245],[[42,170],316],[[42,170],311],[[381,381],36],[[],36],[[170,171]],[[379,40],[[10,[41]]]],[[267,40],[[10,[41]]]],[[42,40],[[10,[41]]]],[[381,40],[[10,[41]]]],[267,379],[[]],[[]],[96,267],[354,267],[[]],[[]],[[]],[[]],[[]],[[]],[311,316],[[]],[[]],[42],[42],[311,12],[[42,170],12],[316,12],[[311,254],[[12,[[266,[264]]]]]],[[42,170,254],[[12,[[266,[264]]]]]],[[316,254],[[12,[[266,[264]]]]]],[311,[[12,[270]]]],[316,[[12,[270]]]],[[311,254],[[12,[270]]]],[[316,254],[[12,[270]]]],[[42,170],[[12,[316]]]],[[42,170],[[12,[311]]]],[[],43],[311,[[12,[267]]]],[[42,170],[[12,[267]]]],[[311,254],[[12,[263]]]],[[42,170,254],[[12,[263]]]],[[42,254],[[12,[[266,[264]]]]]],[[42,254],[[12,[263]]]],[380,[[12,[382]]]],[42,12],[380,[[12,[383]]]],[42,[[12,[267]]]],[[42,170],[[12,[311]]]],[[258,42,153]],[380,[[12,[382]]]],[42,12],[[42,254],[[12,[[266,[264]]]]]],[380,[[12,[383]]]],[42,[[12,[267]]]],[[42,254],[[12,[263]]]],[[42,125],267],[39,381],[381],[311,170],[42,381],[316,170],[42,153],[42,254],[[42,273],254],[[42,254,153,153],385],[42,254],[42,254],[42,254],[[42,258]],[311,311],[[311,39],311],[[42,254,[386,[264]]]],[42],[42,[[10,[[34,[170,6]]]]]],[42],[[42,254,[386,[264]]]],[[42,170],[[34,[272,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[379],[267],[379],[267],[267],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[311,42],[379,36],[267,36],[379,36],[267,36],[42,36],[42,36],[42,127],[42,153],[379,153],[267,153],[384,39],[311,275],[316,275],[[267,125],267],[254,36],[[],42],[[],[[12,[381]]]],[384,[[12,[170]]]],[380,382],[42],[380,383],[42,267],[311,311],[42,300],[42,300],[42,153],[267,267],[311,12],[311,311],[311],[[42,254],12],[42,12],[311,311],[42,12],[[42,254],12],[42,127],[42,319],[[42,254],127],[380,382],[42],[380,383],[42,267],[[42,125]],[[42,56]],[[42,56]],[380],[42],[[380,127]],[[42,123]],[380],[42],[[385,254,176,177]],[267],[267],[[267,153]],[[311,170],311],[[385,254,177]],[379,379],[384],[381,39],[42,311],[42,384],[42,311],[42,33],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[254,176,178]],[[254,179]],[311],[[311,125],311],[311,42],[316,42],[311,42],[[311,125]],0,0,[317,176],[126,249],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[126,262],[126,126],[317,317],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[126,32],[317,36],[[317,254],36],[[317,11],36],[[]],[[]],[126,245],[[]],[[]],[317,12],[[317,254],[[12,[[266,[264]]]]]],[317,[[12,[270]]]],[[317,254],[[12,[270]]]],[[126,170],[[12,[317]]]],[317,[[12,[267]]]],[[317,254],[[12,[263]]]],[126,12],[[126,254],[[12,[[266,[264]]]]]],[126,[[12,[267]]]],[[126,254],[[12,[263]]]],[126,12],[[126,254],[[12,[[266,[264]]]]]],[126,[[12,[267]]]],[[126,254],[[12,[263]]]],[317,170],[126,153],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[126,153],[317,275],[126,153],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[126,42],[317,126],[126,42],[126,42],0,[[],1],[[],1],[2],[[]],[[]],[[387,28]],[[],387],[[]],[[]],[42],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[388,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[388,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[388,1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[388,24],[388,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[389,28]],0,[390,390],[391,391],[392,392],[388,388],[388,30],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[388,[[7,[24,6]]]],[[32,33]],[[],389],[[],388],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[393],0,0,0,[[388,38],[[12,[24]]]],[[388,39],[[12,[24]]]],[[388,39],[[12,[24]]]],[388,39],[[388,38],[[12,[24]]]],[[394,40],[[10,[41]]]],[[394,40],[[10,[41]]]],[[395,40],[[10,[41]]]],[[390,40],[[10,[41]]]],[[391,40],[[10,[41]]]],[[392,40],[[10,[41]]]],[[388,40],[[10,[41]]]],[[]],[[]],[396,394],[397,394],[398,394],[399,394],[117,394],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,393],[42],[42],[[]],[38,12],[38,12],[388,44],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[388,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[388,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[388,47],[[393,97],[[129,[[7,[128,6]]]]]],0,0,0,0,0,0,[[388,39],[[12,[38]]]],0,0,0,0,0,0,0,[130],[388,50],[[[7,[388,6]]],51],[[388,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[388,53],0,[[388,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[394,[[12,[93]]]],[[]],[[]],[[]],[[]],[[],78],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],38],[[],38],[[],38],[[],38],[388,38],[[],54],[[],54],[[],54],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[170],[170],[400,400],[[19,24]],[[401,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[19,1],[401,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[19,1],[[],1],[401,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[19,24],[401,24],[19,24],[401,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[402,28]],[[403,28]],[[20,[20,[199]],[81,[[404,[170,277,278]]]]]],0,0,[[]],[405,405],[19,190],[401,190],[[]],[[],[[7,[31,6]]]],[19,[[7,[24,6]]]],[401,[[7,[24,6]]]],[[32,33]],[[32,33]],[[],402],[[],406],[[],403],[19],[401],[[]],[[]],[[42,170]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],0,0,0,[[401,401],36],[[405,405],36],[[406,406],36],[[],36],[[],36],[[19,39],[[12,[24]]]],[[401,39],[[12,[24]]]],[19,39],[401,39],[[19,39],[[12,[24]]]],[[401,39],[[12,[24]]]],[[19,40],[[10,[41]]]],[[401,40],[[10,[41]]]],[[407,40],[[10,[41]]]],[[408,40],[[10,[41]]]],[[409,40],[[10,[41]]]],[[410,40],[[10,[41]]]],[[411,40],[[10,[41]]]],[[412,40],[[10,[41]]]],[[405,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42,19],[42,401],[42],[42],[401,170],[[]],[[]],[39,12],[39,12],[39,12],[39,12],[19,44],[401,44],[[],45],[[],45],[39],[39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[19,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[401,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[19],[[[7,[19,6]]],[[7,[24,6]]]],[[[7,[401,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,367],[170,368],[19,191],[401,191],[[19,276],[[10,[280]]]],[[401,276],[[10,[280]]]],[[20,170],368],[[20,170],367],[36,406],[368,12],[367,12],[[[17,[406]]],36],0,[400,170],[412,170],[[]],[[]],[19,50],[401,50],[[[7,[19,6]]],51],[[[7,[401,6]]],51],[[19,24],[[12,[36]]]],[[401,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[19,53],[401,53],[[]],[[]],[[]],[[]],[[]],[[19,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[401,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[170],[170],[[400,366],349],[[412,[0,[366,80,413]]],311],[400,349],[412,311],[[19,39,39]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[19,38],[401,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[125],[125],[[414,42]],[[415,42]],[[416,42]],[[417,42]],[[407,42]],[[408,42]],[[409,42]],[[410,42]],[[411,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[418,123],36],[[418,123],36],[[418,123],36],[[418,24]],[[419,24]],[[],1],[[],1],[418,1],[[],1],[[],1],[[],1],[419,1],[[],1],[[],1],[[],1],[418,1],[[],1],[[],1],[[],1],[419,1],[[],1],[2],[2],[2],[2],[2],[[],26],[[],26],[418,24],[419,24],[418,24],[419,24],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[420,28]],[418],[418,36],[418,36],[418,418],[421,421],[419,419],[418,30],[419,29],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[418,[[7,[24,6]]]],[419,[[7,[24,6]]]],[[419,40],[[10,[41]]]],[[],422],[[],418],[[],420],[[],[[10,[419]]]],[422,289],[[]],[[]],[[]],[[]],[[]],[421,[[7,[74,6]]]],[26,36],[26,36],[37],[37],[[421,421],36],[[419,419],36],[[],36],[[],36],[113,[[10,[114,115]]]],[[418,38],[[12,[24]]]],[[419,38],[[12,[24]]]],[[418,39],[[12,[24]]]],[[419,39],[[12,[24]]]],[[418,39],[[12,[24]]]],[[419,39],[[12,[24]]]],[418,39],[419,39],[[418,38],[[12,[24]]]],[[419,38],[[12,[24]]]],[[422,40],[[10,[41]]]],[[418,40],[[10,[41]]]],[[421,40],[[10,[41]]]],[[419,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[419]]]],[42],[42],[42],0,[422,[[12,[35]]]],[38,12],[38,12],[[],43],[[],43],[418,289],[418,289],[418,289],[418,44],[419,44],[[],45],[[],45],[421],[419],[74,61],[[],61],[74,61],[[419,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[418,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[419,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[[7,[418,6]]],[[7,[24,6]]]],[[[7,[419,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[421,36],[419,36],[421,36],[418,47],[419,46],[418,36],[418,36],0,0,[[418,39],[[12,[38]]]],[[419,39],[[12,[38]]]],0,[418],[418,36],[419,[[12,[43]]]],[418,50],[419,50],[[[7,[418,6]]],51],[[[7,[419,6]]],51],[[418,24],[[12,[36]]]],[[419,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[418,53],[419,53],[418],[418],[422,[[12,[35]]]],[418],[418],[82,61],[419,10],[[422,35],[[12,[35]]]],[[418,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[419,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[418,38],[419,38],[[],12],[[],12],[[],12],[[],12],[[],12],[419,39],[419,38],[419,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[423,24]],[[424,24]],[[425,24]],[[426,24]],[[427,24]],[[428,24]],[[429,24]],[[430,24]],[[431,24]],[[432,24]],[[433,24]],[[434,24]],[[435,24]],[[436,24]],[[437,24]],[[],1],[[],1],[[],1],[[],1],[423,1],[424,1],[[],1],[[],1],[[],1],[[],1],[425,1],[[],1],[[],1],[426,1],[[],1],[427,1],[[],1],[[],1],[[],1],[428,1],[[],1],[[],1],[429,1],[430,1],[[],1],[[],1],[431,1],[[],1],[432,1],[433,1],[[],1],[[],1],[434,1],[[],1],[435,1],[436,1],[[],1],[437,1],[[],1],[[],1],[[],1],[[],1],[423,1],[424,1],[[],1],[[],1],[425,1],[[],1],[426,1],[[],1],[[],1],[427,1],[[],1],[428,1],[[],1],[429,1],[[],1],[430,1],[431,1],[[],1],[432,1],[[],1],[[],1],[433,1],[434,1],[[],1],[[],1],[435,1],[[],1],[436,1],[437,1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[[],26],[423,24],[424,24],[425,24],[426,24],[427,24],[428,24],[429,24],[430,24],[431,24],[432,24],[433,24],[434,24],[435,24],[436,24],[437,24],[423,24],[424,24],[425,24],[426,24],[427,24],[428,24],[429,24],[430,24],[431,24],[432,24],[433,24],[434,24],[435,24],[436,24],[437,24],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[431,35],35],[423,423],[424,424],[425,425],[426,426],[427,427],[428,428],[430,430],[431,431],[432,432],[433,433],[434,434],[435,435],[436,436],[437,437],[423,30],[424,30],[425,29],[426,30],[427,29],[428,30],[429,30],[430,30],[431,30],[432,30],[433,29],[434,30],[435,30],[436,30],[437,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[423,[[7,[24,6]]]],[424,[[7,[24,6]]]],[425,[[7,[24,6]]]],[426,[[7,[24,6]]]],[427,[[7,[24,6]]]],[428,[[7,[24,6]]]],[429,[[7,[24,6]]]],[430,[[7,[24,6]]]],[431,[[7,[24,6]]]],[432,[[7,[24,6]]]],[433,[[7,[24,6]]]],[434,[[7,[24,6]]]],[435,[[7,[24,6]]]],[436,[[7,[24,6]]]],[437,[[7,[24,6]]]],[434,36],0,[[438,423],36],[431,35],[431,35],[[423,40],[[10,[41]]]],[[424,40],[[10,[41]]]],[[425,40],[[10,[41]]]],[[426,40],[[10,[41]]]],[[427,40],[[10,[41]]]],[[428,40],[[10,[41]]]],[[429,40],[[10,[41]]]],[[430,40],[[10,[41]]]],[[431,40],[[10,[41]]]],[[432,40],[[10,[41]]]],[[433,40],[[10,[41]]]],[[434,40],[[10,[41]]]],[[435,40],[[10,[41]]]],[[436,40],[[10,[41]]]],[[437,40],[[10,[41]]]],[[],438],[[],429],[[],430],[[],431],[[],432],0,0,0,[[],[[10,[423]]]],[[],[[10,[424]]]],[[],[[10,[425]]]],[[],[[10,[426]]]],[[],[[10,[427]]]],[[],[[10,[428]]]],[[],[[10,[433]]]],[[],[[10,[434]]]],[[],[[10,[435]]]],[[],[[10,[436]]]],[[],[[10,[437]]]],[434,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[37],[[439,439],36],[[440,440],36],[[423,423],36],[[424,424],36],[[425,425],36],[[426,426],36],[[427,427],36],[[428,428],36],[[431,431],36],[[433,433],36],[[434,434],36],[[435,435],36],[[436,436],36],[[437,437],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[423,38],[[12,[24]]]],[[424,38],[[12,[24]]]],[[425,38],[[12,[24]]]],[[426,38],[[12,[24]]]],[[427,38],[[12,[24]]]],[[428,38],[[12,[24]]]],[[429,38],[[12,[24]]]],[[430,38],[[12,[24]]]],[[431,38],[[12,[24]]]],[[432,38],[[12,[24]]]],[[433,38],[[12,[24]]]],[[434,38],[[12,[24]]]],[[435,38],[[12,[24]]]],[[436,38],[[12,[24]]]],[[437,38],[[12,[24]]]],[[423,39],[[12,[24]]]],[[424,39],[[12,[24]]]],[[425,39],[[12,[24]]]],[[426,39],[[12,[24]]]],[[427,39],[[12,[24]]]],[[428,39],[[12,[24]]]],[[429,39],[[12,[24]]]],[[430,39],[[12,[24]]]],[[431,39],[[12,[24]]]],[[432,39],[[12,[24]]]],[[433,39],[[12,[24]]]],[[434,39],[[12,[24]]]],[[435,39],[[12,[24]]]],[[436,39],[[12,[24]]]],[[437,39],[[12,[24]]]],[[423,39],[[12,[24]]]],[[424,39],[[12,[24]]]],[[425,39],[[12,[24]]]],[[426,39],[[12,[24]]]],[[427,39],[[12,[24]]]],[[428,39],[[12,[24]]]],[[429,39],[[12,[24]]]],[[430,39],[[12,[24]]]],[[431,39],[[12,[24]]]],[[432,39],[[12,[24]]]],[[433,39],[[12,[24]]]],[[434,39],[[12,[24]]]],[[435,39],[[12,[24]]]],[[436,39],[[12,[24]]]],[[437,39],[[12,[24]]]],[423,39],[424,39],[425,39],[426,39],[427,39],[428,39],[429,39],[430,39],[431,39],[432,39],[433,39],[434,39],[435,39],[436,39],[437,39],[[423,38],[[12,[24]]]],[[424,38],[[12,[24]]]],[[425,38],[[12,[24]]]],[[426,38],[[12,[24]]]],[[427,38],[[12,[24]]]],[[428,38],[[12,[24]]]],[[429,38],[[12,[24]]]],[[430,38],[[12,[24]]]],[[431,38],[[12,[24]]]],[[432,38],[[12,[24]]]],[[433,38],[[12,[24]]]],[[434,38],[[12,[24]]]],[[435,38],[[12,[24]]]],[[436,38],[[12,[24]]]],[[437,38],[[12,[24]]]],[[431,35,[12,[35]]],[[12,[35]]]],[[432,35,[12,[35]]],[[12,[35]]]],[[439,40],[[10,[41]]]],[[439,40],[[10,[41]]]],[[440,40],[[10,[41]]]],[[440,40],[[10,[41]]]],[[423,40],[[10,[41]]]],[[424,40],[[10,[41]]]],[[438,40],[[10,[41]]]],[[425,40],[[10,[41]]]],[[426,40],[[10,[41]]]],[[427,40],[[10,[41]]]],[[428,40],[[10,[41]]]],[[429,40],[[10,[41]]]],[[430,40],[[10,[41]]]],[[431,40],[[10,[41]]]],[[432,40],[[10,[41]]]],[[433,40],[[10,[41]]]],[[434,40],[[10,[41]]]],[[435,40],[[10,[41]]]],[[436,40],[[10,[41]]]],[[437,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[435,437],[[]],[436,437],[434,437],[24,[[12,[423]]]],[24,[[12,[424]]]],[24,[[12,[425]]]],[24,[[12,[426]]]],[24,[[12,[427]]]],[24,[[12,[428]]]],[24,[[12,[429]]]],[24,[[12,[430]]]],[24,[[12,[431]]]],[24,[[12,[432]]]],[24,[[12,[433]]]],[24,[[12,[434]]]],[24,[[12,[435]]]],[24,[[12,[436]]]],[24,[[12,[437]]]],[42],[42],[42],[42],[42],0,0,0,0,0,[[[96,[[422,[428]]]],[284,[435]]]],[[[284,[436]],[96,[[418,[426]]]],[96,[[422,[426]]]],[17,[429]]]],[[[96,[438]],[284,[434]],[96,[[422,[428]]]],[96,[[422,[426]]]],[96,[[418,[426]]]]]],[[[284,[437]],[95,[434]],[95,[436]],[95,[435]],[96,[[418,[426]]]]]],[[429,428],431],[[429,426],432],[[429,426],430],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[[],43],[[],43],[423,44],[424,44],[425,44],[426,44],[427,44],[428,44],[429,44],[430,44],[431,44],[432,44],[433,44],[434,44],[435,44],[436,44],[437,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[423],[425],[426],[427],[428],0,0,[[]],[[]],[[425,38],[[12,[39]]]],[[427,38],[[12,[39]]]],[[433,38],[[12,[39]]]],[[437,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[423,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[424,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[425,6]]],[[7,[1,6]]]],[[[7,[426,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[427,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[428,6]]],[[7,[1,6]]]],[[[7,[429,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[430,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[431,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[432,6]]],[[7,[1,6]]]],[[[7,[433,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[434,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[435,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[436,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[437,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[423,6]]],[[7,[24,6]]]],[[[7,[424,6]]],[[7,[24,6]]]],[[[7,[425,6]]],[[7,[24,6]]]],[[[7,[426,6]]],[[7,[24,6]]]],[[[7,[427,6]]],[[7,[24,6]]]],[[[7,[428,6]]],[[7,[24,6]]]],[[[7,[429,6]]],[[7,[24,6]]]],[[[7,[430,6]]],[[7,[24,6]]]],[[[7,[431,6]]],[[7,[24,6]]]],[[[7,[432,6]]],[[7,[24,6]]]],[[[7,[433,6]]],[[7,[24,6]]]],[[[7,[434,6]]],[[7,[24,6]]]],[[[7,[435,6]]],[[7,[24,6]]]],[[[7,[436,6]]],[[7,[24,6]]]],[[[7,[437,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[438,127],[423,47],[424,47],[425,46],[426,47],[427,46],[428,47],[429,47],[430,47],[431,47],[432,47],[433,46],[434,47],[435,47],[436,47],[437,46],[431,35],[431,35],0,[[438,423],[[12,[38]]]],0,[[423,39],[[12,[38]]]],[[424,39],[[12,[38]]]],[[425,39],[[12,[38]]]],[[426,39],[[12,[38]]]],[[427,39],[[12,[38]]]],[[428,39],[[12,[38]]]],[[429,39],[[12,[38]]]],[[430,39],[[12,[38]]]],[[431,39],[[12,[38]]]],[[432,39],[[12,[38]]]],[[433,39],[[12,[38]]]],[[434,39],[[12,[38]]]],[[435,39],[[12,[38]]]],[[436,39],[[12,[38]]]],[[437,39],[[12,[38]]]],[39,423],[[423,425],426],[[423,427],428],[[35,35],[[10,[430,440]]]],[[35,35,35,35,35],[[10,[431,439]]]],[[423,433],434],[[423,427,35],435],[[423,425,35],436],[430,35],[130],[130],[423,[[12,[43]]]],[425,[[12,[43]]]],[426,[[12,[43]]]],[427,[[12,[43]]]],[428,[[12,[43]]]],[433,[[12,[43]]]],[437,[[12,[43]]]],[423,50],[424,50],[425,50],[426,50],[427,50],[428,50],[429,50],[430,50],[431,50],[432,50],[433,50],[434,50],[435,50],[436,50],[437,50],[[[7,[423,6]]],51],[[[7,[424,6]]],51],[[[7,[425,6]]],51],[[[7,[426,6]]],51],[[[7,[427,6]]],51],[[[7,[428,6]]],51],[[[7,[429,6]]],51],[[[7,[430,6]]],51],[[[7,[431,6]]],51],[[[7,[432,6]]],51],[[[7,[433,6]]],51],[[[7,[434,6]]],51],[[[7,[435,6]]],51],[[[7,[436,6]]],51],[[[7,[437,6]]],51],[[423,24],[[12,[36]]]],[[424,24],[[12,[36]]]],[[425,24],[[12,[36]]]],[[426,24],[[12,[36]]]],[[427,24],[[12,[36]]]],[[428,24],[[12,[36]]]],[[429,24],[[12,[36]]]],[[430,24],[[12,[36]]]],[[431,24],[[12,[36]]]],[[432,24],[[12,[36]]]],[[433,24],[[12,[36]]]],[[434,24],[[12,[36]]]],[[435,24],[[12,[36]]]],[[436,24],[[12,[36]]]],[[437,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[423,53],[424,53],[425,53],[426,53],[427,53],[428,53],[429,53],[430,53],[431,53],[432,53],[433,53],[434,53],[435,53],[436,53],[437,53],[430,35],[423,10],[424,10],[425,10],[426,10],[427,10],[428,10],[433,10],[434,10],[435,10],[436,10],[437,10],[[423,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[424,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[425,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[426,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[427,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[428,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[429,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[430,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[431,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[432,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[433,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[434,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[435,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[436,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[437,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[431,35],35],[[431,35],35],[[431,35],35],[[431,35],35],[[430,35],35],[[430,35],35],[[431,35],35],[431,35],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[431,35],[[10,[439]]]],[[431,35],[[10,[439]]]],[[431,35],[[10,[439]]]],[[431,35],[[10,[439]]]],[[430,35],[[10,[440]]]],[[430,35],[[10,[440]]]],[[431,35],[[10,[439]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[423,38],[424,38],[425,38],[426,38],[427,38],[428,38],[429,38],[430,38],[431,38],[432,38],[433,38],[434,38],[435,38],[436,38],[437,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[425,39],[427,39],[433,39],[437,39],[425,38],[427,38],[433,38],[437,38],[425,55],[427,55],[433,55],[437,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[441,24]],[[442,24]],[[443,24]],[[],1],[[],1],[441,1],[[],1],[442,1],[[],1],[[],1],[443,1],[[],1],[[],1],[441,1],[[],1],[442,1],[[],1],[443,1],[2],[2],[2],[[],26],[[],26],[441,24],[442,24],[443,24],[441,24],[442,24],[443,24],[[]],[[]],[[]],[[]],[[]],[[]],[441,441],[442,442],[443,443],[441,30],[442,29],[443,190],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[441,[[7,[24,6]]]],[442,[[7,[24,6]]]],[443,[[7,[24,6]]]],[[442,442],109],[[443,443],109],[[441,40],[[10,[41]]]],[[442,40],[[10,[41]]]],[[443,40],[[10,[41]]]],[[],[[10,[441]]]],[[],[[10,[442]]]],[[],[[10,[443]]]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[37],[37],[[441,441],36],[[442,442],36],[[443,443],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[441,38],[[12,[24]]]],[[442,38],[[12,[24]]]],[[443,39],[[12,[24]]]],[[441,39],[[12,[24]]]],[[442,39],[[12,[24]]]],[[441,39],[[12,[24]]]],[[442,39],[[12,[24]]]],[441,39],[442,39],[443,39],[[441,38],[[12,[24]]]],[[442,38],[[12,[24]]]],[[443,39],[[12,[24]]]],[[441,40],[[10,[41]]]],[[442,40],[[10,[41]]]],[[443,40],[[10,[41]]]],[[]],[[]],[[]],[24,[[12,[441]]]],[24,[[12,[442]]]],[24,[[12,[443]]]],[38,12],[39,12],[38,12],[39,12],[[],43],[[],43],[441,44],[442,44],[443,44],[[],45],[[],45],[[],45],[442],[443],[[442,38],[[12,[39]]]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[441,6]]],[[7,[1,6]]]],[[[7,[442,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[443,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[441,6]]],[[7,[24,6]]]],[[[7,[442,6]]],[[7,[24,6]]]],[[[7,[443,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[441,47],[442,46],[443,191],0,[[[96,[[418,[443]]]],[96,[[418,[442]]]],[284,[441]]]],[[441,39],[[12,[38]]]],[[442,39],[[12,[38]]]],[[442,442],[[12,[109]]]],[[443,443],[[12,[109]]]],[442,[[12,[43]]]],[443,[[12,[43]]]],[441,50],[442,50],[443,50],[[[7,[441,6]]],51],[[[7,[442,6]]],51],[[[7,[443,6]]],51],[[441,24],[[12,[36]]]],[[442,24],[[12,[36]]]],[[443,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[441,53],[442,53],[443,53],0,[441,10],[442,10],[443,10],[[441,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[442,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[443,[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[441,38],[442,38],[443,38],[[],12],[[],12],[[],12],[442,39],[442,38],[442,55],0,0,0,0,0,0,0,0,0,0,0,[[444,24]],[[445,24]],[[446,24]],[[447,24]],[[448,24]],[[],1],[[],1],[444,1],[[],1],[[],1],[445,1],[446,1],[[],1],[447,1],[[],1],[[],1],[448,1],[[],1],[444,1],[[],1],[445,1],[[],1],[[],1],[446,1],[[],1],[447,1],[[],1],[448,1],[2],[2],[2],[2],[2],[[],26],[444,24],[445,24],[446,24],[447,24],[448,24],[444,24],[445,24],[446,24],[447,24],[448,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[444,444],[445,445],[446,446],[447,447],[448,448],[444,30],[445,29],[446,30],[447,29],[448,30],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[444,[[7,[24,6]]]],[445,[[7,[24,6]]]],[446,[[7,[24,6]]]],[447,[[7,[24,6]]]],[448,[[7,[24,6]]]],[[444,40],[[10,[41]]]],[[445,40],[[10,[41]]]],[[446,40],[[10,[41]]]],[[447,40],[[10,[41]]]],[[448,40],[[10,[41]]]],0,[[],[[10,[444]]]],[[],[[10,[445]]]],[[],[[10,[446]]]],[[],[[10,[447]]]],[[],[[10,[448]]]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[37],[[444,444],36],[[445,445],36],[[446,446],36],[[447,447],36],[[448,448],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[444,38],[[12,[24]]]],[[445,38],[[12,[24]]]],[[446,38],[[12,[24]]]],[[447,38],[[12,[24]]]],[[448,38],[[12,[24]]]],[[444,39],[[12,[24]]]],[[445,39],[[12,[24]]]],[[446,39],[[12,[24]]]],[[447,39],[[12,[24]]]],[[448,39],[[12,[24]]]],[[444,39],[[12,[24]]]],[[445,39],[[12,[24]]]],[[446,39],[[12,[24]]]],[[447,39],[[12,[24]]]],[[448,39],[[12,[24]]]],[444,39],[445,39],[446,39],[447,39],[448,39],[[444,38],[[12,[24]]]],[[445,38],[[12,[24]]]],[[446,38],[[12,[24]]]],[[447,38],[[12,[24]]]],[[448,38],[[12,[24]]]],[[444,40],[[10,[41]]]],[[445,40],[[10,[41]]]],[[446,40],[[10,[41]]]],[[447,40],[[10,[41]]]],[[448,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[444]]]],[24,[[12,[445]]]],[24,[[12,[446]]]],[24,[[12,[447]]]],[24,[[12,[448]]]],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[444,44],[445,44],[446,44],[447,44],[448,44],[[],45],[[],45],[[],45],[[],45],[[],45],[445],[[445,38],[[12,[39]]]],[[447,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[444,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[445,6]]],[[7,[1,6]]]],[[[7,[446,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[447,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[448,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[444,6]]],[[7,[24,6]]]],[[[7,[445,6]]],[[7,[24,6]]]],[[[7,[446,6]]],[[7,[24,6]]]],[[[7,[447,6]]],[[7,[24,6]]]],[[[7,[448,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[444,47],[445,46],[446,47],[447,46],[448,47],[[[96,[[418,[445]]]],[284,[444]]]],[[444,39],[[12,[38]]]],[[445,39],[[12,[38]]]],[[446,39],[[12,[38]]]],[[447,39],[[12,[38]]]],[[448,39],[[12,[38]]]],[445,[[12,[43]]]],[447,[[12,[43]]]],[444,50],[445,50],[446,50],[447,50],[448,50],[[[7,[444,6]]],51],[[[7,[445,6]]],51],[[[7,[446,6]]],51],[[[7,[447,6]]],51],[[[7,[448,6]]],51],[[444,24],[[12,[36]]]],[[445,24],[[12,[36]]]],[[446,24],[[12,[36]]]],[[447,24],[[12,[36]]]],[[448,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[444,53],[445,53],[446,53],[447,53],[448,53],[444,10],[445,10],[446,10],[447,10],[448,10],[[444,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[445,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[446,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[447,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[448,[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[444,38],[445,38],[446,38],[447,38],[448,38],0,[[],12],[[],12],[[],12],[[],12],[[],12],[445,39],[447,39],[445,38],[447,38],[445,55],[447,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[449,36],[449,36],[449,36],[[450,24]],[[451,24]],[[452,24]],[[],1],[450,1],[451,1],[[],1],[[],1],[452,1],[[],1],[[],1],[[],1],[450,1],[[],1],[[],1],[451,1],[[],1],[452,1],[[],1],[[],1],[2],[2],[2],[2],[2],[[],26],[450,24],[451,24],[452,24],[450,24],[451,24],[452,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[450,450],[451,451],[452,452],[453,453],[449,449],[450,30],[451,29],[452,29],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[450,[[7,[24,6]]]],[451,[[7,[24,6]]]],[452,[[7,[24,6]]]],[[450,40],[[10,[41]]]],[[451,40],[[10,[41]]]],[[452,40],[[10,[41]]]],[[],449],[453,454],[[],[[10,[450]]]],[[],[[10,[451]]]],[[],[[10,[452]]]],[453,454],[[]],[[]],[[]],[[]],[[]],[26,36],[37],[[450,450],36],[[451,451],36],[[452,452],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[450,38],[[12,[24]]]],[[451,38],[[12,[24]]]],[[452,38],[[12,[24]]]],[[450,39],[[12,[24]]]],[[451,39],[[12,[24]]]],[[452,39],[[12,[24]]]],[[450,39],[[12,[24]]]],[[451,39],[[12,[24]]]],[[452,39],[[12,[24]]]],[450,39],[451,39],[452,39],[[450,38],[[12,[24]]]],[[451,38],[[12,[24]]]],[[452,38],[[12,[24]]]],[449,[[12,[454]]]],[[450,40],[[10,[41]]]],[[451,40],[[10,[41]]]],[[452,40],[[10,[41]]]],[[453,40],[[10,[41]]]],[[449,40],[[10,[41]]]],[453,[[12,[451]]]],0,[[]],[[]],[[]],[[]],[450,453],[[]],[24,[[12,[450]]]],[24,[[12,[451]]]],[24,[[12,[452]]]],[42],[38,12],[38,12],[[],43],[[449,43],[[12,[453]]]],[[449,43],[[12,[453]]]],[450,44],[451,44],[452,44],[[],45],[[],45],[[],45],[452],[453,43],0,[[451,38],[[12,[39]]]],[[452,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[450,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[451,6]]],[[7,[1,6]]]],[[[7,[452,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[450,6]]],[[7,[24,6]]]],[[[7,[451,6]]],[[7,[24,6]]]],[[[7,[452,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[449,127],[450,47],[451,46],[452,46],[449,127],[449,127],[449,127],[[449,43],36],[[449,43],36],[[449,43],36],[[450,39],[[12,[38]]]],[[451,39],[[12,[38]]]],[[452,39],[[12,[38]]]],0,[453,454],0,[453,[[12,[451]]]],[453,454],[451,[[12,[43]]]],[452,[[12,[43]]]],[450,50],[451,50],[452,50],[[[7,[450,6]]],51],[[[7,[451,6]]],51],[[[7,[452,6]]],51],[[450,24],[[12,[36]]]],[[451,24],[[12,[36]]]],[[452,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[450,53],[451,53],[452,53],[450,10],[451,10],[452,10],[[450,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[451,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[452,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[453,[[12,[451]]]],[453,454],[[]],[[]],[[]],[[]],[[]],[[[96,[449]],[284,[450]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[450,38],[451,38],[452,38],[[],12],[[],12],[[],12],[[],12],[[],12],[451,39],[452,39],[451,38],[452,38],[451,55],[452,55],0,0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[[455,28]],0,0,[[],455],[[]],0,0,0,[[]],[42],0,0,[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],0,0,0,0,[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[456,456],[457,457],[458,458],[459,459],[[460,460,35],36],[[461,461,35],36],[[462,462,35],36],[[456,456,35],36],[[463,463,239],36],[[464,464,239],36],[[465,465,239],36],[[466,466,239],36],[[467,467,239],36],[[468,468,239],36],[[457,457,239],36],[[458,458,239],36],[[459,459,239],36],[[462,462]],[[456,35],456],[[456,456],456],[[465,465]],[[466,466]],[[467,467]],[[468,468],468],[[457,239],457],[[457,457],457],[[458,239],458],[[458,458],458],[[459,459],459],[[459,239],459],[[462,462]],[[456,456]],[[456,35]],[[465,465]],[[466,466]],[[467,467]],[[457,457]],[[457,239]],[[458,458]],[[458,239]],[[459,459]],[[459,239]],[[465,465],465],[[462,462],462],[[466,466],466],[[467,467],467],[469,36],[470,36],[[456,456],35],[[468,468],239],[[457,457],239],[[458,458],239],[469,36],[470,36],[456,456],[458,458],[456],[458],[456,456],[458,458],[[471,24]],[[472,24]],[[469,24]],[[470,24]],[[460,24]],[[461,24]],[[462,24]],[[456,24]],[[463,24]],[[464,24]],[[465,24]],[[466,24]],[[467,24]],[[468,24]],[[457,24]],[[458,24]],[[459,24]],[[],1],[[],1],[471,1],[[],1],[[],1],[472,1],[[],1],[469,1],[[],1],[470,1],[[],1],[[],1],[[],1],[460,1],[461,1],[[],1],[462,1],[[],1],[456,1],[[],1],[[],1],[463,1],[464,1],[[],1],[465,1],[[],1],[466,1],[[],1],[467,1],[[],1],[[],1],[468,1],[[],1],[457,1],[[],1],[458,1],[[],1],[459,1],[[],1],[[],1],[471,1],[[],1],[472,1],[469,1],[[],1],[[],1],[470,1],[460,1],[[],1],[461,1],[[],1],[[],1],[462,1],[[],1],[456,1],[463,1],[[],1],[[],1],[464,1],[465,1],[[],1],[[],1],[466,1],[467,1],[[],1],[468,1],[[],1],[457,1],[[],1],[458,1],[[],1],[[],1],[459,1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[462,466],[456,458],[[],26],[[],26],[[],26],[468,473],[457,474],[456,475],[458,475],[459,476],[465,477],[466,478],[467,479],[456],[465],[466],[467],[457],[458],[459],[456],[465],[466],[467],[468],[457],[458],[459],[471,24],[472,24],[469,24],[470,24],[460,24],[461,24],[462,24],[456,24],[463,24],[464,24],[465,24],[466,24],[467,24],[468,24],[457,24],[458,24],[459,24],[471,24],[472,24],[469,24],[470,24],[460,24],[461,24],[462,24],[456,24],[463,24],[464,24],[465,24],[466,24],[467,24],[468,24],[457,24],[458,24],[459,24],[457,480],[456,481],[458,481],[459,482],[457,454],[458,483],[458,456],[459,484],[[469,469],469],[[470,470],470],[[469,469]],[[470,470]],[469,153],[470,153],[[469,469],469],[[470,470],470],[[469,469]],[[470,470]],[[469,469],469],[[470,470],470],[[469,469]],[[470,470]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[456,456],[457,457],[458,458],[459,459],[471,454],[[456,456,456],456],[[457,457,457],457],[[458,458,458],458],[[459,459,459],459],[[456,35,35],456],[[457,239,239],457],[[458,239,239],458],[[459,239,239],459],[[456,35],456],[[457,239],457],[[458,239],458],[[459,239],459],[[456,35],456],[[457,239],457],[[458,239],458],[[459,239],459],[485,485],[471,471],[472,472],[469,469],[470,470],[460,460],[461,461],[462,462],[456,456],[463,463],[464,464],[465,465],[466,466],[467,467],[468,468],[457,457],[458,458],[459,459],[471,30],[460,30],[461,30],[462,30],[456,30],[463,30],[464,30],[465,30],[466,30],[467,30],[457,30],[458,30],[459,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[471,[[7,[24,6]]]],[472,[[7,[24,6]]]],[469,[[7,[24,6]]]],[470,[[7,[24,6]]]],[460,[[7,[24,6]]]],[461,[[7,[24,6]]]],[462,[[7,[24,6]]]],[456,[[7,[24,6]]]],[463,[[7,[24,6]]]],[464,[[7,[24,6]]]],[465,[[7,[24,6]]]],[466,[[7,[24,6]]]],[467,[[7,[24,6]]]],[468,[[7,[24,6]]]],[457,[[7,[24,6]]]],[458,[[7,[24,6]]]],[459,[[7,[24,6]]]],[[456,456],469],[[457,457],486],[[458,458],487],[[459,459],488],[[456,456],469],[[457,457],486],[[458,458],487],[[459,459],488],[[456,456],469],[[457,457],486],[[458,458],487],[[459,459],488],[[456,456],469],[[457,457],486],[[458,458],487],[[459,459],488],[[456,456],469],[[457,457],486],[[458,458],487],[[459,459],488],[[456,456],469],[[457,457],486],[[458,458],487],[[459,459],488],[[462,39],456],[[465,39],457],[[466,39],458],[[467,39],459],[[462,39],456],[[465,39],457],[[466,39],458],[[467,39],459],[468,468],[[471,454],36],[[456,456],456],[[458,458],458],[[471,40],[[10,[41]]]],[[472,40],[[10,[41]]]],[[469,40],[[10,[41]]]],[[470,40],[[10,[41]]]],[[460,40],[[10,[41]]]],[[461,40],[[10,[41]]]],[[462,40],[[10,[41]]]],[[456,40],[[10,[41]]]],[[463,40],[[10,[41]]]],[[464,40],[[10,[41]]]],[[465,40],[[10,[41]]]],[[466,40],[[10,[41]]]],[[467,40],[[10,[41]]]],[[468,40],[[10,[41]]]],[[457,40],[[10,[41]]]],[[458,40],[[10,[41]]]],[[459,40],[[10,[41]]]],[[],485],[[],471],[[],472],[[],469],[[],470],[[],460],[[],461],[[],462],[[],456],[[],463],[[],464],[[],465],[[],466],[[],467],[[],468],[[],457],[[],458],[[],459],[460],[461],[456],[463],[464],[460],[461],[456],[463],[464],[[],[[10,[485]]]],[[],[[10,[471]]]],[[],[[10,[472]]]],[[],[[10,[469]]]],[[],[[10,[470]]]],[[],[[10,[460]]]],[[],[[10,[461]]]],[[],[[10,[462]]]],[[],[[10,[456]]]],[[],[[10,[463]]]],[[],[[10,[464]]]],[[],[[10,[465]]]],[[],[[10,[466]]]],[[],[[10,[467]]]],[[],[[10,[468]]]],[[],[[10,[457]]]],[[],[[10,[458]]]],[[],[[10,[459]]]],[462,35],[465,239],[466,239],[467,239],0,[[456,456],35],[[457,457],239],[[458,458],239],[[459,459],239],[[456,456],35],[[457,457],239],[[458,458],239],[[459,459],239],[[456,35],456],[[456,456],456],[[468,239],468],[[457,457],457],[[457,239],457],[[458,239],458],[[458,458],458],[[459,459],459],[[459,239],459],[[456,35]],[[456,456]],[[457,457]],[[457,239]],[[458,458]],[[458,239]],[[459,459]],[[459,239]],[[457,457],465],[[458,458,458],466],[[459,459,459,459],467],[[456,456],35],[[468,468],239],[[457,457],239],[[458,458],239],[[459,459],239],[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[239,239,239,239],468],[[239,239],457],[[239,239,239],458],[[239,239,239,239],459],[26,36],[26,36],[26,36],[37],[37],[37],[[485,485],36],[[471,471],36],[[472,472],36],[[469,469],36],[[470,470],36],[[460,460],36],[[461,461],36],[[462,462],36],[[456,456],36],[[463,463],36],[[464,464],36],[[465,465],36],[[466,466],36],[[467,467],36],[[468,468],36],[[457,457],36],[[458,458],36],[[459,459],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[456,456],[457,457],[458,458],[459,459],[[456,35],484],[[457,239],458],[[458,239],459],0,0,[[471,38],[[12,[24]]]],[[460,38],[[12,[24]]]],[[461,38],[[12,[24]]]],[[462,38],[[12,[24]]]],[[456,38],[[12,[24]]]],[[463,38],[[12,[24]]]],[[464,38],[[12,[24]]]],[[465,38],[[12,[24]]]],[[466,38],[[12,[24]]]],[[467,38],[[12,[24]]]],[[457,38],[[12,[24]]]],[[458,38],[[12,[24]]]],[[459,38],[[12,[24]]]],[[471,39],[[12,[24]]]],[[460,39],[[12,[24]]]],[[461,39],[[12,[24]]]],[[462,39],[[12,[24]]]],[[456,39],[[12,[24]]]],[[463,39],[[12,[24]]]],[[464,39],[[12,[24]]]],[[465,39],[[12,[24]]]],[[466,39],[[12,[24]]]],[[467,39],[[12,[24]]]],[[457,39],[[12,[24]]]],[[458,39],[[12,[24]]]],[[459,39],[[12,[24]]]],[[471,39],[[12,[24]]]],[[460,39],[[12,[24]]]],[[461,39],[[12,[24]]]],[[462,39],[[12,[24]]]],[[456,39],[[12,[24]]]],[[463,39],[[12,[24]]]],[[464,39],[[12,[24]]]],[[465,39],[[12,[24]]]],[[466,39],[[12,[24]]]],[[467,39],[[12,[24]]]],[[457,39],[[12,[24]]]],[[458,39],[[12,[24]]]],[[459,39],[[12,[24]]]],[471,39],[460,39],[461,39],[462,39],[456,39],[463,39],[464,39],[465,39],[466,39],[467,39],[457,39],[458,39],[459,39],[[471,38],[[12,[24]]]],[[460,38],[[12,[24]]]],[[461,38],[[12,[24]]]],[[462,38],[[12,[24]]]],[[456,38],[[12,[24]]]],[[463,38],[[12,[24]]]],[[464,38],[[12,[24]]]],[[465,38],[[12,[24]]]],[[466,38],[[12,[24]]]],[[467,38],[[12,[24]]]],[[457,38],[[12,[24]]]],[[458,38],[[12,[24]]]],[[459,38],[[12,[24]]]],[456,456],[457,457],[458,458],[459,459],[[485,40],[[10,[41]]]],[[471,40],[[10,[41]]]],[[472,40],[[10,[41]]]],[[469,40],[[10,[41]]]],[[469,40],[[10,[41]]]],[[470,40],[[10,[41]]]],[[470,40],[[10,[41]]]],[[460,40],[[10,[41]]]],[[460,40],[[10,[41]]]],[[461,40],[[10,[41]]]],[[461,40],[[10,[41]]]],[[462,40],[[10,[41]]]],[[462,40],[[10,[41]]]],[[456,40],[[10,[41]]]],[[456,40],[[10,[41]]]],[[463,40],[[10,[41]]]],[[463,40],[[10,[41]]]],[[464,40],[[10,[41]]]],[[464,40],[[10,[41]]]],[[465,40],[[10,[41]]]],[[465,40],[[10,[41]]]],[[466,40],[[10,[41]]]],[[466,40],[[10,[41]]]],[[467,40],[[10,[41]]]],[[467,40],[[10,[41]]]],[[468,40],[[10,[41]]]],[[468,40],[[10,[41]]]],[[457,40],[[10,[41]]]],[[457,40],[[10,[41]]]],[[458,40],[[10,[41]]]],[[458,40],[[10,[41]]]],[[459,40],[[10,[41]]]],[[459,40],[[10,[41]]]],[456,456],[457,457],[458,458],[459,459],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[460,462],[478,462],[[],456],[489,456],[[],456],[483,456],[484,456],[[],456],[[]],[[]],[[]],[[]],[[]],[463,466],[464,467],[[]],[[]],[[],457],[[],457],[[]],[[],458],[[]],[[],458],[[],458],[[],459],[[],459],[[],459],[[],459],[[],459],[468,459],[[]],[[],459],[464,468],[35,460],[35,462],[239,463],[239,465],[239,466],[239,457],[[35,454],460],[[239,457],463],[[],456],[[],468],[[],457],[[],458],[[],459],[[483,35],461],[[483,35],462],[[458,239],464],[[458,239],466],[[458,239],467],[[458,239],468],[[454,454],471],[[454,454],471],[[454,454,454],460],[[456,456,456,456],461],[[456,456,456],462],[[457,457,457],463],[[458,458,458,458],464],[[457,457],465],[[458,458,458],466],[[459,459,459,459],467],[[],460],[[],461],[[],462],[[],463],[[],464],[[],465],[[],466],[[],467],[[],460],[[],461],[[],462],[[],463],[[],464],[[],465],[[],466],[[],467],[[],460],[[],461],[[],462],[[],463],[[],464],[[],465],[[],466],[[],467],[[454,454],471],[483,462],[457,465],[458,466],[459,467],[[472,35,35,35],462],[[472,239,239,239],466],[[472,239,239,239],467],[[472,239,239,239],468],[477,460],[477,462],[465,463],[465,466],[[477,454],460],[[465,457],463],[478,460],[478,461],[466,463],[466,464],[466,465],[466,467],[466,468],[[478,483],461],[[466,458],464],[462,460],[479,461],[479,462],[467,464],[467,466],[467,468],[473,461],[473,462],[468,464],[468,466],[468,467],[24,[[12,[471]]]],[24,[[12,[460]]]],[24,[[12,[461]]]],[24,[[12,[462]]]],[24,[[12,[456]]]],[24,[[12,[463]]]],[24,[[12,[464]]]],[24,[[12,[465]]]],[24,[[12,[466]]]],[24,[[12,[467]]]],[24,[[12,[468]]]],[24,[[12,[457]]]],[24,[[12,[458]]]],[24,[[12,[459]]]],[[458,458],468],[[457,457],468],[[458,458],468],[[473,483],461],[[468,458],464],[[468,458],467],[35,461],[35,462],[239,464],[239,466],[239,467],[239,468],[35,461],[35,462],[239,464],[239,466],[239,467],[239,468],[35,461],[35,462],[239,464],[239,466],[239,467],[239,468],[454,460],[483,461],[454,462],[457,463],[458,464],[457,466],[458,467],[[457,239],465],[[454,35,454],460],[[454,35,454],462],[[457,239,457],463],[[457,239,457],466],[[483,473,483],461],[[458,468,458],464],[[458,468,458],467],[458,468],[[],456],[[],468],[[],457],[[],458],[[],459],[454,460],[483,461],[454,462],[457,463],[458,464],[457,466],[458,467],[459,468],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[239,239,239,239],468],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[[485,35],483],[471,44],[472,44],[469,44],[470,44],[460,44],[461,44],[462,44],[456,44],[463,44],[464,44],[465,44],[466,44],[467,44],[468,44],[457,44],[458,44],[459,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[471,454],[472],[469],[470],[471,35],0,[[456,39]],[[457,39]],[[458,39]],[[459,39]],[[456,39]],[[457,39]],[[458,39]],[[459,39]],[[471,35],471],[[471,471],471],[[485,483,483],[[12,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[471,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[472,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[469,6]]],[[7,[1,6]]]],[[[7,[470,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[460,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[461,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[462,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[456,6]]],[[7,[1,6]]]],[[[7,[463,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[464,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[465,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[466,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[467,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[468,6]]],[[7,[1,6]]]],[[[7,[457,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[458,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[459,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[471,6]]],[[7,[24,6]]]],[[[7,[472,6]]],[[7,[24,6]]]],[[[7,[469,6]]],[[7,[24,6]]]],[[[7,[470,6]]],[[7,[24,6]]]],[[[7,[460,6]]],[[7,[24,6]]]],[[[7,[461,6]]],[[7,[24,6]]]],[[[7,[462,6]]],[[7,[24,6]]]],[[[7,[456,6]]],[[7,[24,6]]]],[[[7,[463,6]]],[[7,[24,6]]]],[[[7,[464,6]]],[[7,[24,6]]]],[[[7,[465,6]]],[[7,[24,6]]]],[[[7,[466,6]]],[[7,[24,6]]]],[[[7,[467,6]]],[[7,[24,6]]]],[[[7,[468,6]]],[[7,[24,6]]]],[[[7,[457,6]]],[[7,[24,6]]]],[[[7,[458,6]]],[[7,[24,6]]]],[[[7,[459,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[460,460],[461,461],[462,462],[463,463],[464,464],[465,465],[466,466],[467,467],[468,468],[471,36],[460,36],[461,36],[462,36],[456,36],[463,36],[464,36],[465,36],[466,36],[467,36],[468,36],[457,36],[458,36],[459,36],[460,36],[461,36],[462,36],[456,36],[463,36],[464,36],[465,36],[466,36],[467,36],[468,36],[457,36],[458,36],[459,36],[456,469],[457,486],[458,487],[459,488],[468,36],[456,153],[457,153],[458,153],[459,153],[456,36],[468,36],[457,36],[458,36],[459,36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[471,47],[460,47],[461,47],[462,47],[456,47],[463,47],[464,47],[465,47],[466,47],[467,47],[457,47],[458,47],[459,47],[[490,490],474],[[490,490,490],475],[[490,490,490,490],476],[456,35],[468,239],[457,239],[458,239],[459,239],[456,35],[468,239],[457,239],[458,239],[459,239],[456,35],[468,239],[457,239],[458,239],[459,239],[[456,456,35],456],[[468,468,239],468],[[457,457,239],457],[[458,458,239],458],[[459,459,239],459],[[483,483,483],461],[[458,458,458],464],[[458,458,458],467],[[483,483,483],461],[[458,458,458],464],[[458,458,458],467],[[483,483,483],461],[[458,458,458],464],[[458,458,458],467],[[483,483,483],461],[[458,458,458],464],[[458,458,458],467],[[454,454],477],[[483,483,483],478],[[456,456,456],462],[[484,484,484,484],479],0,0,0,0,[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],0,[456,35],[457,239],[458,239],[459,239],[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],0,[456,35],[457,239],[458,239],[459,239],[[460,478]],[[460,460]],[[460,462]],[[461,461]],[[461,479]],[[462,456]],[[462,462]],[[462,460]],[[462,483],483],[[462,35]],[[456,35],456],[[456,456],456],[[463,463]],[[463,466]],[[464,467]],[[464,464]],[[465,239]],[[465,465]],[[465,457]],[[466,239]],[[466,463]],[[466,458]],[[466,466]],[[467,239]],[[467,467]],[[467,464]],[[467,459]],[[468,468],468],[[468,239],468],[[468,458]],[[457,239],457],[[457,457],457],[[458,239],458],[[458,458],458],[[459,459],459],[[459,239],459],[[456,456,456],456],[[457,457,457],457],[[458,458,458],458],[[459,459,459],459],[[462,462]],[[462,35]],[[456,456]],[[456,35]],[[465,239]],[[465,465]],[[466,466]],[[466,239]],[[467,467]],[[467,239]],[[468,468]],[[457,239]],[[457,457]],[[458,458]],[[458,239]],[[459,239]],[[459,459]],[[465,465],465],[[462,462],462],[[466,466],466],[[467,467],467],[[468,468],468],[[462,35],462],[[465,239],465],[[466,239],466],[[467,239],467],[[465,457],457],[[462,483],483],[[466,458],458],[[468,458],458],[[462,456],456],[[467,459],459],[[471,39],[[12,[38]]]],[[460,39],[[12,[38]]]],[[461,39],[[12,[38]]]],[[462,39],[[12,[38]]]],[[456,39],[[12,[38]]]],[[463,39],[[12,[38]]]],[[464,39],[[12,[38]]]],[[465,39],[[12,[38]]]],[[466,39],[[12,[38]]]],[[467,39],[[12,[38]]]],[[457,39],[[12,[38]]]],[[458,39],[[12,[38]]]],[[459,39],[[12,[38]]]],[462],[456,456],[465],[466],[467],[468,468],[457,457],[458,458],[459,459],[[35,35,35,35],471],[[36,36,36],469],[[36,36,36,36],470],[[35,35,35],456],[[239,239],457],[[239,239,239],458],[[239,239,239,239],459],[456,456],[468,468],[457,457],[458,458],[459,459],[456,456],[457,457],[458,458],[459,459],[469,469],[470,470],0,[[239,239,239,239,239,239],467],[[239,239,239,239,239,239],467],[[239,239,239,239,239,239],467],[457,457],[[457,457],239],[[239,239,239],467],[[239,239,239],467],[[239,239,239],467],[[239,239,239],467],[[239,239,239,239],467],[[239,239,239,239],467],[[239,239,239,239],467],[[456,35],456],[[457,239],457],[[458,239],458],[[459,239],459],0,[[],460],[[],461],[[],462],[[],462],[[],456],[[],456],[[],463],[[],464],[[],465],[[],465],[[],466],[[],466],[[],467],[[],467],[[],468],[[],468],[[],457],[[],457],[[],458],[[],458],[[],459],[[],459],[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],[[467,458],458],[[35,35,35,35],473],[456,456],[457,457],[458,458],[459,459],[471,50],[472,50],[469,50],[470,50],[460,50],[461,50],[462,50],[456,50],[463,50],[464,50],[465,50],[466,50],[467,50],[468,50],[457,50],[458,50],[459,50],[[[7,[471,6]]],51],[[[7,[472,6]]],51],[[[7,[469,6]]],51],[[[7,[470,6]]],51],[[[7,[460,6]]],51],[[[7,[461,6]]],51],[[[7,[462,6]]],51],[[[7,[456,6]]],51],[[[7,[463,6]]],51],[[[7,[464,6]]],51],[[[7,[465,6]]],51],[[[7,[466,6]]],51],[[[7,[467,6]]],51],[[[7,[468,6]]],51],[[[7,[457,6]]],51],[[[7,[458,6]]],51],[[[7,[459,6]]],51],[[471,24],[[12,[36]]]],[[460,24],[[12,[36]]]],[[461,24],[[12,[36]]]],[[462,24],[[12,[36]]]],[[456,24],[[12,[36]]]],[[463,24],[[12,[36]]]],[[464,24],[[12,[36]]]],[[465,24],[[12,[36]]]],[[466,24],[[12,[36]]]],[[467,24],[[12,[36]]]],[[468,24],[[12,[36]]]],[[457,24],[[12,[36]]]],[[458,24],[[12,[36]]]],[[459,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[471,53],[472,53],[469,53],[470,53],[460,53],[461,53],[462,53],[456,53],[463,53],[464,53],[465,53],[466,53],[467,53],[468,53],[457,53],[458,53],[459,53],[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],[[456,456],456],[[457,457],457],[[458,458],458],[[459,459],459],[[456,35],456],[[456,456],456],[[457,457],457],[[457,239],457],[[458,458],458],[[458,239],458],[[459,459],459],[[459,239],459],[[456,35]],[[456,456]],[[457,457]],[[457,239]],[[458,458]],[[458,239]],[[459,239]],[[459,459]],[[457,457],457],[456,456],[457,457],[458,458],[459,459],[[462,39],456],[[465,39],457],[[466,39],458],[[467,39],459],[[469,456,456],456],[[486,457,457],457],[[487,458,458],458],[[488,459,459],459],[485,10],[471,10],[472,10],[469,10],[470,10],[460,10],[461,10],[462,10],[456,10],[463,10],[464,10],[465,10],[466,10],[467,10],[468,10],[457,10],[458,10],[459,10],[[471,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[472,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[469,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[470,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[460,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[461,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[462,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[456,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[463,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[464,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[465,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[466,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[467,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[468,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[457,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[458,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[459,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[456,456],[457,457],[458,458],[459,459],[471,454],[[468,468,239],468],[36,469],[36,470],[35,456],[239,457],[239,458],[239,459],[[462,462]],[[456,35],456],[[456,456],456],[[465,465]],[[466,466]],[[467,467]],[[468,468],468],[[457,457],457],[[457,239],457],[[458,458],458],[[458,239],458],[[459,459],459],[[459,239],459],[[462,462]],[[456,35]],[[456,456]],[[465,465]],[[466,466]],[[467,467]],[[457,457]],[[457,239]],[[458,458]],[[458,239]],[[459,239]],[[459,459]],[[465,465],465],[[462,462],462],[[466,466],466],[[467,467],467],[[],462],[[],462],[[],456],[[],456],[[],465],[[],465],[[],466],[[],466],[[],467],[[],467],[[],468],[[],468],[[],457],[[],457],[[],458],[[],458],[[],459],[[],459],0,[456],[468],[457],[458],[459],[468],[460],[461],[462],[463],[464],[465],[466],[467],[460],[461],[462],[463],[464],[465],[466],[467],[[468,472]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[461],[464],[467],[468,458],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[460,454],454],[[462,454],454],[[463,457],457],[[466,457],457],[[461,483],483],[[464,458],458],[[467,458],458],[[461,456],456],[[460,454],454],[[462,454],454],[[463,457],457],[[466,457],457],[[461,483],483],[[464,458],458],[[467,458],458],[[461,456],456],0,0,0,0,[462,462],[465,465],[466,466],[467,467],[456,454],[458,457],[459,458],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[456,[[12,[456]]]],[457,[[12,[457]]]],[458,[[12,[458]]]],[459,[[12,[459]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[471,38],[472,38],[469,38],[470,38],[460,38],[461,38],[462,38],[456,38],[463,38],[464,38],[465,38],[466,38],[467,38],[468,38],[457,38],[458,38],[459,38],0,[[471,471],471],[[471,454],471],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[153,153],480],[[153,153,153],481],[[153,153,153,153],482],[[35,35],454],[[35,35,35],483],[[35,35,35],456],[[35,35,35,35],484],0,0,0,0,0,0,0,[471,35],[460],[461],[462],[463],[464],[465],[466],[467],[456],[468],[457],[458],[459],[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[[]],[456,454],[457,457],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[[]],[456,454],[457,457],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[468,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,454],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[[]],[456,454],[457,457],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[[]],[456,454],[457,457],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[[]],[456,456],[457,458],[458,458],[459,458],[[]],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[[]],[456,484],[457,459],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,454],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[456,454],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,454],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,454],[458,457],[459,457],[[]],[459,458],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,456],[458,458],[459,458],[[]],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],[[]],[[]],[456,484],[458,459],[459,459],0,0,0,0,0,0,0,0,0,0,0,[486,36],[487,36],[488,36],[486,36],[487,36],[488,36],[[486,24]],[[487,24]],[[488,24]],[[],1],[[],1],[486,1],[[],1],[[],1],[487,1],[[],1],[488,1],[[],1],[486,1],[[],1],[487,1],[[],1],[[],1],[488,1],[2],[2],[2],[[],26],[[],26],[[],26],[486,24],[487,24],[488,24],[486,24],[487,24],[488,24],[[486,486],486],[[487,487],487],[[488,488],488],[[486,486]],[[487,487]],[[488,488]],[486,153],[487,153],[488,153],[[486,486],486],[[487,487],487],[[488,488],488],[[486,486]],[[487,487]],[[488,488]],[[486,486],486],[[487,487],487],[[488,488],488],[[486,486]],[[487,487]],[[488,488]],[[]],[[]],[[]],[[]],[[]],[[]],[486,486],[487,487],[488,488],[486,30],[487,30],[488,30],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[486,[[7,[24,6]]]],[487,[[7,[24,6]]]],[488,[[7,[24,6]]]],[[486,40],[[10,[41]]]],[[487,40],[[10,[41]]]],[[488,40],[[10,[41]]]],[[],486],[[],487],[[],488],[[],[[10,[486]]]],[[],[[10,[487]]]],[[],[[10,[488]]]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[37],[37],[37],[[486,486],36],[[487,487],36],[[488,488],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[486,38],[[12,[24]]]],[[487,38],[[12,[24]]]],[[488,38],[[12,[24]]]],[[486,39],[[12,[24]]]],[[487,39],[[12,[24]]]],[[488,39],[[12,[24]]]],[[486,39],[[12,[24]]]],[[487,39],[[12,[24]]]],[[488,39],[[12,[24]]]],[486,39],[487,39],[488,39],[[486,38],[[12,[24]]]],[[487,38],[[12,[24]]]],[[488,38],[[12,[24]]]],[[486,40],[[10,[41]]]],[[486,40],[[10,[41]]]],[[487,40],[[10,[41]]]],[[487,40],[[10,[41]]]],[[488,40],[[10,[41]]]],[[488,40],[[10,[41]]]],[[]],[[]],[[]],[24,[[12,[486]]]],[24,[[12,[487]]]],[24,[[12,[488]]]],[42],[42],[42],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[486,44],[487,44],[488,44],[[],45],[[],45],[[],45],[486],[487],[488],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[486,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[487,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[488,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[486,6]]],[[7,[24,6]]]],[[[7,[487,6]]],[[7,[24,6]]]],[[[7,[488,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[486,47],[487,47],[488,47],[[486,39],[[12,[38]]]],[[487,39],[[12,[38]]]],[[488,39],[[12,[38]]]],[[36,36],486],[[36,36,36],487],[[36,36,36,36],488],[486,486],[487,487],[488,488],[486,50],[487,50],[488,50],[[[7,[486,6]]],51],[[[7,[487,6]]],51],[[[7,[488,6]]],51],[[486,24],[[12,[36]]]],[[487,24],[[12,[36]]]],[[488,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[486,53],[487,53],[488,53],[486,10],[487,10],[488,10],[[486,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[487,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[488,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[36,486],[36,487],[36,488],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[486,38],[487,38],[488,38],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[454,454],[483,483],[484,484],[[478,478,35],36],[[454,454,35],36],[[483,483,35],36],[[477,477,35],36],[[479,479,35],36],[[473,473,35],36],[[484,484,35],36],[[478,478]],[[454,454],454],[[454,35],454],[[483,483],483],[[483,35],483],[[477,477]],[[479,479]],[[473,473],473],[[484,484],484],[[484,35],484],[[478,478]],[[454,35]],[[454,454]],[[483,483]],[[483,35]],[[477,477]],[[479,479]],[[484,484]],[[484,35]],[[477,477],477],[[478,478],478],[[479,479],479],[[454,454],35],[[483,483],35],[[473,473],35],[483,483],[483],[483,483],[[478,24]],[[454,24]],[[483,24]],[[477,24]],[[479,24]],[[473,24]],[[484,24]],[[],1],[478,1],[454,1],[[],1],[[],1],[483,1],[477,1],[[],1],[479,1],[[],1],[473,1],[[],1],[[],1],[484,1],[478,1],[[],1],[[],1],[454,1],[483,1],[[],1],[[],1],[477,1],[[],1],[479,1],[473,1],[[],1],[484,1],[[],1],[2],[2],[2],[2],[2],[2],[2],[477,465],[478,466],[479,467],[454,457],[483,458],[484,459],[473,468],[454,474],[483,475],[484,476],[478],[454],[483],[477],[479],[484],[478],[454],[483],[477],[479],[484],[478],[454],[483],[477],[479],[473],[484],[478],[454],[483],[477],[479],[484],[478,24],[454,24],[483,24],[477,24],[479,24],[473,24],[484,24],[478,24],[454,24],[483,24],[477,24],[479,24],[473,24],[484,24],[454,480],[483,481],[484,482],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[454,454],[483,483],[484,484],[[454,454,454],454],[[483,483,483],483],[[484,484,484],484],[[454,35,35],454],[[483,35,35],483],[[484,35,35],484],[[454,35],454],[[483,35],483],[[484,35],484],[[454,35],454],[[483,35],483],[[484,35],484],[478,478],[454,454],[483,483],[477,477],[479,479],[473,473],[484,484],[478,30],[454,30],[483,30],[477,30],[479,30],[484,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[478,[[7,[24,6]]]],[454,[[7,[24,6]]]],[483,[[7,[24,6]]]],[477,[[7,[24,6]]]],[479,[[7,[24,6]]]],[473,[[7,[24,6]]]],[484,[[7,[24,6]]]],[[454,454],486],[[483,483],487],[[484,484],470],[[454,454],486],[[483,483],487],[[484,484],470],[[454,454],486],[[483,483],487],[[484,484],470],[[454,454],486],[[483,483],487],[[484,484],470],[[454,454],486],[[483,483],487],[[484,484],470],[[454,454],486],[[483,483],487],[[484,484],470],[[478,39],483],[[477,39],454],[[479,39],484],[[478,39],483],[[477,39],454],[[479,39],484],[473,473],[491,478],[491,454],[491,483],[491,477],[491,479],[491,484],[[483,483],483],[[478,40],[[10,[41]]]],[[454,40],[[10,[41]]]],[[483,40],[[10,[41]]]],[[477,40],[[10,[41]]]],[[479,40],[[10,[41]]]],[[473,40],[[10,[41]]]],[[484,40],[[10,[41]]]],[[],478],[[],454],[[],483],[[],477],[[],479],[[],473],[[],484],[477],[473],[484],[477],[473],[484],[[],[[10,[478]]]],[[],[[10,[454]]]],[[],[[10,[483]]]],[[],[[10,[477]]]],[[],[[10,[479]]]],[[],[[10,[473]]]],[[],[[10,[484]]]],[478,35],[477,35],[479,35],[[454,454],35],[[483,483],35],[[484,484],35],[[454,454],35],[[483,483],35],[[484,484],35],[[454,35],454],[[454,454],454],[[483,483],483],[[483,35],483],[[473,35],473],[[484,484],484],[[484,35],484],[[454,35]],[[454,454]],[[483,483]],[[483,35]],[[484,484]],[[484,35]],[[454,454],35],[[483,483],35],[[473,473],35],[[484,484],35],[[454,454],454],[[483,483],483],[[484,484],484],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[478,478],36],[[454,454],36],[[483,483],36],[[477,477],36],[[479,479],36],[[473,473],36],[[484,484],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[454,454],[483,483],[484,484],[[454,35],483],[[483,35],484],[[478,38],[[12,[24]]]],[[454,38],[[12,[24]]]],[[483,38],[[12,[24]]]],[[477,38],[[12,[24]]]],[[479,38],[[12,[24]]]],[[484,38],[[12,[24]]]],[[478,39],[[12,[24]]]],[[454,39],[[12,[24]]]],[[483,39],[[12,[24]]]],[[477,39],[[12,[24]]]],[[479,39],[[12,[24]]]],[[484,39],[[12,[24]]]],[[478,39],[[12,[24]]]],[[454,39],[[12,[24]]]],[[483,39],[[12,[24]]]],[[477,39],[[12,[24]]]],[[479,39],[[12,[24]]]],[[484,39],[[12,[24]]]],[478,39],[454,39],[483,39],[477,39],[479,39],[484,39],[[478,38],[[12,[24]]]],[[454,38],[[12,[24]]]],[[483,38],[[12,[24]]]],[[477,38],[[12,[24]]]],[[479,38],[[12,[24]]]],[[484,38],[[12,[24]]]],[454,454],[483,483],[484,484],[[478,40],[[10,[41]]]],[[478,40],[[10,[41]]]],[[454,40],[[10,[41]]]],[[454,40],[[10,[41]]]],[[483,40],[[10,[41]]]],[[483,40],[[10,[41]]]],[[477,40],[[10,[41]]]],[[477,40],[[10,[41]]]],[[479,40],[[10,[41]]]],[[479,40],[[10,[41]]]],[[473,40],[[10,[41]]]],[[473,40],[[10,[41]]]],[[484,40],[[10,[41]]]],[[484,40],[[10,[41]]]],[454,454],[483,483],[484,484],[462,478],[460,478],[[]],[[],454],[[]],[[],454],[[]],[[],483],[[],483],[456,483],[[],483],[[]],[461,479],[[]],[[]],[[],484],[[],484],[[],484],[[],484],[492,484],[489,484],[473,484],[[],484],[[],484],[[],484],[[],484],[[]],[461,473],[35,478],[35,454],[35,477],[[],454],[[],483],[[],473],[[],484],[[483,35],478],[[483,35],479],[[483,35],473],[[483,483,483],478],[[454,454],477],[[484,484,484,484],479],[[],478],[[],477],[[],479],[[],478],[[],477],[[],479],[[],478],[[],477],[[],479],[483,478],[454,477],[484,479],[[472,35,35,35],478],[[472,35,35,35],479],[[472,35,35,35],473],[477,478],[478,477],[478,479],[478,473],[462,477],[462,479],[462,473],[479,478],[479,473],[[],478],[[],454],[[],483],[[],477],[[],479],[[],484],[473,478],[473,479],[24,[[12,[478]]]],[24,[[12,[454]]]],[24,[[12,[483]]]],[24,[[12,[477]]]],[24,[[12,[479]]]],[24,[[12,[473]]]],[24,[[12,[484]]]],[[483,483],473],[[454,454],473],[[483,483],473],[[473,483],479],[35,478],[35,479],[35,473],[35,478],[35,479],[35,473],[35,478],[35,479],[35,473],[454,478],[483,479],[[454,35],477],[[454,35,454],478],[[483,473,483],479],[483,473],[[],454],[[],483],[[],473],[[],484],[454,478],[483,479],[484,473],[42],[42],[42],[42],[42],[42],[42],[[35,35,35,35],473],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[478,44],[454,44],[483,44],[477,44],[479,44],[473,44],[484,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[454,39]],[[483,39]],[[484,39]],[[454,39]],[[483,39]],[[484,39]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[478,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[454,6]]],[[7,[1,6]]]],[[[7,[483,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[477,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[479,6]]],[[7,[1,6]]]],[[[7,[473,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[484,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[478,6]]],[[7,[24,6]]]],[[[7,[454,6]]],[[7,[24,6]]]],[[[7,[483,6]]],[[7,[24,6]]]],[[[7,[477,6]]],[[7,[24,6]]]],[[[7,[479,6]]],[[7,[24,6]]]],[[[7,[473,6]]],[[7,[24,6]]]],[[[7,[484,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[478,478],[477,477],[479,479],[473,473],[478,36],[454,36],[483,36],[477,36],[479,36],[473,36],[484,36],[478,36],[454,36],[483,36],[477,36],[479,36],[473,36],[484,36],[454,486],[483,487],[484,470],[473,36],[454,153],[483,153],[484,153],[454,36],[483,36],[473,36],[484,36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[478,47],[454,47],[483,47],[477,47],[479,47],[484,47],[454,35],[483,35],[473,35],[484,35],[454,35],[483,35],[473,35],[484,35],[454,35],[483,35],[473,35],[484,35],[[454,454,35],454],[[483,483,35],483],[[473,473,35],473],[[484,484,35],484],[[483,483,483],479],[[483,483,483],479],[[483,483,483],479],[[483,483,483],479],[[454,454],477],[[483,483,483],478],[[456,456,456],462],[[484,484,484,484],479],0,0,[[454,454],454],[[483,483],483],[[484,484],484],[454,35],[483,35],[484,35],[[454,454],454],[[483,483],483],[[484,484],484],[454,35],[483,35],[484,35],[[478,460]],[[478,483]],[[478,478]],[[478,456],456],[[478,35]],[[454,35],454],[[454,454],454],[[483,483],483],[[483,35],483],[[477,454]],[[477,35]],[[477,477]],[[479,479]],[[479,35]],[[479,461]],[[479,484]],[[473,456]],[[473,35],473],[[473,483]],[[473,473],473],[[484,484],484],[[484,35],484],[[454,454,454],454],[[483,483,483],483],[[484,484,484],484],[[478,478]],[[478,35]],[[454,35]],[[454,454]],[[483,483]],[[483,35]],[[477,35]],[[477,477]],[[479,35]],[[479,479]],[[473,473]],[[484,35]],[[484,484]],[[477,477],477],[[478,478],478],[[479,479],479],[[473,473],473],[[478,35],478],[[477,35],477],[[479,35],479],[[477,454],454],[[478,483],483],[[473,483],483],[[478,456],456],[[473,456],456],[[479,484],484],[[478,39],[[12,[38]]]],[[454,39],[[12,[38]]]],[[483,39],[[12,[38]]]],[[477,39],[[12,[38]]]],[[479,39],[[12,[38]]]],[[484,39],[[12,[38]]]],[478],[454,454],[483,483],[477],[479],[473,473],[484,484],[[35,35],454],[[35,35,35],483],[[35,35,35,35],484],[454,454],[483,483],[473,473],[484,484],[454,454],[483,483],[484,484],[[35,35,35,35,35,35],479],[[35,35,35,35,35,35],479],[[35,35,35,35,35,35],479],[454,454],[[454,454],35],[[35,35,35],479],[[35,35,35],479],[[35,35,35],479],[[35,35,35],479],[[35,35,35,35],479],[[35,35,35,35],479],[[35,35,35,35],479],[[454,35],454],[[483,35],483],[[484,35],484],[[],478],[[],478],[[],454],[[],454],[[],483],[[],483],[[],477],[[],477],[[],479],[[],479],[[],473],[[],473],[[],484],[[],484],[[454,454],454],[[483,483],483],[[484,484],484],[[454,454],454],[[483,483],483],[[484,484],484],[[479,483],483],[[35,35,35,35],473],[[478,491]],[[454,491]],[[483,491]],[[477,491]],[[479,491]],[[484,491]],[454,454],[483,483],[484,484],[478,50],[454,50],[483,50],[477,50],[479,50],[473,50],[484,50],[[[7,[478,6]]],51],[[[7,[454,6]]],51],[[[7,[483,6]]],51],[[[7,[477,6]]],51],[[[7,[479,6]]],51],[[[7,[473,6]]],51],[[[7,[484,6]]],51],[[478,24],[[12,[36]]]],[[454,24],[[12,[36]]]],[[483,24],[[12,[36]]]],[[477,24],[[12,[36]]]],[[479,24],[[12,[36]]]],[[473,24],[[12,[36]]]],[[484,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[478,53],[454,53],[483,53],[477,53],[479,53],[473,53],[484,53],[[454,454],454],[[483,483],483],[[484,484],484],[[454,454],454],[[483,483],483],[[484,484],484],[[454,454],454],[[454,35],454],[[483,35],483],[[483,483],483],[[484,35],484],[[484,484],484],[[454,454]],[[454,35]],[[483,483]],[[483,35]],[[484,484]],[[484,35]],[[454,454],454],[454,454],[483,483],[484,484],[[478,39],483],[[477,39],454],[[479,39],484],[[486,454,454],454],[[487,483,483],483],[[470,484,484],484],[478,10],[454,10],[483,10],[477,10],[479,10],[473,10],[484,10],[[478,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[454,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[483,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[477,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[479,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[473,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[484,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[454,454],[483,483],[484,484],[[473,473,35],473],[35,454],[35,483],[35,484],[[478,478]],[[454,35],454],[[454,454],454],[[483,35],483],[[483,483],483],[[477,477]],[[479,479]],[[473,473],473],[[484,35],484],[[484,484],484],[[478,478]],[[454,35]],[[454,454]],[[483,35]],[[483,483]],[[477,477]],[[479,479]],[[484,484]],[[484,35]],[[477,477],477],[[478,478],478],[[479,479],479],[[],478],[[],478],[[],454],[[],454],[[],483],[[],483],[[],477],[[],477],[[],479],[[],479],[[],473],[[],473],[[],484],[[],484],[454],[483],[473],[484],[473],[478],[477],[479],[478],[477],[479],[[473,472]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[479],[473,483],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[478,454],454],[[479,483],483],[[479,456],456],[[478,454],454],[[479,483],483],[[479,456],456],0,0,[478,478],[477,477],[479,479],[483,454],[484,483],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[454,[[12,[454]]]],[483,[[12,[483]]]],[484,[[12,[484]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[478,38],[454,38],[483,38],[477,38],[479,38],[473,38],[484,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[35,35],454],[[35,35,35],483],[[35,35,35],456],[[35,35,35,35],484],0,[478],[477],[479],[[478,493]],[[454,493]],[[483,493]],[[477,493]],[[479,493]],[[484,493]],[454],[483],[473],[484],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],0,0,0,0,0,[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[454,454],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[454,454],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[483,483],[473,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],0,0,0,0,0,[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[454,454],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[454,454],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[454,483],[483,483],[484,483],[484,484],[454,484],[483,484],[484,484],[454,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],0,0,0,0,[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[484,483],[484,484],[484,484],[484,484],[484,484],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,454],[484,454],[484,483],[484,484],[484,484],[484,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],[483,483],[484,483],[484,484],[483,484],[484,484],[483,484],[484,484],[483,484],[484,484],0,0,0,0,0,0,0,0,0,[[457,457],465],[[458,458,458],466],[[459,459,459,459],467],[[239,239,239,239],468],[[239,239],457],[[239,239,239],458],[[239,239,239,239],459],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[474,474],[475,475],[476,476],[[474,474],474],[[474,490],474],[[475,490],475],[[475,475],475],[[476,490],476],[[476,476],476],[[474,474]],[[474,490]],[[475,490]],[[475,475]],[[476,476]],[[476,490]],[[474,24]],[[475,24]],[[476,24]],[[],1],[[],1],[474,1],[475,1],[[],1],[[],1],[[],1],[476,1],[[],1],[[],1],[474,1],[475,1],[[],1],[476,1],[[],1],[2],[2],[2],[474,457],[475,458],[476,459],[[],26],[[],26],[[],26],[474],[475],[476],[474],[475],[476],[474],[475],[476],[474],[475],[476],[474,24],[475,24],[476,24],[474,24],[475,24],[476,24],[474,480],[475,481],[476,482],[474,454],[475,483],[475,456],[476,484],[[474,490]],[[474,474]],[[475,475]],[[475,490]],[[476,490]],[[476,476]],[[474,490]],[[474,474]],[[475,475]],[[475,490]],[[476,490]],[[476,476]],[[474,490]],[[474,474]],[[475,475]],[[475,490]],[[476,490]],[[476,476]],[[]],[[]],[[]],[[]],[[]],[[]],[[474,474,474],474],[[475,475,475],475],[[476,476,476],476],[474,474],[475,475],[476,476],[474,30],[475,30],[476,30],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[474,[[7,[24,6]]]],[475,[[7,[24,6]]]],[476,[[7,[24,6]]]],[[474,474],486],[[475,475],487],[[476,476],488],[[474,474],486],[[475,475],487],[[476,476],488],[[474,474],486],[[475,475],487],[[476,476],488],[[474,474],486],[[475,475],487],[[476,476],488],[[474,474],486],[[475,475],487],[[476,476],488],[[474,474],486],[[475,475],487],[[476,476],488],[491,474],[491,475],[491,476],[[475,475],475],[[474,40],[[10,[41]]]],[[475,40],[[10,[41]]]],[[476,40],[[10,[41]]]],[[],474],[[],475],[[],476],[[],[[10,[474]]]],[[],[[10,[475]]]],[[],[[10,[476]]]],[[474,474],474],[[474,490],474],[[475,490],475],[[475,475],475],[[476,476],476],[[476,490],476],[[474,474]],[[474,490]],[[475,475]],[[475,490]],[[476,476]],[[476,490]],[[474,474],490],[[475,475],490],[[476,476],490],[[474,474],474],[[475,475],475],[[476,476],476],[[]],[[]],[[]],[26,36],[26,36],[26,36],[37],[37],[37],[[474,474],36],[[475,475],36],[[476,476],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[474,490],475],[[475,490],476],[[474,38],[[12,[24]]]],[[475,38],[[12,[24]]]],[[476,38],[[12,[24]]]],[[474,39],[[12,[24]]]],[[475,39],[[12,[24]]]],[[476,39],[[12,[24]]]],[[474,39],[[12,[24]]]],[[475,39],[[12,[24]]]],[[476,39],[[12,[24]]]],[474,39],[475,39],[476,39],[[474,38],[[12,[24]]]],[[475,38],[[12,[24]]]],[[476,38],[[12,[24]]]],[[474,40],[[10,[41]]]],[[474,40],[[10,[41]]]],[[475,40],[[10,[41]]]],[[475,40],[[10,[41]]]],[[476,40],[[10,[41]]]],[[476,40],[[10,[41]]]],[[],474],[[],474],[[]],[[]],[[],475],[[],475],[[],475],[[],476],[[],476],[[],476],[[],476],[[],476],[[]],[[],476],[[],474],[[],475],[[],476],[[],474],[[],475],[[],476],[24,[[12,[474]]]],[24,[[12,[475]]]],[24,[[12,[476]]]],[[],474],[[],475],[[],476],[42],[42],[42],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[474,44],[475,44],[476,44],[[],45],[[],45],[[],45],[474],[475],[476],[[474,39]],[[475,39]],[[476,39]],[[474,39]],[[475,39]],[[476,39]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[474,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[475,6]]],[[7,[1,6]]]],[[[7,[476,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[474,6]]],[[7,[24,6]]]],[[[7,[475,6]]],[[7,[24,6]]]],[[[7,[476,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[474,153],[475,153],[476,153],[[],36],[[],36],[[],36],[474,47],[475,47],[476,47],[[490,490],474],[[490,490,490],475],[[490,490,490,490],476],[[474,474],474],[[475,475],475],[[476,476],476],[474,490],[475,490],[476,490],[[474,474],474],[[475,475],475],[[476,476],476],[474,490],[475,490],[476,490],[[474,474],474],[[474,490],474],[[475,475],475],[[475,490],475],[[476,476],476],[[476,490],476],[[474,490]],[[474,474]],[[475,475]],[[475,490]],[[476,490]],[[476,476]],[[474,39],[[12,[38]]]],[[475,39],[[12,[38]]]],[[476,39],[[12,[38]]]],[474,474],[475,475],[476,476],[[490,490],474],[[490,490,490],475],[[490,490,490,490],476],[474],[475],[476],[474,474],[[474,474],490],[[],474],[[],474],[[],475],[[],475],[[],476],[[],476],[[474,491]],[[475,491]],[[476,491]],[474,[[12,[43]]]],[475,[[12,[43]]]],[476,[[12,[43]]]],[474,50],[475,50],[476,50],[[[7,[474,6]]],51],[[[7,[475,6]]],51],[[[7,[476,6]]],51],[[474,24],[[12,[36]]]],[[475,24],[[12,[36]]]],[[476,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[474,53],[475,53],[476,53],[[474,474],474],[[474,490],474],[[475,490],475],[[475,475],475],[[476,490],476],[[476,476],476],[[474,474]],[[474,490]],[[475,490]],[[475,475]],[[476,476]],[[476,490]],[[474,474],474],[[486,474,474],474],[[487,475,475],475],[[488,476,476],476],[474,10],[475,10],[476,10],[[474,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[475,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[476,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[474,490]],[[474,474]],[[474,297]],[[474,144]],[[474,480]],[[474,494]],[[474,153]],[[474,163]],[[475,297]],[[475,490]],[[475,475]],[[475,494]],[[475,481]],[[475,163]],[[475,153]],[[475,144]],[[476,482]],[[476,476]],[[476,297]],[[476,153]],[[476,490]],[[476,144]],[[476,494]],[[476,163]],[[474,297]],[[474,144]],[[474,480]],[[474,163]],[[474,494]],[[474,490]],[[474,153]],[[474,474]],[[475,144]],[[475,163]],[[475,153]],[[475,475]],[[475,490]],[[475,297]],[[475,481]],[[475,494]],[[476,144]],[[476,297]],[[476,153]],[[476,476]],[[476,163]],[[476,482]],[[476,494]],[[476,490]],[474,474],[475,475],[476,476],[490,474],[490,475],[490,476],[[474,474],474],[[474,490],474],[[475,475],475],[[475,490],475],[[476,476],476],[[476,490],476],[[474,474]],[[474,490]],[[475,490]],[[475,475]],[[476,476]],[[476,490]],[[],474],[[],474],[[],475],[[],475],[[],476],[[],476],[474],[475],[476],[[]],[[]],[[]],[[],78],[[],78],[[],78],[475,474],[476,475],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[474,38],[475,38],[476,38],[[],12],[[],12],[[],12],0,[[474,493]],[[475,493]],[[476,493]],[474],[475],[476],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],0,0,0,[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[474,474],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[474,474],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],0,0,0,[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[474,474],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[474,474],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[474,475],[475,475],[476,475],[476,476],[474,476],[475,476],[476,476],[474,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],0,0,[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[476,475],[476,476],[476,476],[476,476],[476,476],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,474],[476,474],[476,475],[476,476],[476,476],[476,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],[475,475],[476,475],[476,476],[475,476],[476,476],[475,476],[476,476],[475,476],[476,476],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[480,153],480],[[480,480],480],[[481,153],481],[[481,481],481],[[482,482],482],[[482,153],482],[[480,480]],[[480,153]],[[481,153]],[[481,481]],[[482,482]],[[482,153]],[[480,24]],[[481,24]],[[482,24]],[480,1],[[],1],[[],1],[481,1],[[],1],[[],1],[[],1],[[],1],[482,1],[480,1],[[],1],[481,1],[[],1],[482,1],[[],1],[2],[2],[2],[480,457],[481,458],[482,459],[[],26],[[],26],[[],26],[480,474],[481,475],[482,476],[480],[481],[482],[480],[481],[482],[480],[481],[482],[480],[481],[482],[480,24],[481,24],[482,24],[480,24],[481,24],[482,24],[480,454],[481,483],[481,456],[482,484],[[480,153]],[[480,480]],[[481,153]],[[481,481]],[[482,482]],[[482,153]],[[480,480]],[[480,153]],[[481,153]],[[481,481]],[[482,482]],[[482,153]],[[480,153]],[[480,480]],[[481,153]],[[481,481]],[[482,482]],[[482,153]],[[]],[[]],[[]],[[]],[[]],[[]],[[480,480,480],480],[[481,481,481],481],[[482,482,482],482],[480,480],[481,481],[482,482],[480,30],[481,30],[482,30],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[480,[[7,[24,6]]]],[481,[[7,[24,6]]]],[482,[[7,[24,6]]]],[[480,480],486],[[481,481],487],[[482,482],488],[[480,480],486],[[481,481],487],[[482,482],488],[[480,480],486],[[481,481],487],[[482,482],488],[[480,480],486],[[481,481],487],[[482,482],488],[[480,480],486],[[481,481],487],[[482,482],488],[[480,480],486],[[481,481],487],[[482,482],488],[491,480],[491,481],[491,482],[[481,481],481],[[480,40],[[10,[41]]]],[[481,40],[[10,[41]]]],[[482,40],[[10,[41]]]],[[],480],[[],481],[[],482],[[],[[10,[480]]]],[[],[[10,[481]]]],[[],[[10,[482]]]],[[480,153],480],[[480,480],480],[[481,481],481],[[481,153],481],[[482,153],482],[[482,482],482],[[480,480]],[[480,153]],[[481,481]],[[481,153]],[[482,482]],[[482,153]],[[480,480],153],[[481,481],153],[[482,482],153],[[480,480],480],[[481,481],481],[[482,482],482],[[]],[[]],[[]],[26,36],[26,36],[26,36],[37],[37],[37],[[480,480],36],[[481,481],36],[[482,482],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[480,153],481],[[481,153],482],[[480,38],[[12,[24]]]],[[481,38],[[12,[24]]]],[[482,38],[[12,[24]]]],[[480,39],[[12,[24]]]],[[481,39],[[12,[24]]]],[[482,39],[[12,[24]]]],[[480,39],[[12,[24]]]],[[481,39],[[12,[24]]]],[[482,39],[[12,[24]]]],[480,39],[481,39],[482,39],[[480,38],[[12,[24]]]],[[481,38],[[12,[24]]]],[[482,38],[[12,[24]]]],[[480,40],[[10,[41]]]],[[480,40],[[10,[41]]]],[[481,40],[[10,[41]]]],[[481,40],[[10,[41]]]],[[482,40],[[10,[41]]]],[[482,40],[[10,[41]]]],[[]],[[],480],[[],480],[[],481],[[],481],[[],481],[[]],[[],482],[[],482],[[],482],[[]],[[],482],[[],482],[[],482],[[],480],[[],481],[[],482],[[],480],[[],481],[[],482],[24,[[12,[480]]]],[24,[[12,[481]]]],[24,[[12,[482]]]],[[],480],[[],481],[[],482],[42],[42],[42],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[480,44],[481,44],[482,44],[[],45],[[],45],[[],45],[480],[481],[482],[[480,39]],[[481,39]],[[482,39]],[[480,39]],[[481,39]],[[482,39]],[[]],[[]],[[]],[[[7,[480,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[481,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[482,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[480,6]]],[[7,[24,6]]]],[[[7,[481,6]]],[[7,[24,6]]]],[[[7,[482,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[480,47],[481,47],[482,47],[[480,480],480],[[481,481],481],[[482,482],482],[480,153],[481,153],[482,153],[[480,480],480],[[481,481],481],[[482,482],482],[480,153],[481,153],[482,153],[[480,480],480],[[480,153],480],[[481,481],481],[[481,153],481],[[482,482],482],[[482,153],482],[[480,153]],[[480,480]],[[481,153]],[[481,481]],[[482,153]],[[482,482]],[[480,39],[[12,[38]]]],[[481,39],[[12,[38]]]],[[482,39],[[12,[38]]]],[[153,153],480],[[153,153,153],481],[[153,153,153,153],482],[480],[481],[482],[[],480],[[],480],[[],481],[[],481],[[],482],[[],482],[[480,491]],[[481,491]],[[482,491]],[480,[[12,[43]]]],[481,[[12,[43]]]],[482,[[12,[43]]]],[480,50],[481,50],[482,50],[[[7,[480,6]]],51],[[[7,[481,6]]],51],[[[7,[482,6]]],51],[[480,24],[[12,[36]]]],[[481,24],[[12,[36]]]],[[482,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[480,53],[481,53],[482,53],[[480,480],480],[[480,153],480],[[481,481],481],[[481,153],481],[[482,482],482],[[482,153],482],[[480,480]],[[480,153]],[[481,153]],[[481,481]],[[482,153]],[[482,482]],[[486,480,480],480],[[487,481,481],481],[[488,482,482],482],[480,10],[481,10],[482,10],[[480,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[481,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[482,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[480,480]],[[480,297]],[[480,163]],[[480,494]],[[480,153]],[[480,490]],[[480,144]],[[480,474]],[[481,153]],[[481,163]],[[481,490]],[[481,481]],[[481,475]],[[481,144]],[[481,297]],[[481,494]],[[482,494]],[[482,490]],[[482,476]],[[482,482]],[[482,297]],[[482,153]],[[482,144]],[[482,163]],[[480,490]],[[480,297]],[[480,163]],[[480,144]],[[480,494]],[[480,153]],[[480,474]],[[480,480]],[[481,481]],[[481,490]],[[481,475]],[[481,494]],[[481,297]],[[481,163]],[[481,153]],[[481,144]],[[482,494]],[[482,482]],[[482,297]],[[482,163]],[[482,144]],[[482,153]],[[482,476]],[[482,490]],[153,480],[153,481],[153,482],[[480,153],480],[[480,480],480],[[481,153],481],[[481,481],481],[[482,153],482],[[482,482],482],[[480,480]],[[480,153]],[[481,153]],[[481,481]],[[482,482]],[[482,153]],[[],480],[[],480],[[],481],[[],481],[[],482],[[],482],[480],[481],[482],[[]],[[]],[[]],[[],78],[[],78],[[],78],[481,480],[482,481],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[480,38],[481,38],[482,38],[[],12],[[],12],[[],12],[[153,153],480],[[153,153,153],481],[[153,153,153,153],482],0,[[480,493]],[[481,493]],[[482,493]],[480],[481],[482],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],0,0,0,[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[480,480],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[480,480],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],0,0,0,[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[480,480],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[480,480],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[480,481],[481,481],[482,481],[482,482],[480,482],[481,482],[482,482],[480,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],0,0,[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[482,481],[482,482],[482,482],[482,482],[482,482],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,480],[482,480],[482,481],[482,482],[482,482],[482,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],[481,481],[482,481],[482,482],[481,482],[482,482],[481,482],[482,482],[481,482],[482,482],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[198,20]],[60,61],[60,61],[60,61],[[],495],[[],496],[[],497],0,[[],498],[499,498],0,0,[60,61],[60,61],[60,61],[[],61],[[],61],[[],61],[[498,24]],[[500,24]],[[501,24]],[[502,24]],[[503,24]],[[504,24]],[[505,24]],[[506,24]],[[507,24]],[[508,24]],[[509,24]],[[510,24]],[[511,24]],[[512,24]],[[513,24]],[[514,24]],[[515,24]],[[516,24]],[[517,24]],[[518,24]],[[499,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[498,1],[[],1],[[],1],[500,1],[[],1],[[],1],[501,1],[[],1],[[],1],[[],1],[502,1],[[],1],[503,1],[[],1],[504,1],[[],1],[[],1],[505,1],[506,1],[[],1],[[],1],[507,1],[[],1],[508,1],[509,1],[[],1],[510,1],[[],1],[511,1],[[],1],[[],1],[512,1],[513,1],[[],1],[514,1],[[],1],[515,1],[[],1],[[],1],[[],1],[[],1],[516,1],[517,1],[[],1],[[],1],[518,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[499,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[498,1],[[],1],[[],1],[500,1],[501,1],[[],1],[[],1],[[],1],[[],1],[[],1],[502,1],[[],1],[503,1],[[],1],[504,1],[505,1],[[],1],[[],1],[506,1],[[],1],[507,1],[508,1],[[],1],[[],1],[509,1],[510,1],[[],1],[[],1],[511,1],[[],1],[512,1],[513,1],[[],1],[[],1],[514,1],[[],1],[515,1],[[],1],[516,1],[[],1],[[],1],[517,1],[[],1],[518,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[499,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[499,519,212,2,520],[[10,[521,522]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[499,2],523],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[498,24],[500,24],[501,24],[502,24],[503,24],[504,24],[505,24],[506,24],[507,24],[508,24],[509,24],[510,24],[511,24],[512,24],[513,24],[514,24],[515,24],[516,24],[517,24],[518,24],[499,24],[498,24],[500,24],[501,24],[502,24],[503,24],[504,24],[505,24],[506,24],[507,24],[508,24],[509,24],[510,24],[511,24],[512,24],[513,24],[514,24],[515,24],[516,24],[517,24],[518,24],[499,24],0,0,0,[60,61],[60,61],[60,61],0,0,[212,519],[524,[[12,[525]]]],0,[[495,495],495],[[496,496],496],[[497,497],497],[[495,495]],[[496,496]],[[497,497]],[[495,495],495],[[496,496],496],[[497,497],497],[[495,495]],[[496,496]],[[497,497]],[495,153],[496,153],[497,153],[[495,495],495],[[496,496],496],[[497,497],497],[[495,495]],[[496,496]],[[497,497]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[526,510],[[527,28]],[[528,28]],[[529,28]],[[530,28]],[[531,28]],[[532,18,20,533],[[12,[534]]]],[535,195],[[35,35,35,36],454],[43,536],0,0,[[[20,[537]],20,20,[20,[[538,[507]]]],20]],[539],[540,540],[498,498],[541,541],[500,500],[501,501],[502,502],[503,503],[504,504],[505,505],[506,506],[507,507],[508,508],[509,509],[510,510],[511,511],[512,512],[513,513],[542,542],[516,516],[517,517],[518,518],[537,537],[543,543],[499,499],[495,495],[523,523],[544,544],[545,545],[546,546],[547,547],[548,548],[549,549],[550,550],[551,551],[552,552],[496,496],[553,553],[554,554],[497,497],[498,29],[500,30],[501,30],[502,30],[503,30],[504,29],[505,30],[506,30],[507,30],[508,30],[509,30],[510,30],[511,30],[512,30],[513,30],[514,30],[515,30],[516,29],[517,30],[518,29],[499,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[498,[[7,[24,6]]]],[500,[[7,[24,6]]]],[501,[[7,[24,6]]]],[502,[[7,[24,6]]]],[503,[[7,[24,6]]]],[504,[[7,[24,6]]]],[505,[[7,[24,6]]]],[506,[[7,[24,6]]]],[507,[[7,[24,6]]]],[508,[[7,[24,6]]]],[509,[[7,[24,6]]]],[510,[[7,[24,6]]]],[511,[[7,[24,6]]]],[512,[[7,[24,6]]]],[513,[[7,[24,6]]]],[514,[[7,[24,6]]]],[515,[[7,[24,6]]]],[516,[[7,[24,6]]]],[517,[[7,[24,6]]]],[518,[[7,[24,6]]]],[499,[[7,[24,6]]]],0,[[495,495],109],[[496,496],109],[[497,497],109],0,0,0,0,0,[495,495],[496,496],[497,497],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],0,0,0,0,[[555,170],36],[[495,495],36],[[496,496],36],[[497,497],36],[491,523],[491,545],[491,548],[491,556],[491,557],[491,549],[491,550],[491,551],[491,553],0,0,0,[[498,40],[[10,[41]]]],[[499,40],[[10,[41]]]],[[],526],[[],527],[[],558],[[],528],[[],530],[[],498],[[],541],[[],500],[[],501],[[],559],[[],560],[[],561],[[],503],[[],505],[[],506],[[],507],[[],508],[[],509],[[],510],[[],511],[[],512],[[],513],[[],514],[[],515],[[],517],[[],518],[[],562],[[],537],[[],555],[[],563],[[],564],[[],499],[[],523],[[],565],[[],545],[[],566],[[],548],[[],556],[[],557],[[],549],[[],550],[[],567],[[],531],[[],568],[[],35],[499,35],0,0,0,[564],[564],[[495,495],495],[[496,496],496],[[497,497],497],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[535,197],0,0,[542,[[7,[74,6]]]],[546,[[7,[74,6]]]],[547,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[37],[37],[37],[37],0,0,0,[[],495],[[],496],[[],497],0,[535,170],0,0,[[540,540],36],[[498,498],36],[[542,542],36],[[495,495],36],[[544,544],36],[[546,546],36],[[547,547],36],[[496,496],36],[[497,497],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[495],[496],[497],[[198,[200,[[20,[[199,[202]]]]]]]],[[198,[200,[[20,[[199,[569]]]]]]]],[[],12],[[],12],[[198,[200,[[17,[506]]]],[200,[[17,[509]]]],[200,[[17,[555]]]],[200,[20]],[200,[20]],[200,[[20,[[538,[507]]]]]],[81,[39]],[81,[39]]]],[[198,[200,[[284,[94]]]],[200,[[17,[18]]]]]],[[198,[81,[39]],[81,[39]],[200,[20]]]],[[],513],[[198,[81,[39]],[96,[568]],[200,[20]],[200,[[17,[[18,[570]]]]]],[200,[[20,[571]]]]]],0,0,[[498,38],[[12,[24]]]],[[500,38],[[12,[24]]]],[[501,38],[[12,[24]]]],[[502,38],[[12,[24]]]],[[503,38],[[12,[24]]]],[[504,38],[[12,[24]]]],[[505,38],[[12,[24]]]],[[506,38],[[12,[24]]]],[[507,38],[[12,[24]]]],[[508,38],[[12,[24]]]],[[509,38],[[12,[24]]]],[[510,38],[[12,[24]]]],[[511,38],[[12,[24]]]],[[512,38],[[12,[24]]]],[[513,38],[[12,[24]]]],[[514,38],[[12,[24]]]],[[515,38],[[12,[24]]]],[[516,38],[[12,[24]]]],[[517,38],[[12,[24]]]],[[518,38],[[12,[24]]]],[[499,38],[[12,[24]]]],[[498,39],[[12,[24]]]],[[500,39],[[12,[24]]]],[[501,39],[[12,[24]]]],[[502,39],[[12,[24]]]],[[503,39],[[12,[24]]]],[[504,39],[[12,[24]]]],[[505,39],[[12,[24]]]],[[506,39],[[12,[24]]]],[[507,39],[[12,[24]]]],[[508,39],[[12,[24]]]],[[509,39],[[12,[24]]]],[[510,39],[[12,[24]]]],[[511,39],[[12,[24]]]],[[512,39],[[12,[24]]]],[[513,39],[[12,[24]]]],[[514,39],[[12,[24]]]],[[515,39],[[12,[24]]]],[[516,39],[[12,[24]]]],[[517,39],[[12,[24]]]],[[518,39],[[12,[24]]]],[[499,39],[[12,[24]]]],[[498,39],[[12,[24]]]],[[500,39],[[12,[24]]]],[[501,39],[[12,[24]]]],[[502,39],[[12,[24]]]],[[503,39],[[12,[24]]]],[[504,39],[[12,[24]]]],[[505,39],[[12,[24]]]],[[506,39],[[12,[24]]]],[[507,39],[[12,[24]]]],[[508,39],[[12,[24]]]],[[509,39],[[12,[24]]]],[[510,39],[[12,[24]]]],[[511,39],[[12,[24]]]],[[512,39],[[12,[24]]]],[[513,39],[[12,[24]]]],[[514,39],[[12,[24]]]],[[515,39],[[12,[24]]]],[[516,39],[[12,[24]]]],[[517,39],[[12,[24]]]],[[518,39],[[12,[24]]]],[[499,39],[[12,[24]]]],[498,39],[500,39],[501,39],[502,39],[503,39],[504,39],[505,39],[506,39],[507,39],[508,39],[509,39],[510,39],[511,39],[512,39],[513,39],[514,39],[515,39],[516,39],[517,39],[518,39],[499,39],[[498,38],[[12,[24]]]],[[500,38],[[12,[24]]]],[[501,38],[[12,[24]]]],[[502,38],[[12,[24]]]],[[503,38],[[12,[24]]]],[[504,38],[[12,[24]]]],[[505,38],[[12,[24]]]],[[506,38],[[12,[24]]]],[[507,38],[[12,[24]]]],[[508,38],[[12,[24]]]],[[509,38],[[12,[24]]]],[[510,38],[[12,[24]]]],[[511,38],[[12,[24]]]],[[512,38],[[12,[24]]]],[[513,38],[[12,[24]]]],[[514,38],[[12,[24]]]],[[515,38],[[12,[24]]]],[[516,38],[[12,[24]]]],[[517,38],[[12,[24]]]],[[518,38],[[12,[24]]]],[[499,38],[[12,[24]]]],0,0,0,0,0,[[498,40],[[10,[41]]]],[[500,40],[[10,[41]]]],[[501,40],[[10,[41]]]],[[559,40],[[10,[41]]]],[[560,40],[[10,[41]]]],[[561,40],[[10,[41]]]],[[503,40],[[10,[41]]]],[[504,40],[[10,[41]]]],[[505,40],[[10,[41]]]],[[506,40],[[10,[41]]]],[[507,40],[[10,[41]]]],[[508,40],[[10,[41]]]],[[509,40],[[10,[41]]]],[[510,40],[[10,[41]]]],[[511,40],[[10,[41]]]],[[512,40],[[10,[41]]]],[[513,40],[[10,[41]]]],[[542,40],[[10,[41]]]],[[516,40],[[10,[41]]]],[[517,40],[[10,[41]]]],[[518,40],[[10,[41]]]],[[562,40],[[10,[41]]]],[[537,40],[[10,[41]]]],[[499,40],[[10,[41]]]],[[495,40],[[10,[41]]]],[[495,40],[[10,[41]]]],[[495,40],[[10,[41]]]],[[495,40],[[10,[41]]]],[[495,40],[[10,[41]]]],[[545,40],[[10,[41]]]],[[546,40],[[10,[41]]]],[[547,40],[[10,[41]]]],[[572,40],[[10,[41]]]],[[548,40],[[10,[41]]]],[[549,40],[[10,[41]]]],[[550,40],[[10,[41]]]],[[551,40],[[10,[41]]]],[[496,40],[[10,[41]]]],[[496,40],[[10,[41]]]],[[496,40],[[10,[41]]]],[[496,40],[[10,[41]]]],[[496,40],[[10,[41]]]],[[497,40],[[10,[41]]]],[[497,40],[[10,[41]]]],[[497,40],[[10,[41]]]],[[497,40],[[10,[41]]]],[[497,40],[[10,[41]]]],0,[[],573],[[],573],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[526,510],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[574]]],499],[492,499],[[]],[[]],[[]],[499,544],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,[[12,[495]]]],[153,[[12,[496]]]],[153,[[12,[497]]]],[153,495],[153,496],[153,497],[153,495],[153,496],[153,497],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,497],[[],495],[[],496],[[],497],[153,497],[575,496],[575,497],[24,[[12,[498]]]],[24,[[12,[512]]]],[24,[[12,[516]]]],[24,[[12,[517]]]],[24,[[12,[499]]]],[35,504],[[35,492],504],[[35,492,492],504],[[35,35],504],[[35,35,492],504],[[35,35,492,492],504],[[35,35],504],[35,504],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42,543],[42],[42],[42],[42],[42,576],[42],[42],[42],[42],[42],[42],[42],[42],[42,552],[42,577],[42],[42],[42,554],[42],0,0,[[500,39],578],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[554,2,12],12],[[500,39],578],[498,44],[500,44],[501,44],[502,44],[503,44],[504,44],[505,44],[506,44],[507,44],[508,44],[509,44],[510,44],[511,44],[512,44],[513,44],[514,44],[515,44],[516,44],[517,44],[518,44],[499,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,0,0,0,0,0,[540],[542],[495],[544],[546],[547],[496],[497],0,[74,61],[74,61],[74,61],[[],61],[[],61],[[],61],[74,61],[74,61],[74,61],0,[[498,38],[[12,[39]]]],[[504,38],[[12,[39]]]],[[516,38],[[12,[39]]]],[[518,38],[[12,[39]]]],0,[579,[[34,[184,6]]]],[[495,495]],[[496,496]],[[497,497]],0,0,[[495,495],495],[[496,496],496],[[497,497],497],[[495,495],36],[[496,496],36],[[497,497],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[498,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[500,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[501,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[502,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[503,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[504,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[505,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[506,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[507,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[508,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[509,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[510,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[511,6]]],[[7,[1,6]]]],[[[7,[512,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[513,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[514,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[515,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[516,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[517,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[518,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[499,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[],61],[[],61],[[[7,[498,6]]],[[7,[24,6]]]],[[[7,[500,6]]],[[7,[24,6]]]],[[[7,[501,6]]],[[7,[24,6]]]],[[[7,[502,6]]],[[7,[24,6]]]],[[[7,[503,6]]],[[7,[24,6]]]],[[[7,[504,6]]],[[7,[24,6]]]],[[[7,[505,6]]],[[7,[24,6]]]],[[[7,[506,6]]],[[7,[24,6]]]],[[[7,[507,6]]],[[7,[24,6]]]],[[[7,[508,6]]],[[7,[24,6]]]],[[[7,[509,6]]],[[7,[24,6]]]],[[[7,[510,6]]],[[7,[24,6]]]],[[[7,[511,6]]],[[7,[24,6]]]],[[[7,[512,6]]],[[7,[24,6]]]],[[[7,[513,6]]],[[7,[24,6]]]],[[[7,[514,6]]],[[7,[24,6]]]],[[[7,[515,6]]],[[7,[24,6]]]],[[[7,[516,6]]],[[7,[24,6]]]],[[[7,[517,6]]],[[7,[24,6]]]],[[[7,[518,6]]],[[7,[24,6]]]],[[[7,[499,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[495,36],[496,36],[497,36],[542,36],[546,36],[547,36],[537,36],[495,36],[496,36],[497,36],[[502,2],36],[542,36],[546,36],[547,36],[500,580],[537,580],[555,127],[498,46],[500,47],[501,47],[502,47],[503,47],[504,46],[505,47],[506,47],[507,47],[508,47],[509,47],[510,47],[511,47],[512,47],[513,47],[514,47],[515,47],[516,46],[517,47],[518,46],[499,47],[500,580],0,[[35,35],35],[537,39],[539,[[12,[525]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[581,536],[581,536],[581,536],0,0,[497,153],[539,39],[[498,39],[[12,[38]]]],[[500,39],[[12,[38]]]],[[501,39],[[12,[38]]]],[[502,39],[[12,[38]]]],[[503,39],[[12,[38]]]],[[504,39],[[12,[38]]]],[[505,39],[[12,[38]]]],[[506,39],[[12,[38]]]],[[507,39],[[12,[38]]]],[[508,39],[[12,[38]]]],[[509,39],[[12,[38]]]],[[510,39],[[12,[38]]]],[[511,39],[[12,[38]]]],[[512,39],[[12,[38]]]],[[513,39],[[12,[38]]]],[[514,39],[[12,[38]]]],[[515,39],[[12,[38]]]],[[516,39],[[12,[38]]]],[[517,39],[[12,[38]]]],[[518,39],[[12,[38]]]],[[499,39],[[12,[38]]]],[42,579],[581,577],[581,539],0,0,[495,495],[496,496],[497,497],0,0,0,0,[539,[[12,[525]]]],0,0,0,[[495,495],[[12,[109]]]],[[496,496],[[12,[109]]]],[[497,497],[[12,[109]]]],0,0,0,0,0,0,0,0,0,[[198,[17,[212]],[17,[582]],[17,[554]],[17,[577]],[20,[[199,[[583,[207]]]]]]]],[[198,[17,[212]],[17,[582]],[96,[566]],[20,[[199,[584]]]]]],[[198,[96,[210]],[17,[212]],[17,[582]],[96,[577]],[96,[567]],[20,[[199,[[583,[207]]]]]],[17,[513]],[17,[506]],[17,[509]],[81,[36]],[81,[36]],20,20]],[[[81,[558]],[96,[563]],[96,[564]],[17,[212]],[17,[[2,[574]]]],[17,[520]],[17,[543]]]],[[198,[96,[210]],[17,[211]],[17,[212]],20]],[[[17,[212]],[17,[582]],[96,[568]]]],0,0,[[],573],[[],573],[[],573],[496,575],[497,575],0,[[539,39]],[[539,39,39,39]],[[[17,[[585,[205]]]],[17,[[585,[206]]]],[17,[[585,[207]]]],[17,[543]],[96,[[586,[543]]]],[17,[220]],[17,[211]],[17,[[2,[587]]]],[17,[564]],20,[17,[[2,[574]]]],20]],[[198,[17,[554]],[17,[212]],[17,[[588,[553]]]],[17,[568]]]],[[198,[17,[212]],[17,[554]],[17,[552]],[17,[567]],[17,[577]],[17,[566]],[17,[589]],20,[17,[[2,[574]]]],590,591,[17,[592]],[17,[211]],[17,[593]]]],[[[17,[[585,[225]]]],[17,[[585,[226]]]],[17,[576]],[96,[[586,[576]]]],[17,[220]],[17,[211]],[17,[[2,[587]]]],[17,[564]],20,20]],[[[17,[212]],[17,[576]],[17,[589]],[96,[565]]]],[[[17,[212]],[17,[552]],[96,[567]],[17,[589]]]],[[[17,[[585,[535]]]],[17,[552]],[20,[48,[538,[514]]]],[17,[[2,[587]]]],[96,[[586,[552]]]],[17,[220]],20,20,[20,[500,[199,[594]]]],[20,[501,[199,[572]]]],[20,[578,[199,[594]]]]]],0,0,0,0,[[523,491]],[[545,491]],[[548,491]],[[556,491]],[[557,491]],[[549,491]],[[550,491]],[[551,491]],[[553,491]],[498,[[12,[43]]]],[504,[[12,[43]]]],[516,[[12,[43]]]],[518,[[12,[43]]]],[498,50],[500,50],[501,50],[502,50],[503,50],[504,50],[505,50],[506,50],[507,50],[508,50],[509,50],[510,50],[511,50],[512,50],[513,50],[514,50],[515,50],[516,50],[517,50],[518,50],[499,50],[[[7,[498,6]]],51],[[[7,[500,6]]],51],[[[7,[501,6]]],51],[[[7,[502,6]]],51],[[[7,[503,6]]],51],[[[7,[504,6]]],51],[[[7,[505,6]]],51],[[[7,[506,6]]],51],[[[7,[507,6]]],51],[[[7,[508,6]]],51],[[[7,[509,6]]],51],[[[7,[510,6]]],51],[[[7,[511,6]]],51],[[[7,[512,6]]],51],[[[7,[513,6]]],51],[[[7,[514,6]]],51],[[[7,[515,6]]],51],[[[7,[516,6]]],51],[[[7,[517,6]]],51],[[[7,[518,6]]],51],[[[7,[499,6]]],51],[[498,24],[[12,[36]]]],[[500,24],[[12,[36]]]],[[501,24],[[12,[36]]]],[[502,24],[[12,[36]]]],[[503,24],[[12,[36]]]],[[504,24],[[12,[36]]]],[[505,24],[[12,[36]]]],[[506,24],[[12,[36]]]],[[507,24],[[12,[36]]]],[[508,24],[[12,[36]]]],[[509,24],[[12,[36]]]],[[510,24],[[12,[36]]]],[[511,24],[[12,[36]]]],[[512,24],[[12,[36]]]],[[513,24],[[12,[36]]]],[[514,24],[[12,[36]]]],[[515,24],[[12,[36]]]],[[516,24],[[12,[36]]]],[[517,24],[[12,[36]]]],[[518,24],[[12,[36]]]],[[499,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[498,53],[500,53],[501,53],[502,53],[503,53],[504,53],[505,53],[506,53],[507,53],[508,53],[509,53],[510,53],[511,53],[512,53],[513,53],[514,53],[515,53],[516,53],[517,53],[518,53],[499,53],0,0,[[495,495]],[[496,496]],[[497,497]],[[48,595],596],[[597,595],596],[[535,597,595],596],[595,596],[595,596],[595,596],0,[[579,185,186,42],[[10,[187]]]],[82,61],[82,61],[82,61],[[498,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[500,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[501,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[502,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[503,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[504,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[505,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[506,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[507,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[508,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[509,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[510,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[511,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[512,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[513,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[514,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[515,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[516,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[517,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[518,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[499,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[495,495,36]],[[496,496,36]],[[497,497,36]],0,0,0,0,0,0,0,0,0,0,[523,536],[545,536],[548,536],[556,536],[557,536],[549,536],[550,536],[551,536],[553,536],0,0,0,0,0,0,[[]],[535],[[543,222,598,540],[[10,[599]]]],[[543,598],[[10,[222,599]]]],[[543,222,598,[540,[499]]],[[10,[599]]]],[[576,598],[[10,[222,599]]]],[[552,598],[[10,[222,599]]]],[[554,598],[[10,[222,599]]]],0,0,0,[[495,495],495],[[496,496],496],[[497,497],497],[[495,495]],[[496,496]],[[497,497]],[[495,495],495],[[496,496],496],[[497,497],497],[534,534],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[495,495]],[[496,496]],[[497,497]],0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[498,38],[500,38],[501,38],[502,38],[503,38],[504,38],[505,38],[506,38],[507,38],[508,38],[509,38],[510,38],[511,38],[512,38],[513,38],[514,38],[515,38],[516,38],[517,38],[518,38],[[],38],[499,38],[[],54],[[495,495],495],[[496,496],496],[[497,497],497],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[579,42]],[[[17,[509]],20,20]],[20],[[[17,[555]],[20,[600]]]],[[[17,[555]],[20,[600]]]],0,[498,39],[504,39],[516,39],[518,39],[498,38],[504,38],[516,38],[518,38],[498,55],[504,55],[516,55],[518,55],[[],573],0,0,0,0,0,0,0,0,0,0,0,0,0,[[539,212,582]],[[523,493]],[[545,493]],[[548,493]],[[556,493]],[[557,493]],[[549,493]],[[550,493]],[[551,493]],[[553,493]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],498],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],35],0,0,0,0,0,0,0,0,0,0,0,[[],573],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],573],[[],573],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[543,222,598,540],[[10,[599]]]],0,0,0,0,0,0,0,[[],573],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[601,24]],[[602,24]],[[],1],[[],1],[601,1],[602,1],[[],1],[[],1],[[],1],[601,1],[[],1],[[],1],[602,1],[[],1],[2],[2],[2],[2],[601,24],[602,24],[601,24],[602,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[603,28]],[601,601],[602,602],[604,604],[601,30],[602,30],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[601,[[7,[24,6]]]],[602,[[7,[24,6]]]],[[32,33]],[[],603],[[],601],[[],602],[[]],[[]],[[]],[[]],[[],12],[[],602],[[601,38],[[12,[24]]]],[[602,38],[[12,[24]]]],[[601,39],[[12,[24]]]],[[602,39],[[12,[24]]]],[[601,39],[[12,[24]]]],[[602,39],[[12,[24]]]],[601,39],[602,39],[[601,38],[[12,[24]]]],[[602,38],[[12,[24]]]],[[603,40],[[10,[41]]]],[[601,40],[[10,[41]]]],[[602,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42,604],[[]],[38,12],[38,12],[38,12],[38,12],[601,44],[602,44],[[],45],[[],45],0,[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[601,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[602,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[601,6]]],[[7,[24,6]]]],[[[7,[602,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[601,47],[602,47],[[601,39],[[12,[38]]]],[[602,39],[[12,[38]]]],[601,50],[602,50],[[[7,[601,6]]],51],[[[7,[602,6]]],51],[[601,24],[[12,[36]]]],[[602,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[601,53],[602,53],[[601,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[602,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[604,598],[[10,[222,599]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[601,38],[602,38],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[170],[170],[[]],[60,61],[60,290],[60,291],[60,292],0,0,0,0,[[],498],0,[60,61],[60,290],[60,291],[60,292],[[],61],[[],290],[[],291],[[],292],0,0,[24],[42],[42],[42],[[],178],0,[[],1],[[],1],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,[60,61],[60,290],[60,291],[60,292],0,0,0,0,[28],[[],4],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],291],[[],292],0,[153],0,0,[[]],0,0,0,[[],30],[[],190],[[],[[7,[24,6]]]],0,0,0,0,0,0,0,0,0,0,[[],178],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[293],[40,[[10,[41]]]],0,0,[[]],0,[[]],0,0,[[],[[34,[[7,[74,6]],6]]]],[[],35],0,0,[[]],[[]],[[42,170]],0,0,0,0,0,0,0,0,[[],[[7,[74,6]]]],[[],[[10,[248]]]],0,0,0,0,0,0,0,[[[293,[10]]]],0,0,0,0,0,0,[38,[[12,[24]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[[],39],[[],39],[38,[[12,[24]]]],[39,[[12,[24]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],573],[24,12],[42],0,0,0,0,0,0,0,0,[38,12],[39,12],[38,12],[39,12],[[],153],[[],44],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[293],0,0,0,0,0,[74,61],[74,290],[74,291],[74,292],[[],61],[74,61],[74,290],[74,291],[74,292],0,[293],0,0,[[]],[[]],[42],0,[39],[39],0,0,0,0,[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[24,6]]]],[[]],[[]],0,0,[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[170,367],[170,368],[[],47],[[],191],0,0,0,[[],153],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[174,[38]]]],[[],38],[[],78],0,[39,[[12,[38]]]],0,0,[[],290],0,0,0,0,0,[[],294],0,0,0,0,0,0,0,0,0,0,0,0,[[],295],0,0,0,0,0,0,0,0,[[],573],[[],573],0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,[[],[[12,[43]]]],[[],50],[[[7,[6]]],51],[24,[[12,[36]]]],[[],53],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],0,0,0,[[],75],[[],75],[[],75],0,0,[[]],[42],[82,61],[82,290],[[],75],[42],0,0,0,0,0,0,0,0,0,[[],[[12,[605]]]],[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[],4],[[]],[[]],[153],[153],[170],[170],[170],[28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[543,222,598,540],[[10,[599]]]],0,0,0,0,0,[[],75],[[],75],[[],75],0,0,0,0,0,0,[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[[],38],0,[[[293,[10]]]],[42],0,[[]],[[],573],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[293,[10]]]],0,0,0,0,0,0,0,0,0,[125],[125],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[606,606],[607,607],[608,608],[609,609],[610,610],[611,611],[612,612],[613,613],[614,614],[615,615],[616,616],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],617],[[],606],[[],607],[[],608],[[],609],[[],610],[[],611],[[],612],[[],613],[[],614],[[],615],[[],616],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[454,608],[[606,40],[[10,[41]]]],[[607,40],[[10,[41]]]],[[608,40],[[10,[41]]]],[[609,40],[[10,[41]]]],[[610,40],[[10,[41]]]],[[611,40],[[10,[41]]]],[[612,40],[[10,[41]]]],[[613,40],[[10,[41]]]],[[614,40],[[10,[41]]]],[[615,40],[[10,[41]]]],[[616,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[614,613],[[]],[[]],[[]],[[]],[[483,483],607],[35,609],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[35,606],[[35,35,35],607],[454,608],[[35,39],613],[35,614],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[293],[[[293,[10]]]],[293],[293],[75,75],[[[293,[10]]]],[[[293,[10]]]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[386,265],[265,297],[386,297],[266,297],[265,266],[386,266],[266,265],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[265,39],265],[[386,39],386],[[266,39],266],[[265,618],265],[[386,618],386],[[266,618],266],[619,619],[264,264],[620,620],[266,266],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[296,[[298,[297]]]],[[]],[266],[[]],[265],[[]],[[]],[[]],[[]],[[]],[[]],[386],[[265,40],[[10,[41]]]],[[386,40],[[10,[41]]]],[[266,40],[[10,[41]]]],[[]],[[],[[265,[264]]]],[[]],[[],619],[[]],[[]],[[]],[[],[[266,[264]]]],[[]],[[619,39]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[298,[297]]],265],[[[298,[297]]],386],[[[298,[297]]],266],[265,386],[[]],[386],[[[386,[620]]]],[265,265],[[]],[[]],[[]],[[]],[[[265,[264]]],[[265,[620]]]],[[[386,[264]]],[[386,[620]]]],[[[266,[264]]],[[266,[620]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[621,45]],[24],[[622,24]],[[623,24]],[[624,24]],[[30,24]],[[625,24]],[[190,24]],[[29,24]],[24],[[626,40],[[10,[41]]]],[[],[[12,[43]]]],[24,[[12,[36]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[622,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[623,1],[[],1],[[],1],[624,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[30,1],[[],1],[[],1],[625,1],[[],1],[[],1],[190,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[29,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[622,1],[[],1],[[],1],[[],1],[[],1],[[],1],[623,1],[[],1],[624,1],[[],1],[[],1],[[],1],[[],1],[[],1],[30,1],[[],1],[625,1],[[],1],[[],1],[190,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[29,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],24],[622,24],[623,24],[624,24],[30,24],[625,24],[190,24],[29,24],[[],24],[622,24],[623,24],[624,24],[30,24],[625,24],[190,24],[29,24],[[627,[266,[264]]],24],[[627,[265,[264]]],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[628,39],[45,45],[628,628],[629,629],[630,630],[631,631],[632,632],[633,633],[634,634],[635,635],[636,636],[637,637],[44,44],[638,638],[639,639],[640,640],[641,641],[642,642],[627,627],[643,643],[644,644],[55,55],[645,645],[646,646],[647,647],[648,648],[[],624],[[],30],[[],625],[[],190],[[],29],[[],622],[[],623],[622,622],[623,623],[624,624],[30,30],[625,625],[190,190],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[24,6]]]],[622,[[7,[24,6]]]],[623,[[7,[24,6]]]],[624,[[7,[24,6]]]],[30,[[7,[24,6]]]],[625,[[7,[24,6]]]],[190,[[7,[24,6]]]],[29,[[7,[24,6]]]],[[634,634],109],[[644,38],36],[45,12],[45,12],[40,[[10,[41]]]],[[623,40],[[10,[41]]]],[[624,40],[[10,[41]]]],[[30,40],[[10,[41]]]],[[625,40],[[10,[41]]]],[[190,40],[[10,[41]]]],[[29,40],[[10,[41]]]],[[],621],[[],623],[[],624],[[],30],[[],625],[[],190],[[],640],[[],643],[[],29],[642,[[10,[[7,[24,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[24,6]]],[[10,[[7,[6]],[7,[24,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[31,6]]],[[10,[[7,[6]],[7,[31,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,12],[31,12],[[[9,[31]]],[[10,[9,[9,[31]]]]]],[24,12],[31,12],[[[7,[6]]],[[34,[[7,[24,6]],6]]]],[[[7,[6]]],[[34,[[7,[24,6]],6]]]],[[[7,[6]]],[[34,[6]]]],[[[7,[6]]],[[34,[[7,[24,6]],6]]]],[[[7,[622,6]]],[[34,[[7,[24,6]],6]]]],[[[7,[623,6]]],[[34,[[7,[24,6]],6]]]],[[[7,[624,6]]],[[34,[6]]]],[[[7,[625,6]]],[[34,[[7,[24,6]],6]]]],[26,36],[26,36],[26,36],[37],[37],[[634,24],[[10,[52]]]],[[634,24],[[10,[52]]]],[[],621],[[649,40],[[10,[41]]]],[[],[[12,[43]]]],[24,[[12,[36]]]],[[52,52],36],[[634,634],36],[[55,55],36],[[],36],[[],36],[[],36],[38,[[12,[24]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[38,[[12,[24]]]],[[635,38],[[12,[629]]]],[[30,38],[[12,[24]]]],[[625,39],[[12,[24]]]],[[190,39],[[12,[24]]]],[[29,38],[[12,[24]]]],[[646,38],[[12,[629]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[[635,39],[[12,[629]]]],[[30,39],[[12,[24]]]],[[636,39],[[12,[630]]]],[[637,39],[[12,[630]]]],[[29,39],[[12,[24]]]],[[646,39],[[12,[629]]]],[[647,39],[[12,[630]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[[30,39],[[12,[24]]]],[[29,39],[[12,[24]]]],[[],39],[[],39],[[],39],[[],39],[635,39],[30,39],[636,39],[625,39],[637,39],[190,39],[29,39],[646,39],[647,39],[38,[[12,[24]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[38,[[12,[24]]]],[[30,38],[[12,[24]]]],[[625,39],[[12,[24]]]],[[190,39],[[12,[24]]]],[[29,38],[[12,[24]]]],[635],[646],[[24,40],[[10,[41]]]],[[45,40],[[10,[41]]]],[[628,40],[[10,[41]]]],[[622,40],[[10,[41]]]],[[629,40],[[10,[41]]]],[[630,40],[[10,[41]]]],[[632,40],[[10,[41]]]],[[623,40],[[10,[41]]]],[[633,40],[[10,[41]]]],[[624,40],[[10,[41]]]],[[52,40],[[10,[41]]]],[[52,40],[[10,[41]]]],[[634,40],[[10,[41]]]],[[634,40],[[10,[41]]]],[[635,40],[[10,[41]]]],[[30,40],[[10,[41]]]],[[636,40],[[10,[41]]]],[[625,40],[[10,[41]]]],[[637,40],[[10,[41]]]],[[190,40],[[10,[41]]]],[[44,40],[[10,[41]]]],[[638,40],[[10,[41]]]],[[639,40],[[10,[41]]]],[[640,40],[[10,[41]]]],[[643,40],[[10,[41]]]],[[29,40],[[10,[41]]]],[[644,40],[[10,[41]]]],[[55,40],[[10,[41]]]],[[645,40],[[10,[41]]]],[[646,40],[[10,[41]]]],[[647,40],[[10,[41]]]],[[648,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[650,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],643],[30,643],[625,643],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[24,12],[[631,24],[[12,[[7,[24,6]]]]]],[[]],[[],631],[[],641],[[],642],[[],627],[[[34,[6]]],622],[42],[42],[42],[42],[42],[42],[42],[42],[42],0,[39,[[12,[24]]]],[39,[[12,[24]]]],[24,[[12,[24]]]],[[621,11],[[12,[45]]]],[[622,39],[[12,[24]]]],[[623,39],[[12,[24]]]],[[624,24],[[12,[24]]]],[39,12],[[624,39],12],[38,12],[39,12],[39,12],[[651,38],12],[[652,39],12],[[653,39],12],[38,12],[39,12],[39,12],[38,12],[39,12],[39,12],[[651,38],12],[[652,39],12],[[653,39],12],[38,12],[39,12],[39,12],[[],43],[[],43],[39,[[12,[24]]]],[39,[[12,[24]]]],[24,[[12,[24]]]],[[621,11],[[12,[45]]]],[[622,39],[[12,[24]]]],[[623,39],[[12,[24]]]],[[624,24],[[12,[24]]]],[[641,24],605],[[621,11],12],[[621,11],12],[[],44],[[621,11],[[12,[44]]]],[622,44],[623,44],[624,44],[30,44],[625,44],[190,44],[29,44],[[],45],[[621,38],[[12,[45]]]],[[621,38],[[12,[45]]]],[[621,38],[[12,[45]]]],[[621,38],[[12,[45]]]],[634],[55],0,0,0,[[]],[630,39],[38,[[12,[39]]]],[[635,38],[[12,[39]]]],[[30,38],[[12,[39]]]],[[29,38],[[12,[39]]]],[[644,38],[[12,[39]]]],[[646,38],[[12,[39]]]],[[39,[7,[24,6]]]],[45],[[623,39,[7,[24,6]]]],[624],[[30,38]],[625],[190],[[[7,[24,6]],[7,[24,6]]],[[12,[[7,[24,6]]]]]],[[624,[7,[24,6]],[7,[24,6]]],[[12,[[7,[24,6]]]]]],[[30,38,[7,[24,6]]]],[[625,[7,[24,6]]]],[[190,[7,[24,6]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[622,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[623,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[624,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[30,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[625,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[190,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[29,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[623],[624],[[[7,[6]]],[[7,[24,6]]]],[[[7,[622,6]]],[[7,[24,6]]]],[[[7,[623,6]]],[[7,[24,6]]]],[[[7,[624,6]]],[[7,[24,6]]]],[[[7,[30,6]]],[[7,[24,6]]]],[[[7,[625,6]]],[[7,[24,6]]]],[[[7,[190,6]]],[[7,[24,6]]]],[[[7,[29,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,36],[31,36],[628,36],[629,36],[630,36],[632,36],[633,36],[635,36],[636,36],[637,36],[44,36],[638,36],[639,36],[644,36],[[],36],[[],36],[[],36],[55,36],[628,36],[632,36],[628,11],[632,11],[628,38],[632,38],[[],654],[[],655],[[],656],[621,127],[622,654],[623,655],[624,656],[635,[[348,[629]]]],[636,[[348,[630]]]],[637,[[348,[630]]]],[644,[[348,[645]]]],[646,[[348,[629]]]],[647,[[348,[630]]]],[[],47],[[],657],[[],191],[[],46],[30,47],[625,657],[190,191],[29,46],[621,127],[633,36],[633,11],[633,38],[[],39],[[],39],[[],39],[622,39],[623,39],[624,39],[24],[[658,40],[[10,[41]]]],[[],[[12,[43]]]],[24,[[12,[36]]]],[24],[[659,40],[[10,[41]]]],[24,[[12,[36]]]],[660,[[12,[38]]]],[622,38],[629,38],[623,38],[624,38],[635,38],[30,38],[625,38],[637,38],[190,38],[29,38],[644,38],[645,38],[646,38],[647,38],[648,38],[39,[[12,[38]]]],[39,[[12,[38]]]],[[30,39],[[12,[38]]]],[[29,39],[[12,[38]]]],[626,654],[658,655],[651,47],[652,657],[653,191],[[],621],[649,46],[39,628],[[[7,[6]]],622],[38,629],[39,630],[[],632],[[],633],[38,635],[[],636],[38,637],[[],638],[[],639],[[],29],[38,644],[38,646],[38,647],[38,648],[39,29],[654,12],[655,12],[656,12],[47,12],[657,12],[191,12],[46,12],[[],45],[38,[[10,[634,52]]]],[[634,634],[[12,[109]]]],[38,[[10,[52]]]],[38,[[10,[52]]]],[[],[[12,[[7,[24,6]]]]]],[623,[[12,[[7,[24,6]]]]]],0,[130],[[[7,[24,6]]]],[623],[[623,[7,[24,6]]]],[[623,[7,[24,6]]]],[640,[[662,[661,621]]]],[[634,24],[[10,[24,52]]]],[[634,24],[[10,[24,52]]]],[[],[[12,[43]]]],[622,[[12,[43]]]],[623,[[12,[43]]]],[29,[[12,[43]]]],[[],50],[622,50],[623,50],[624,50],[30,50],[625,50],[190,50],[29,50],[[[7,[6]]],51],[[[7,[622,6]]],51],[[[7,[623,6]]],51],[[[7,[624,6]]],51],[[[7,[30,6]]],51],[[[7,[625,6]]],51],[[[7,[190,6]]],51],[[[7,[29,6]]],51],[24,[[12,[36]]]],[[622,24],[[12,[36]]]],[[623,24],[[12,[36]]]],[[624,24],[[12,[36]]]],[[30,24],[[12,[36]]]],[[625,24],[[12,[36]]]],[[190,24],[[12,[36]]]],[[29,24],[[12,[36]]]],[38,[[10,[24,52]]]],[[24,38],[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[[24,38],[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[[],53],[622,53],[623,53],[624,53],[30,53],[625,53],[190,53],[29,53],0,[621],[621],[39,[[7,[24,6]]]],[24,[[12,[[7,[24,6]]]]]],[[623,39],[[7,[24,6]]]],[[624,24],[[12,[[7,[24,6]]]]]],[24,36],0,[[],[[12,[605]]]],[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[622,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[623,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[624,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[30,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[625,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[190,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[29,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[622,78]],[[623,78]],[[624,78]],[[30,78]],[[625,78]],[[190,78]],[[29,78]],[29],[[29,39]],[45,38],[654],[655],[656],[47],[657],[191],[46],[52,[[12,[93]]]],0,[[651,40],[[10,[41]]]],[24,[[12,[36]]]],[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[24],[[652,40],[[10,[41]]]],[24,[[12,[36]]]],[[653,40],[[10,[41]]]],[24,[[12,[36]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[45,11],[[],11],[[],11],[[],11],[[],11],[628,11],[[],11],[[],11],[629,11],[[],11],[630,11],[[],11],[632,11],[[],11],[[],11],[633,11],[[],11],[[],11],[[],11],[[],11],[635,11],[[],11],[[],11],[636,11],[[],11],[[],11],[637,11],[[],11],[[],11],[[],11],[44,11],[[],11],[638,11],[[],11],[639,11],[[],11],[[],11],[[],11],[627,11],[[],11],[[],11],[[],11],[[],11],[644,11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[45,44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],38],[[],38],[45,38],[628,38],[622,38],[629,38],[630,38],[632,38],[623,38],[633,38],[624,38],[635,38],[30,38],[636,38],[625,38],[637,38],[190,38],[44,38],[638,38],[639,38],[29,38],[644,38],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[660,24],[633,36],[633,11],[633,38],[[644,38],[[12,[645]]]],[[644,39],[[12,[645]]]],[[],39],[29,39],[644,39],[[],38],[29,38],[644],[[],78],[[644,38],78],[[],55],[29,55],[640,[[663,[661,621]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[[],115],[[],115],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,39],[[10,[115]]]],[[664,39],[[10,[115]]]],[[664,39],[[10,[115]]]],[[664,39],[[10,[115]]]],[[664,38,39],[[10,[115]]]],[[664,38,39],[[10,[115]]]],[[664,38,39],[[10,[115]]]],[[664,38,39],[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[664,[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[664,38],[[10,[115]]]],[[]],[[],665],[[],666],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[[38,667],[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[[38,667],[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[[38,667],[[10,[668,115]]]],[[39,667],[[10,[668,115]]]],[[38,39,667],[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[667,[[10,[668,115]]]],[[38,667],[[10,[668,115]]]],[[],36],[[],36],[113,[[10,[114,115]]]],[36,[[10,[114,115]]]],[[],[[10,[114,115]]]],[669,[[10,[114,115]]]],[35,[[10,[114,115]]]],[239,[[10,[114,115]]]],[670,[[10,[114,115]]]],[163,[[10,[114,115]]]],[490,[[10,[114,115]]]],[671,[[10,[114,115]]]],[494,[[10,[114,115]]]],[[[12,[39]]],[[10,[672,115]]]],[[38,673],[[10,[114,115]]]],[[38,153,38,673],[[10,[114,115]]]],[[],[[10,[114,115]]]],[[[12,[39]]],[[10,[674,115]]]],[673,[[10,[114,115]]]],[38,[[10,[114,115]]]],[[38,39],[[10,[675,115]]]],[[38,153,38,39],[[10,[676,115]]]],[39,[[10,[677,115]]]],[[38,39],[[10,[678,115]]]],[[38,153,38,39],[[10,[679,115]]]],[247,[[10,[114,115]]]],[144,[[10,[114,115]]]],[153,[[10,[114,115]]]],[43,[[10,[114,115]]]],[297,[[10,[114,115]]]],[[],[[10,[114,115]]]],[38,[[10,[114,115]]]],[[38,153,38],[[10,[114,115]]]],[[115,40],[[10,[41]]]],[[115,40],[[10,[41]]]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[664,36],[664,36],[664,36],[664,36],[113,36],[113,36],[113,36],[113,36],[130],[[],10],[673,10],[673,10],[673,10],[673,10],[[113,36],[[10,[114,115]]]],[[113,36],[[10,[114,115]]]],[[113,36],[[10,[114,115]]]],[[113,36],[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[113,669],[[10,[114,115]]]],[[113,669],[[10,[114,115]]]],[[113,669],[[10,[114,115]]]],[[113,669],[[10,[114,115]]]],[[113,35],[[10,[114,115]]]],[[113,35],[[10,[114,115]]]],[[113,35],[[10,[114,115]]]],[[113,35],[[10,[114,115]]]],[[113,239],[[10,[114,115]]]],[[113,239],[[10,[114,115]]]],[[113,239],[[10,[114,115]]]],[[113,239],[[10,[114,115]]]],[[113,670],[[10,[114,115]]]],[[113,670],[[10,[114,115]]]],[[113,670],[[10,[114,115]]]],[[113,670],[[10,[114,115]]]],[[113,163],[[10,[114,115]]]],[[113,163],[[10,[114,115]]]],[[113,163],[[10,[114,115]]]],[[113,163],[[10,[114,115]]]],[[113,490],[[10,[114,115]]]],[[113,490],[[10,[114,115]]]],[[113,490],[[10,[114,115]]]],[[113,490],[[10,[114,115]]]],[[113,671],[[10,[114,115]]]],[[113,671],[[10,[114,115]]]],[[113,671],[[10,[114,115]]]],[[113,671],[[10,[114,115]]]],[[113,494],[[10,[114,115]]]],[[113,494],[[10,[114,115]]]],[[113,494],[[10,[114,115]]]],[[113,494],[[10,[114,115]]]],[[113,[12,[39]]],[[10,[672,115]]]],[[113,[12,[39]]],[[10,[672,115]]]],[[113,[12,[39]]],[[10,[672,115]]]],[[113,[12,[39]]],[[10,[672,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[113,[12,[39]]],[[10,[674,115]]]],[[113,[12,[39]]],[[10,[674,115]]]],[[113,[12,[39]]],[[10,[674,115]]]],[[113,[12,[39]]],[[10,[674,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38,39],[[10,[675,115]]]],[[113,38,39],[[10,[675,115]]]],[[113,38,39],[[10,[675,115]]]],[[113,38,39],[[10,[675,115]]]],[[113,38,153,38,39],[[10,[676,115]]]],[[113,38,153,38,39],[[10,[676,115]]]],[[113,38,153,38,39],[[10,[676,115]]]],[[113,38,153,38,39],[[10,[676,115]]]],0,[[113,39],[[10,[677,115]]]],[[113,39],[[10,[677,115]]]],[[113,39],[[10,[677,115]]]],[[113,39],[[10,[677,115]]]],[[113,38,39],[[10,[678,115]]]],[[113,38,39],[[10,[678,115]]]],[[113,38,39],[[10,[678,115]]]],[[113,38,39],[[10,[678,115]]]],[[113,38,153,38,39],[[10,[679,115]]]],[[113,38,153,38,39],[[10,[679,115]]]],[[113,38,153,38,39],[[10,[679,115]]]],[[113,38,153,38,39],[[10,[679,115]]]],[[113,247],[[10,[114,115]]]],[[113,247],[[10,[114,115]]]],[[113,247],[[10,[114,115]]]],[[113,247],[[10,[114,115]]]],[[113,144],[[10,[114,115]]]],[[113,144],[[10,[114,115]]]],[[113,144],[[10,[114,115]]]],[[113,144],[[10,[114,115]]]],[[113,153],[[10,[114,115]]]],[[113,153],[[10,[114,115]]]],[[113,153],[[10,[114,115]]]],[[113,153],[[10,[114,115]]]],[[113,43],[[10,[114,115]]]],[[113,43],[[10,[114,115]]]],[[113,43],[[10,[114,115]]]],[[113,43],[[10,[114,115]]]],[[113,297],[[10,[114,115]]]],[[113,297],[[10,[114,115]]]],[[113,297],[[10,[114,115]]]],[[113,297],[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[113,38,153,38],[[10,[114,115]]]],[[],78],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,[24],[[],1],[[],1],[[],24],[[],24],[[],30],[[],190],[[],[[7,[24,6]]]],[40,[[10,[41]]]],[38,[[12,[24]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[39,[[12,[24]]]],[[],39],[[],39],[38,[[12,[24]]]],[39,[[12,[24]]]],[24,12],0,[38,12],[39,12],[38,12],[39,12],[[],44],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[24,6]]]],[[],47],[[],191],[39,[[12,[38]]]],[[],[[12,[43]]]],[[],50],[[[7,[6]]],51],[24,[[12,[36]]]],[[],53],0,[[],[[12,[605]]]],[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[],38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[605,673],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[680,680],[[]],[[],[[7,[31,6]]]],[[664,621],[[10,[[7,[24,6]],115]]]],[681,10],[682,10],[683,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[680,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[680,36],[[680,39],36],[680,39],0,0,[621,681],[621,682],[[45,621],683],[[24,621],684],[[24,621],685],[[],680],0,0,0,0,0,0,0,0,0,0,[684,10],[685,10],[686,10],[687,10],[688,10],[689,10],[690,10],[691,10],[692,10],[693,10],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[694,694],[[]],[[],[[7,[31,6]]]],[694,[[7,[24,6]]]],[[]],[[]],[[],694],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[],10],[[],10],[[],11],[[],12],0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[695,44],[696,44],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[],696],[[],695],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[697,38],[[],57],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[698,28]],0,[699,699],[700,700],[697,697],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],0,[[],698],[[],701],0,[200],[701],[200],[701],[[]],[[]],[[]],[[]],[[]],[[]],[699,[[7,[74,6]]]],[26,36],[26,36],[26,36],[37],[37],[37],[[699,699],36],[[700,700],36],[[697,697],36],[[],36],[[],36],[[],36],0,0,[[699,40],[[10,[41]]]],[[700,40],[[10,[41]]]],[[697,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[[],43],[[],43],[[],43],[[258,42,153]],0,[699],[700],[697],[74,61],[[],61],[74,61],[[42,258]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[200],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[699,36],[699,36],0,0,0,0,0,0,0,0,0,0,0,[82,61],0,0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[702,24]],[[569,24]],[[703,24]],[[704,24]],[[705,24]],[[706,24]],[[707,24]],[[708,24]],[[709,24]],0,[[],1],[[],1],[702,1],[[],1],[[],1],[[],1],[[],1],[569,1],[703,1],[[],1],[[],1],[704,1],[705,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[706,1],[707,1],[[],1],[[],1],[708,1],[[],1],[709,1],[[],1],[[],1],[[],1],[702,1],[[],1],[[],1],[[],1],[569,1],[[],1],[[],1],[703,1],[704,1],[[],1],[705,1],[[],1],[[],1],[[],1],[[],1],[706,1],[707,1],[[],1],[708,1],[[],1],[709,1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[702,24],[569,24],[703,24],[704,24],[705,24],[706,24],[707,24],[708,24],[709,24],[702,24],[569,24],[703,24],[704,24],[705,24],[706,24],[707,24],[708,24],[709,24],0,[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[710,28]],[[711,28]],[[[284,[712]],[284,[713]],[284,[[94,[574]]]],[20,[170,[199,[714]]]],20,[17,[[18,[574]]]],20]],[702,702],[715,715],[716,716],[569,569],[704,704],[705,705],[717,717],[706,706],[707,707],[708,708],[709,709],[702,30],[569,30],[703,190],[704,29],[705,29],[706,29],[707,30],[708,29],[709,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[702,[[7,[24,6]]]],[569,[[7,[24,6]]]],[703,[[7,[24,6]]]],[704,[[7,[24,6]]]],[705,[[7,[24,6]]]],[706,[[7,[24,6]]]],[707,[[7,[24,6]]]],[708,[[7,[24,6]]]],[709,[[7,[24,6]]]],[[705,705],109],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],0,[[],710],[[],702],[[],715],[[],716],[[],569],[[],703],[[],704],[[],706],[[],707],[[],709],[[],711],0,[703],[703],[[],[[10,[708]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[717,[[7,[74,6]]]],[26,36],[26,36],[37],[37],[[705,705],36],[[717,717],36],[[],36],[[],36],[113,[[10,[114,115]]]],[[198,[200,[20]],[200,[[20,[170,[199,[714]]]]]]]],[[],35],[706,35],[707,35],[709,35],0,0,[[702,38],[[12,[24]]]],[[569,38],[[12,[24]]]],[[703,39],[[12,[24]]]],[[704,38],[[12,[24]]]],[[705,38],[[12,[24]]]],[[706,38],[[12,[24]]]],[[707,38],[[12,[24]]]],[[708,38],[[12,[24]]]],[[709,38],[[12,[24]]]],[[702,39],[[12,[24]]]],[[569,39],[[12,[24]]]],[[704,39],[[12,[24]]]],[[705,39],[[12,[24]]]],[[706,39],[[12,[24]]]],[[707,39],[[12,[24]]]],[[708,39],[[12,[24]]]],[[709,39],[[12,[24]]]],[[702,39],[[12,[24]]]],[[569,39],[[12,[24]]]],[[704,39],[[12,[24]]]],[[705,39],[[12,[24]]]],[[706,39],[[12,[24]]]],[[707,39],[[12,[24]]]],[[708,39],[[12,[24]]]],[[709,39],[[12,[24]]]],[702,39],[569,39],[703,39],[704,39],[705,39],[706,39],[707,39],[708,39],[709,39],[[702,38],[[12,[24]]]],[[569,38],[[12,[24]]]],[[703,39],[[12,[24]]]],[[704,38],[[12,[24]]]],[[705,38],[[12,[24]]]],[[706,38],[[12,[24]]]],[[707,38],[[12,[24]]]],[[708,38],[[12,[24]]]],[[709,38],[[12,[24]]]],[[702,40],[[10,[41]]]],[[715,40],[[10,[41]]]],[[716,40],[[10,[41]]]],[[569,40],[[10,[41]]]],[[704,40],[[10,[41]]]],[[705,40],[[10,[41]]]],[[718,40],[[10,[41]]]],[[717,40],[[10,[41]]]],[[706,40],[[10,[41]]]],[[707,40],[[10,[41]]]],[[708,40],[[10,[41]]]],[[709,40],[[10,[41]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[707,706],[[]],[709,706],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[702]]]],[24,[[12,[569]]]],[24,[[12,[707]]]],[24,[[12,[708]]]],[24,[[12,[709]]]],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[]],[[]],[[]],[[]],[[]],[[]],[38,12],[38,12],[39,12],[38,12],[38,12],[38,12],[38,12],[39,12],[38,12],[38,12],[[],43],[[],43],[[],479],[706,479],[707,479],[709,479],[[705,123,18],[[12,[715]]]],[[705,719,2],[[12,[720]]]],[[705,719,2],[[12,[721]]]],[702,44],[569,44],[703,44],[704,44],[705,44],[706,44],[707,44],[708,44],[709,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[705],[717],0,[74,61],[[],61],[74,61],[[704,38],[[12,[39]]]],[[705,38],[[12,[39]]]],[[706,38],[[12,[39]]]],[[708,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[702,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[569,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[703,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[704,6]]],[[7,[1,6]]]],[[[7,[705,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[706,6]]],[[7,[1,6]]]],[[[7,[707,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[708,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[709,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[[7,[702,6]]],[[7,[24,6]]]],[[[7,[569,6]]],[[7,[24,6]]]],[[[7,[703,6]]],[[7,[24,6]]]],[[[7,[704,6]]],[[7,[24,6]]]],[[[7,[705,6]]],[[7,[24,6]]]],[[[7,[706,6]]],[[7,[24,6]]]],[[[7,[707,6]]],[[7,[24,6]]]],[[[7,[708,6]]],[[7,[24,6]]]],[[[7,[709,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[717,36],[717,36],[702,47],[569,47],[703,191],[704,46],[705,46],[706,46],[707,47],[708,46],[709,47],[569,[[12,[454]]]],[569,12],[569,[[12,[454]]]],[[702,39],[[12,[38]]]],[[569,39],[[12,[38]]]],[[704,39],[[12,[38]]]],[[705,39],[[12,[38]]]],[[706,39],[[12,[38]]]],[[707,39],[[12,[38]]]],[[708,39],[[12,[38]]]],[[709,39],[[12,[38]]]],[[569,571,483],[[12,[483]]]],0,0,[42,722],[[],703],[[704,[12,[170]]],[[12,[705]]]],0,0,[[705,705],[[12,[109]]]],0,0,0,[569,[[12,[480]]]],0,[569,12],[569,[[12,[480]]]],0,[569,479],[704,[[12,[43]]]],[705,[[12,[43]]]],[706,[[12,[43]]]],[708,[[12,[43]]]],[702,50],[569,50],[703,50],[704,50],[705,50],[706,50],[707,50],[708,50],[709,50],[[[7,[702,6]]],51],[[[7,[569,6]]],51],[[[7,[703,6]]],51],[[[7,[704,6]]],51],[[[7,[705,6]]],51],[[[7,[706,6]]],51],[[[7,[707,6]]],51],[[[7,[708,6]]],51],[[[7,[709,6]]],51],[[702,24],[[12,[36]]]],[[569,24],[[12,[36]]]],[[703,24],[[12,[36]]]],[[704,24],[[12,[36]]]],[[705,24],[[12,[36]]]],[[706,24],[[12,[36]]]],[[707,24],[[12,[36]]]],[[708,24],[[12,[36]]]],[[709,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[702,53],[569,53],[703,53],[704,53],[705,53],[706,53],[707,53],[708,53],[709,53],0,[[722,185,186,42],[[10,[187]]]],[82,61],0,0,0,[708,10],[[702,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[569,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[703,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[703],[[704,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[705,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[706,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[707,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[708,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[709,[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,0,[[569,480],[[12,[454]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[702,38],[569,38],[703,38],[704,38],[705,38],[706,38],[707,38],[708,38],[709,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[35,35]],[[722,42]],[[706,35,35]],[[707,35,35]],[[709,35,35]],[704,39],[705,39],[706,39],[708,39],[704,38],[705,38],[706,38],[708,38],[704,55],[705,55],[706,55],[708,55],0,0,0,[[569,571,454],[[12,[485]]]],[[569,571,454],[[12,[454]]]],[[569,571,483],[[12,[483]]]],[[569,571,483],[[12,[454]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[492,35],[[492,492]],[[492,484]],[[492,484]],[[492,492]],[[492,24]],[[],1],[[],1],[[],1],[492,1],[[],1],[[],1],[[],1],[[],1],[[],1],[492,1],[[],1],[2],[2],[2],[2],[492,492],[492],[492],[492],[492,153],[492,24],[492,24],[492,492],[492],[492,492],[492,153],[492,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[492,492],[492,29],[[]],[[],[[7,[31,6]]]],[492,[[7,[24,6]]]],[491,492],[[],492],[[],[[10,[492]]]],[[]],[[]],[[]],[[]],[26,36],[[492,492],36],[[723,723],36],[[],36],[113,[[10,[114,115]]]],[[492,38],[[12,[24]]]],[[492,39],[[12,[24]]]],[[492,39],[[12,[24]]]],[492,39],[[492,38],[[12,[24]]]],[[492,40],[[10,[41]]]],[[723,40],[[10,[41]]]],[[723,40],[[10,[41]]]],[[]],[[]],[[],492],[[],492],[484,492],[[]],[[]],[24,[[12,[492]]]],[42],[492,35],[492,44],[[],45],[[],[[10,[492,723]]]],[[35,35,35],492],[[35,35,35]],[[35,35,35,35],492],[[]],[[492,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[492,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[492,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[492,46],[[35,35,35]],[[]],[492],[[492,483]],[[492,35]],[492],[[492,484]],[492],[[492,484]],[492],[[492,483]],[[492,35]],[[492,39],[[12,[38]]]],[[]],[[]],[[]],[130],[492,35],[[492,491]],[492,[[12,[43]]]],[492,50],[[[7,[492,6]]],51],[[492,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[492,53],[[35,35,35],492],[[35,35,35],492],[[297,297,297],492],[[35,35,35,35],492],[[35,35,35,35],492],[[297,297,297,297],492],[492,10],[[492,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[492,35],492],[[492,35],492],[[492,35],492],[[492,35],492],[[]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],44],[492,38],[[],12],[[],12],[[],12],[[],12],[492,39],[492,38],[492,55],[[492,35],492],[[492,35],492],[[492,35],492],[[492,35],492],[[492,493]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[724,28]],[[725,28]],[[32,33]],[[],724],[[],725],[[],588],[588],[[]],[[]],[[]],[[]],[[],12],[[],725],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[[]],[726,153],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[588,727],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[[728,28]],[[],728],[[]],[[198,[200,[17]],[12,[96]],[81,[36]]]],[[]],[[]],[42],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[],10],[[],10],[[],11],[[],12],0,0,0,0,[[729,24]],[[],1],[729,1],[[],1],[[],1],[[],1],[[],1],[729,1],[[],1],[2],[2],[2],[729,24],[729,24],[[]],[[]],[[]],[[]],[[]],[[]],0,[[730,28]],[729,729],[729,30],[[]],[[],[[7,[31,6]]]],[729,[[7,[24,6]]]],[491,729],[[],729],[[],593],[[]],[[]],[[]],[[],729],[[729,38],[[12,[24]]]],[[729,39],[[12,[24]]]],[[729,39],[[12,[24]]]],[729,39],[[729,38],[[12,[24]]]],[[]],[[]],[[]],[42],[42],[38,12],[38,12],[729,44],[[],45],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[729,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[729,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[729,47],[[729,39],[[12,[38]]]],[[729,491]],[729,50],[[[7,[729,6]]],51],[[729,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[729,53],[[729,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[729,536],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],44],[729,38],[[],12],[[],12],[[],12],[[729,493]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[731,12],[[732,153],733],[[587,[175,[734]]],[[12,[731]]]],[735],[[587,[175,[734]]],[[12,[731]]]],[587,127],[587,127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[736,28]],[587,587],[732,732],[734,734],[735,735],[731,731],[737,737],[738,738],[739,739],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[734,734],109],[587,[[12,[740]]]],[587],[[735,[175,[734]]],36],[[587,[175,[734]]],36],[587,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[587],[26,36],[26,36],[37],[37],[731,39],[731,38],[[734,734],36],[[735,735],36],[[],36],[[],36],[587],[[587,40],[[10,[41]]]],[[732,40],[[10,[41]]]],[[734,40],[[10,[41]]]],[[735,40],[[10,[41]]]],[[741,40],[[10,[41]]]],[[741,40],[[10,[41]]]],[[731,40],[[10,[41]]]],[[737,40],[[10,[41]]]],[[738,40],[[10,[41]]]],[[739,40],[[10,[41]]]],[[397,40],[[10,[41]]]],[[397,40],[[10,[41]]]],0,[[]],[[]],[606,587],[613,587],[617,587],[615,587],[616,587],[614,587],[608,587],[610,587],[607,587],[[]],[609,587],[[]],[[]],[732,734],[[]],[[]],[[[34,[475,6]]],731],[[[34,[6]]],731],[[[34,[6]]],731],[[[34,[6]]],731],[[[34,[153,6]]],731],[[[34,[483,6]]],731],[[[34,[476,6]]],731],[[[34,[6]]],731],[[[34,[454,6]]],731],[[[34,[490,6]]],731],[[]],[[[34,[482,6]]],731],[[[34,[6]]],731],[[[34,[484,6]]],731],[[[34,[6]]],731],[[[34,[456,6]]],731],[[[34,[481,6]]],731],[[[34,[6]]],731],[[[34,[474,6]]],731],[[[34,[35,6]]],731],[[[34,[480,6]]],731],[[[34,[6]]],731],[[[34,[6]]],731],[[]],[[]],[[]],[[]],[587,[[10,[397]]]],[731],[[],43],[[],43],[587,12],[735,[[10,[742,741]]]],[587,[[598,[735,743]]]],[[],43],[587,[[34,[297,6]]]],[734],[735],0,0,[[]],[[]],[587,[[12,[737]]]],[587,[[12,[737]]]],[[587,732,[175,[731]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[731,36],[737,36],[737,127],[735,742],0,[731,39],[737,39],0,[[153,734,38],733],[575,587],[[38,39,744],732],[[734,734],[[12,[109]]]],[[],[[10,[745]]]],[587,575],0,[130],[130],[[587,[175,[734]]],[[12,[731]]]],[[587,[12,[737]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],10],[[],10],[[],10],[612,[[10,[587]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],38],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,[[532,24]],[532,1],[[],1],[[],1],[532,1],[[],1],[[],1],[2],[2],[532,24],[532,24],[[]],[[]],[[]],[[]],[532,532],[532,30],[[]],[[],[[7,[31,6]]]],[532,[[7,[24,6]]]],[[32,33]],[[],532],[570],[[]],[[]],[[532,38],[[12,[24]]]],[[532,39],[[12,[24]]]],[[532,39],[[12,[24]]]],[532,39],[[532,38],[[12,[24]]]],[[532,40],[[10,[41]]]],[[570,40],[[10,[41]]]],[[]],[[]],[[[34,[479,6]]],570],[[]],[42],[[]],[38,12],[38,12],[532,44],[[],45],[[]],[[]],[[[7,[532,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[532,6]]],[[7,[24,6]]]],[[]],[[]],0,[532,47],0,[[532,276],[[10,[280]]]],[[532,39],[[12,[38]]]],[532,50],[[[7,[532,6]]],51],[[532,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[532,53],[[532,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],44],[532,38],[[],38],[[],54],[[],12],[[],12],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],746],[[],747],[[],748],[[],749],[[]],[[]],[[]],[[]],[747],[[746,40],[[10,[41]]]],[[747,40],[[10,[41]]]],[[748,40],[[10,[41]]]],[[749,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[746,12],[747,12],[748,[[12,[296]]]],[749,[[12,[36]]]],[746],[747],[748,296],[749,36],[746,10],[747,10],[748,[[10,[296]]]],[749,[[10,[36]]]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[],746],[[],747],[[],748],[[],749],[746,10],[[747,[7,[6]]],[[10,[[7,[6]]]]]],[[748,296],10],[[749,36],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[750,750],[[750,750]],[[]],[[],[[7,[31,6]]]],[[],750],[[],751],[751],[751],[[]],[[]],[26,36],[[750,750],36],[[],36],[[750,40],[[10,[41]]]],[[751,40],[[10,[41]]]],[751],[751],[119],[[],750],[[]],[[]],[42],[42],[750,12],[751,12],[750,12],[751,12],[750],[750,10],[750],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[750,12],[[]],[[]],[751,10],[[],750],[[],751],[750,10],[750,12],[[]],[[],10],[[],10],[750,10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[750],[[],750],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[752,752],[[752,752]],[[]],[[],752],[[],753],[753],[753],[[]],[[]],[26,36],[[752,752],36],[[],36],[[752,40],[[10,[41]]]],[[753,40],[[10,[41]]]],[753],[753],[[],752],[119],[[]],[[]],[42],[42],[752,12],[753,12],[752,12],[753,12],[752],[752,10],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[752,12],[[]],[[]],[753,10],[[],752],[[],753],[752,10],[752,12],[[]],[[],10],[[],10],[752,10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[[],752],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],26],[754,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[755,28]],[754,754],[[]],[[],[[7,[31,6]]]],[[],755],[[]],[[]],[[]],[[]],[26,36],[37],[[754,754],36],[[],36],[[754,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[42],[[],43],[754],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[755,28]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[2],0,[[]],[[]],0,0,0,0,[[],756],0,[[]],0,0,[[756,40],[[10,[41]]]],0,[22,756],[[]],[22,756],[42],0,0,[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[740,24]],[[757,24]],[[758,24]],[[759,24]],[[],1],[740,1],[[],1],[[],1],[[],1],[757,1],[[],1],[758,1],[[],1],[759,1],[[],1],[740,1],[[],1],[[],1],[757,1],[[],1],[[],1],[758,1],[[],1],[759,1],[2],[2],[2],[2],[2],[2],[740,24],[757,24],[758,24],[759,24],[740,24],[757,24],[758,24],[759,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[740,740],[760,760],[761,761],[757,757],[740,30],[757,30],[758,30],[759,30],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[740,[[7,[24,6]]]],[757,[[7,[24,6]]]],[758,[[7,[24,6]]]],[759,[[7,[24,6]]]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[761,35],[[],740],[[],760],[[],761],[[],757],[[],758],[[],759],[[]],[[]],[[]],[[]],[[]],[[]],[[740,38],[[12,[24]]]],[[757,38],[[12,[24]]]],[[758,38],[[12,[24]]]],[[759,38],[[12,[24]]]],[[740,39],[[12,[24]]]],[[757,39],[[12,[24]]]],[[758,39],[[12,[24]]]],[[759,39],[[12,[24]]]],[[740,39],[[12,[24]]]],[[757,39],[[12,[24]]]],[[758,39],[[12,[24]]]],[[759,39],[[12,[24]]]],[740,39],[757,39],[758,39],[759,39],[[740,38],[[12,[24]]]],[[757,38],[[12,[24]]]],[[758,38],[[12,[24]]]],[[759,38],[[12,[24]]]],[[740,40],[[10,[41]]]],[[760,40],[[10,[41]]]],[[761,40],[[10,[41]]]],[[757,40],[[10,[41]]]],[[758,40],[[10,[41]]]],[[759,40],[[10,[41]]]],[760,740],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[483,483],740],[24,[[12,[740]]]],[479,757],[[479,483,483,35],757],[42],[42],[42],[42],[42],[42],0,0,[[]],[[]],[[]],[[]],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[740,44],[757,44],[758,44],[759,44],[[],45],[[],45],[[],45],[[],45],0,[[760,740,479],36],[[757,740,479,36,36],36],[[757,760,36],36],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[740,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[757,6]]],[[7,[1,6]]]],[[[7,[758,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[759,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[740,6]]],[[7,[24,6]]]],[[[7,[757,6]]],[[7,[24,6]]]],[[[7,[758,6]]],[[7,[24,6]]]],[[[7,[759,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[758,580],[740,47],[757,47],[758,47],[759,47],[758,580],[740,456],[740,456],[[740,39],[[12,[38]]]],[[757,39],[[12,[38]]]],[[758,39],[[12,[38]]]],[[759,39],[[12,[38]]]],[484,761],[761,456],[761,484],0,0,[740,50],[757,50],[758,50],[759,50],[[[7,[740,6]]],51],[[[7,[757,6]]],51],[[[7,[758,6]]],51],[[[7,[759,6]]],51],[[740,24],[[12,[36]]]],[[757,24],[[12,[36]]]],[[758,24],[[12,[36]]]],[[759,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[740,53],[757,53],[758,53],[759,53],[[740,456],35],[[740,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[757,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[758,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[759,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[740,38],[757,38],[758,38],[759,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[],26],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[762,28]],[763,763],[[]],[[],[[7,[31,6]]]],[[],762],[[],763],[[],764],[[],2],[[],765],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[763,[[7,[74,6]]]],[26,36],[37],[[763,763],36],[[],36],[[]],[[763,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[42],[[],43],[763],[74,61],[[],61],[74,61],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[763,36],[763,36],[[],[[10,[745]]]],[82,61],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[763,762],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[766,[175,[[174,[38]]]]],767],[[766,[175,[768]],[175,[768]]]],[[766,[175,[768]],[175,[769]],[175,[768]],[175,[769]]]],[[766,[175,[[174,[38]]]],766]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[770,770],[767,767],[768,768],[771,771],[772,772],[769,769],[184,184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],766],[[],773],[[]],[[]],[[]],[[[7,[774,6]]],[[10,[[7,[6]],[7,[774,6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[774,12],[[[9,[774]]],[[10,[9,[9,[774]]]]]],[774,12],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],0,[[775,775],36],[[776,776],36],[[777,777],36],[[770,770],36],[[778,778],36],[[767,767],36],[[187,187],36],[[768,768],36],[[772,772],36],[[769,769],36],[[779,779],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[185,[[34,[780,6]]]],[[781,40],[[10,[41]]]],[[775,40],[[10,[41]]]],[[775,40],[[10,[41]]]],[[776,40],[[10,[41]]]],[[776,40],[[10,[41]]]],[[777,40],[[10,[41]]]],[[777,40],[[10,[41]]]],[[770,40],[[10,[41]]]],[[766,40],[[10,[41]]]],[[767,40],[[10,[41]]]],[[187,40],[[10,[41]]]],[[187,40],[[10,[41]]]],[[782,40],[[10,[41]]]],[[768,40],[[10,[41]]]],[[771,40],[[10,[41]]]],[[772,40],[[10,[41]]]],[[772,40],[[10,[41]]]],[[769,40],[[10,[41]]]],[[184,40],[[10,[41]]]],[[773,40],[[10,[41]]]],[[779,40],[[10,[41]]]],[[779,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[777,187],[775,187],[776,187],[[]],[[]],[767,768],[78,768],[[]],[768,768],[38,768],[[]],[783,771],[170,771],[784,771],[721,771],[[]],[[]],[38,769],[39,769],[78,769],[[[174,[38]]],769],[769,769],[[]],[[],773],[[]],[[]],[42],[42],[[],43],[[185,[175,[769]]],[[10,[771,777]]]],[[185,[175,[769]]],[[10,[784,777]]]],[[185,[175,[769]]],[[10,[170,777]]]],[770,767],[766,[[12,[781]]]],[[185,[175,[769]]],[[10,[783,777]]]],[[782,39],[[10,[770,779]]]],[[185,[175,[769]]],[[10,[721,777]]]],[[766,[175,[768]]],[[10,[779]]]],[[766,[175,[768]]],[[10,[767,779]]]],[[766,[175,[768]]],[[10,[779]]]],[[766,[175,[768]]],[[10,[781,779]]]],[[766,[175,[768]]],[[10,[781,779]]]],[770,767],[[782,39],[[10,[770,779]]]],[[773,[175,[769]]],[[12,[184]]]],[[773,[175,[769]]],[[12,[39]]]],[[773,[175,[769]]],[[12,[184]]]],[[766,[785,[38]]],[[12,[766]]]],[[766,[785,[38]]],[[12,[766]]]],[[766,770],36],[[782,770],36],[[782,770],36],[767],[782,767],0,[[]],[[]],[[]],[[]],[[]],[786,[[34,[184,6]]]],[[],[[34,[184,6]]]],[787,[[34,[184,6]]]],[782],[185,773],[766,781],0,[185],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[774,36],[773,36],[773,127],[[766,[175,[768]]],[[10,[127,779]]]],[[766,[175,[768]]],[[10,[127,779]]]],[766,127],[766,127],[766,127],[766,127],[773,39],0,0,0,[[766,781],185],[767,781],[[],787],[[],767],[[[175,[[174,[38]]]],772],184],[781,[[10,[779]]]],0,[781,[[10,[779]]]],[786,[[34,[184,6]]]],[[],[[34,[184,6]]]],[782],[185,773],0,[130],[130],[130],[130],[130],[[766,[175,[[174,[38]]]]],[[10,[779]]]],[[766,[175,[768]],[175,[768]]],[[10,[779]]]],[[766,[175,[768]],[175,[769]],[175,[768]],[175,[769]]],[[10,[779]]]],[[766,[175,[[174,[38]]]]]],[[185,186,42],[[10,[187]]]],[[786,185,186,42],[[10,[187]]]],[[788,185,186,42],[[10,[187]]]],[[787,185,186,42],[[10,[187]]]],[[185,[175,[[174,[38]]]],[34,[771,6]]],[[10,[775]]]],[[766,[34,[184,6]]],767],[[185,[175,[769]],[175,[771]]],[[10,[776]]]],[771,772],0,[187,[[12,[93]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[766,[175,[768]],[175,[768]]],[[10,[779]]]],[[766,[175,[768]],[175,[769]],[175,[768]],[175,[769]]],[[10,[779]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[42],[[766,42]],[[766,770,778],[[10,[779]]]],[781,[[10,[779]]]],[781,[[10,[779]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[789,197],[583],[[]],[[],790],[789,197],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[583],[[[20,[583]]]],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],195],[197,197],[[]],[[],[[7,[31,6]]]],[[32,33]],[[],585],[[],583],[[791,479],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,595,170]],[[792,42,595,170]],[[595,[793,[153]],[793,[153]]]],[[],197],0,[[595,[793,[153]],490,[793,[153]]]],[[595,784,43]],[[595,784,43]],[26,36],[37],[[],170],[[197,197],36],[[],36],[[197,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[479,791],[42],[42],[[]],[[],43],[789,[[12,[197]]]],[[789,197],[[12,[794]]]],[197],[789,197],0,[[595,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[595,784,43,153]],[[595,784,43,784,43,153]],[[595,784,43,153]],[[595,784,43,784,43,153]],[42,792],[[212,795],595],[595],[42],[[789,42]],[[792,42]],[[595,38]],[585,[[662,[661,789]]]],[595,596],[595,596],[[583,595,42,170]],[[595,39,796]],[[595,492]],[[595,702]],[[595,797,43,798]],[[595,799,153]],[[595,800]],[[595,153,153,153,153]],[[595,153]],[[595,39,797]],[[595,35,35,35,35,35,35]],[[]],[583],[[]],[[[20,[583]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[585,[[663,[661,789]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[720,720],[[801,802]],[[803,802]],[[804,802]],[[727,802]],0,0,0,[[],799],[[],805],[[],802],[[],806],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[519,212,2,520],[[10,[521,522]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,[[]],0,0,0,0,0,0,0,0,[[807,808],809],[[809,810,153]],[[807,811],795],[[],720],0,0,[212,519],0,[801,[[12,[525]]]],[803,[[12,[525]]]],[804,[[12,[525]]]],[727,[[12,[525]]]],0,0,0,[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[[799,799]],[[805,805]],[[802,802]],[[806,806]],[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[[799,799]],[[805,805]],[[802,802]],[[806,806]],[799,153],[805,153],[802,153],[806,153],[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[[799,799]],[[805,805]],[[802,802]],[[806,806]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[533,[[12,[784]]]],[801,[[12,[784]]]],[803,[[12,[784]]]],[804,[[12,[784]]]],[727,[[12,[784]]]],0,0,0,0,0,[533,39],0,[533],[803],[727],[[807,812,43,[12,[536]]]],[[807,813,814]],[815,815],[799,799],[816,816],[817,817],[818,818],[819,819],[820,820],[821,821],[575,575],[822,822],[823,823],[824,824],[825,825],[826,826],[827,827],[828,828],[829,829],[720,720],[525,525],[830,830],[831,831],[832,832],[805,805],[833,833],[834,834],[835,835],[836,836],[837,837],[838,838],[839,839],[840,840],[841,841],[811,811],[842,842],[843,843],[844,844],[845,845],[798,798],[846,846],[808,808],[847,847],[848,848],[849,849],[850,850],[851,851],[852,852],[853,853],[744,744],[854,854],[802,802],[806,806],[855,855],[856,856],[857,857],[858,858],[859,859],[860,860],[861,861],[581,581],[862,862],[863,863],[864,864],[865,865],[866,866],[867,867],[868,868],[814,814],[869,869],[870,870],[796,796],[871,871],[872,872],[519,519],[873,873],[874,874],[784,784],[797,797],[875,875],[876,876],[800,800],[877,877],[878,878],[879,879],[222,222],[213,213],[742,742],[880,880],[881,881],[882,882],[883,883],[195,195],[884,884],[885,885],[886,886],[887,887],[888,888],[889,889],[890,890],[891,891],[892,892],[893,893],[894,894],[895,895],[896,896],[721,721],[897,897],[898,898],[783,783],[899,899],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[799,799],109],[[805,805],109],[[802,802],109],[[806,806],109],[[899,899],109],0,0,0,0,[816,855],[799,799],[805,805],[802,802],[806,806],0,0,[[799,799],36],[[805,805],36],[[802,802],36],[[806,806],36],[799,36],[805,36],[802,36],[806,36],0,[[807,812,43,812,43,43]],[[807,[867,[812]],[868,[813]],857]],[[807,[868,[813]],[867,[812]],857]],[[807,[868,[813]],[868,[813]],857]],0,0,[[892,835],721],0,0,[[],816],[[],818],[[],819],[[],575],[[],822],[[],824],[[],825],[[],826],[[],900],[[],901],[[],801],[[],831],[[],803],[[],832],[[],805],[[],804],[[],835],[[],727],[[],836],[[],837],[[],838],[[],840],[[],811],[[],798],[[],808],[[],847],[[],850],[[],852],[[],856],[[],857],[[],858],[[],859],[[],860],[[],861],[[],581],[[],862],[[],814],[[],742],[[],221],[[],902],[[],586],[[],903],[[],904],0,0,0,0,0,0,0,0,[870],[796],[872],[519],[874],[784],[797],[876],[800],[878],[879],[882],[883],[891],[892],[894],[895],[721],[898],[783],[720,905],0,[[],[[10,[720]]]],[[],[[10,[798]]]],0,0,[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],0,[[809,153,153,153]],[[809,812,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[906],[907],[807],[809],[870],[872],[874],[876],[878],[882],[883],[891],[894],[895],[898],0,[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[37],[[],799],[[],805],[[],802],[[],806],0,[809],0,0,0,0,0,0,0,0,[[815,815],36],[[799,799],36],[[816,816],36],[[817,817],36],[[818,818],36],[[819,819],36],[[820,820],36],[[821,821],36],[[575,575],36],[[822,822],36],[[823,823],36],[[824,824],36],[[825,825],36],[[826,826],36],[[827,827],36],[[720,720],36],[[831,831],36],[[832,832],36],[[805,805],36],[[835,835],36],[[837,837],36],[[838,838],36],[[840,840],36],[[842,842],36],[[843,843],36],[[798,798],36],[[847,847],36],[[850,850],36],[[851,851],36],[[852,852],36],[[853,853],36],[[744,744],36],[[854,854],36],[[802,802],36],[[806,806],36],[[855,855],36],[[856,856],36],[[857,857],36],[[858,858],36],[[859,859],36],[[860,860],36],[[581,581],36],[[862,862],36],[[863,863],36],[[864,864],36],[[865,865],36],[[866,866],36],[[814,814],36],[[869,869],36],[[871,871],36],[[519,519],36],[[873,873],36],[[875,875],36],[[877,877],36],[[222,222],36],[[213,213],36],[[742,742],36],[[880,880],36],[[195,195],36],[[884,884],36],[[885,885],36],[[886,886],36],[[908,908],36],[[909,909],36],[[889,889],36],[[890,890],36],[[893,893],36],[[897,897],36],[[899,899],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[799],[533],[805],[802],[806],[903],0,[807,910],[[815,40],[[10,[41]]]],[[799,40],[[10,[41]]]],[[799,40],[[10,[41]]]],[[799,40],[[10,[41]]]],[[799,40],[[10,[41]]]],[[799,40],[[10,[41]]]],[[816,40],[[10,[41]]]],[[817,40],[[10,[41]]]],[[818,40],[[10,[41]]]],[[819,40],[[10,[41]]]],[[820,40],[[10,[41]]]],[[821,40],[[10,[41]]]],[[575,40],[[10,[41]]]],[[822,40],[[10,[41]]]],[[823,40],[[10,[41]]]],[[824,40],[[10,[41]]]],[[825,40],[[10,[41]]]],[[826,40],[[10,[41]]]],[[827,40],[[10,[41]]]],[[906,40],[[10,[41]]]],[[907,40],[[10,[41]]]],[[807,40],[[10,[41]]]],[[720,40],[[10,[41]]]],[[809,40],[[10,[41]]]],[[525,40],[[10,[41]]]],[[830,40],[[10,[41]]]],[[831,40],[[10,[41]]]],[[832,40],[[10,[41]]]],[[805,40],[[10,[41]]]],[[805,40],[[10,[41]]]],[[805,40],[[10,[41]]]],[[805,40],[[10,[41]]]],[[805,40],[[10,[41]]]],[[833,40],[[10,[41]]]],[[834,40],[[10,[41]]]],[[835,40],[[10,[41]]]],[[836,40],[[10,[41]]]],[[837,40],[[10,[41]]]],[[838,40],[[10,[41]]]],[[839,40],[[10,[41]]]],[[840,40],[[10,[41]]]],[[841,40],[[10,[41]]]],[[811,40],[[10,[41]]]],[[842,40],[[10,[41]]]],[[843,40],[[10,[41]]]],[[844,40],[[10,[41]]]],[[845,40],[[10,[41]]]],[[798,40],[[10,[41]]]],[[846,40],[[10,[41]]]],[[808,40],[[10,[41]]]],[[847,40],[[10,[41]]]],[[848,40],[[10,[41]]]],[[849,40],[[10,[41]]]],[[850,40],[[10,[41]]]],[[851,40],[[10,[41]]]],[[852,40],[[10,[41]]]],[[853,40],[[10,[41]]]],[[744,40],[[10,[41]]]],[[854,40],[[10,[41]]]],[[802,40],[[10,[41]]]],[[802,40],[[10,[41]]]],[[802,40],[[10,[41]]]],[[802,40],[[10,[41]]]],[[802,40],[[10,[41]]]],[[806,40],[[10,[41]]]],[[806,40],[[10,[41]]]],[[806,40],[[10,[41]]]],[[806,40],[[10,[41]]]],[[806,40],[[10,[41]]]],[[855,40],[[10,[41]]]],[[856,40],[[10,[41]]]],[[857,40],[[10,[41]]]],[[858,40],[[10,[41]]]],[[859,40],[[10,[41]]]],[[860,40],[[10,[41]]]],[[861,40],[[10,[41]]]],[[581,40],[[10,[41]]]],[[862,40],[[10,[41]]]],[[863,40],[[10,[41]]]],[[864,40],[[10,[41]]]],[[865,40],[[10,[41]]]],[[866,40],[[10,[41]]]],[[867,40],[[10,[41]]]],[[868,40],[[10,[41]]]],[[814,40],[[10,[41]]]],[[869,40],[[10,[41]]]],[[870,40],[[10,[41]]]],[[796,40],[[10,[41]]]],[[871,40],[[10,[41]]]],[[872,40],[[10,[41]]]],[[519,40],[[10,[41]]]],[[873,40],[[10,[41]]]],[[874,40],[[10,[41]]]],[[784,40],[[10,[41]]]],[[797,40],[[10,[41]]]],[[875,40],[[10,[41]]]],[[876,40],[[10,[41]]]],[[800,40],[[10,[41]]]],[[877,40],[[10,[41]]]],[[878,40],[[10,[41]]]],[[879,40],[[10,[41]]]],[[222,40],[[10,[41]]]],[[213,40],[[10,[41]]]],[[742,40],[[10,[41]]]],[[880,40],[[10,[41]]]],[[881,40],[[10,[41]]]],[[882,40],[[10,[41]]]],[[883,40],[[10,[41]]]],[[911,40],[[10,[41]]]],[[912,40],[[10,[41]]]],[[195,40],[[10,[41]]]],[[884,40],[[10,[41]]]],[[913,40],[[10,[41]]]],[[885,40],[[10,[41]]]],[[914,40],[[10,[41]]]],[[914,40],[[10,[41]]]],[[599,40],[[10,[41]]]],[[599,40],[[10,[41]]]],[[886,40],[[10,[41]]]],[[915,40],[[10,[41]]]],[[915,40],[[10,[41]]]],[[887,40],[[10,[41]]]],[[888,40],[[10,[41]]]],[[908,40],[[10,[41]]]],[[916,40],[[10,[41]]]],[[916,40],[[10,[41]]]],[[909,40],[[10,[41]]]],[[909,40],[[10,[41]]]],[[889,40],[[10,[41]]]],[[890,40],[[10,[41]]]],[[891,40],[[10,[41]]]],[[892,40],[[10,[41]]]],[[893,40],[[10,[41]]]],[[894,40],[[10,[41]]]],[[895,40],[[10,[41]]]],[[896,40],[[10,[41]]]],[[721,40],[[10,[41]]]],[[897,40],[[10,[41]]]],[[898,40],[[10,[41]]]],[[783,40],[[10,[41]]]],[[899,40],[[10,[41]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[720,821],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,573],[[]],[38,573],[[[48,[887]]],573],[[]],[119],[[]],[[],801],[[]],[203,[[831,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[119],[[],804],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[737,798],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[731,744],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[917,796],[[]],[[]],[[]],[918,519],[[]],[[]],[812,784],[[]],[[]],[[]],[[]],[[]],[919,800],[[]],[[]],[[]],[920,879],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,885],[78,885],[[]],[[]],[909,914],[[]],[[]],[[]],[[]],[[]],[741,599],[[]],[[[922,[921]]],915],[923,915],[924,915],[[]],[[]],[[]],[[]],[[]],[925,916],[915,916],[926,916],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[813,892],[[]],[[]],[[]],[[]],[927,721],[928,721],[[]],[[]],[[]],[[]],[929,783],[[]],[153,[[12,[799]]]],[153,[[12,[805]]]],[153,[[12,[802]]]],[153,[[12,[806]]]],[153,799],[153,805],[153,802],[153,806],[153,799],[153,805],[153,802],[153,806],[[[175,[[174,[38]]]],899],887],[[],799],[[],805],[[],802],[[],806],[[[175,[174]]],887],[852,742],[[[175,[[174,[38]]]]],887],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],0,0,[801],[804],[930,525],[[220,884],[[12,[879]]]],[[220,884],881],[[220,884],913],[908,[[12,[38]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[900,887],904],[[900,38],904],[533,[[12,[38]]]],[801,[[12,[38]]]],[803,[[12,[38]]]],[804,[[12,[38]]]],[727,[[12,[38]]]],[[908,931],[[10,[829,916]]]],[801],[804],[[220,195],[[12,[800]]]],[[220,195],222],[[220,195],913],[744,43],[932,[[10,[[34,[153,6]],925]]]],[932,[[10,[78,926]]]],[908,[[12,[38]]]],[865,36],[799],[816],[817],[818],[819],[820],[821],[575],[822],[823],[824],[825],[826],[827],[720],[831],[832],[805],[838],[840],[842],[843],[798],[847],[850],[851],[852],[853],[744],[802],[806],[855],[856],[857],[858],[859],[860],[581],[862],[863],[864],[865],[866],[869],[871],[873],[875],[877],[742],[195],[884],[885],[886],[889],[890],[893],[897],[899],0,[796,869],[519,871],[784,873],[797,873],[800,875],[879,877],[892,890],[721,893],[783,897],[887,[[12,[889]]]],[887,289],[[]],[[]],[[]],[[]],[[]],[[799,799]],[[805,805]],[[802,802]],[[806,806]],[[807,38]],[[809,38]],[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[[799,799],36],[[805,805],36],[[802,802],36],[[806,806],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[799,36],[805,36],[802,36],[806,36],[842,36],[842,36],[799,36],[533,36],[803,36],[805,36],[727,36],[802,36],[806,36],[838,36],[840,36],[[814,153,153],36],[838,36],[842,36],[842,36],[575,36],0,0,0,0,0,0,0,0,0,0,0,0,0,[[814,933],[[793,[153]]]],0,0,0,0,0,0,[533,39],[803,39],[727,39],[[903,97],[[129,[[7,[128,6]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[857,855],153],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],536],0,0,0,0,0,[[857,153,855],857],[[814,933],[[793,[153]]]],0,0,0,0,0,0,0,0,0,0,[838,36],[850,36],[851,36],[802,533],[[],869],[917,870],[[],871],[918,872],[[],873],[812,874],[[],875],[919,876],[[],877],[920,878],[906,882],[907,883],[212,220],[[],886],[[],890],[813,891],[[],893],[928,894],[927,895],[[],897],[929,898],[799,799],[805,805],[802,802],[806,806],[797,43],0,0,0,0,0,0,[[799,799],[[12,[109]]]],[[805,805],[[12,[109]]]],[[802,802],[[12,[109]]]],[[806,806],[[12,[109]]]],[[899,899],[[12,[109]]]],0,[[857,720],857],[220,127],[720,39],0,[807],[809],0,0,[[901,887,934,934],[[10,[908,909]]]],[220],[130],[130],[130],[130],[130],[533,39],[803,153],[727,153],0,[[807,38]],[[809,38]],[[220,881],884],[[220,222],195],0,[[908,931],[[10,[932,915]]]],[[799,799]],[[805,805]],[[802,802]],[[806,806]],[720,720],[[533,39,212]],[[807,810,[793,[153]],812,43]],0,0,0,0,[815,10],[799,10],[816,10],[817,10],[818,10],[819,10],[820,10],[821,10],[575,10],[822,10],[823,10],[824,10],[825,10],[826,10],[720,10],[831,10],[832,10],[805,10],[838,10],[840,10],[842,10],[798,10],[847,10],[850,10],[851,10],[852,10],[853,10],[744,10],[802,10],[806,10],[855,10],[856,10],[857,10],[858,10],[859,10],[860,10],[861,10],[581,10],[862,10],[863,10],[864,10],[865,10],[866,10],[867,10],[868,10],[814,10],[899,10],[[799,799,36]],[801],[[805,805,36]],[804],[[802,802,36]],[[806,806,36]],[[809,153,917]],[887],[[533,[12,[38]]]],[[801,[12,[38]]]],[[803,[12,[38]]]],[[804,[12,[38]]]],[[727,[12,[38]]]],[[809,920]],[[809,153]],0,0,0,0,0,0,0,[[],536],[744,43],0,[[784,[935,[43]]],797],0,[914,[[12,[93]]]],[599,[[12,[93]]]],[915,[[12,[93]]]],[916,[[12,[93]]]],0,[[],222],[[],881],[598,[[10,[222,599]]]],[[221,220],195],[[902,220],884],[[586,220,598],[[10,[195,599]]]],0,0,0,0,0,0,0,0,[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[[799,799]],[[805,805]],[[802,802]],[[806,806]],[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[721,[[12,[927]]]],0,0,0,[856,936],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],78],[[],78],[[868,937,36],938],[[799,799]],[[805,805]],[[802,802]],[[806,806]],0,[[533,39]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[870,[[12,[917]]]],[872,[[12,[918]]]],[874,[[12,[812]]]],[876,[[12,[919]]]],[878,[[12,[920]]]],[882,[[12,[906]]]],[883,[[12,[907]]]],[891,[[12,[813]]]],[894,[[12,[928]]]],[895,[[12,[927]]]],[898,[[12,[929]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],38],[[],54],0,[[799,799],799],[[805,805],805],[[802,802],802],[[806,806],806],[784],[913,912],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[819,36],[519,918],[885,78],0,0,0,0,0,0,[857,39],0,[887,887],[[533,212,582]],[[801,212,582]],[[803,212,582]],[[804,212,582]],[[727,212,582]],0,0,[[807,810,153]],[[809,810,153]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[939],[940],[941],[942],[939],[940],[941],[942],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,536],[943,943],[[]],[[],[[7,[31,6]]]],[[943,943],109],[939,[[10,[944]]]],[940,[[10,[944]]]],[941,[[10,[944]]]],[942,[[10,[944]]]],[491,943],[[],943],[[]],[[]],[[]],[[]],[[]],[26,36],[[943,943],36],[[],36],[[943,40],[[10,[41]]]],[119],[[]],[[],939],[119],[[]],[[],940],[119],[[]],[[],941],[119],[[]],[[],942],[[]],[42],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[939],[940],[941],[942],[[]],[[]],[[]],[[]],[[]],0,[[],536],[[],536],[[],939],[[],940],[[],941],[[],942],[43,941],[43,942],[[943,943],[[12,[109]]]],[939,[[10,[944]]]],[940,[[10,[944]]]],[941,[[10,[944]]]],[942,[[10,[944]]]],[[943,491]],0,[[941,43]],[[942,43]],[[],536],[[],536],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],0,[939,[[10,[944]]]],[940,[[10,[944]]]],[941,[[10,[43,944]]]],[942,[[10,[43,944]]]],[[943,493]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[493,39]],[[491,39]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[945,945],[944,944],[946,946],[947,947],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[491],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[[945,945],36],[[947,947],36],[[],36],[[],36],[[945,40],[[10,[41]]]],[[944,40],[[10,[41]]]],[[944,40],[[10,[41]]]],[[946,40],[[10,[41]]]],[[946,40],[[10,[41]]]],[[947,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[948,946],[[]],[[]],[536,947],[947,945],[945,43],[947,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[945,43],36],[[],39],[[],945],[[947,43],947],[39,[[10,[493,944]]]],[39,[[10,[491,944]]]],[43,945],[43,947],[[945,43],43],[130],[130],[39],[491],[491],[491,39],[[945,43],43],[[945,947],947],0,0,[[]],[[]],[[]],[[]],[[],78],[[],78],[39,[[10,[946]]]],[39,[[10,[946]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[39],[493],[493],0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,0,[[],39],[39],0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[186,910]],[39,39],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[186,811],595],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[949,949],[212,212],[582,582],[950,950],[951,951],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[186,807],[[212,952,953]],[[212,841],796],[[212,849],519],[[212,954],784],[[212,827],784],[[212,955],807],[[212,848],879],[[212,836],907],[[212,956],957],[[212,846],800],[[212,837],783],[[212,829],906],[[212,933],892],[[212,582,933],892],[949],[582],[950],[958],[951],[582],[950],[958],[951],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[949],[212,931],[186,[[34,[910,6]]]],[[959,40],[[10,[41]]]],[[959,40],[[10,[41]]]],[[949,40],[[10,[41]]]],[[950,40],[[10,[41]]]],[[]],[187,959],[[]],[[]],[[]],[960,212],[[]],[[]],[[]],[[]],[[212,153],581],[[]],[[961,962,963],128],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[212,964],[[212,965,854,[0,[125,80]]]],[212,186],[960,949],[[212,[967,[966]]]],[130],[186,212],[42],[959,[[12,[93]]]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[949,[[12,[960]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[212,960],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],968],[[],931],[[],931],[[],931],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],0,[[968,968],968],[[931,931],931],[[968,968]],[[931,931]],[[968,968],968],[[931,931],931],[[968,968]],[[931,931]],[968,153],[931,43],[[968,968],968],[[931,931],931],[[968,968]],[[931,931]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[964,964],36],[[964,964,36,75]],[969,969],[968,968],[931,931],[964,964],[970,970],[971,971],[962,962],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[968,968],109],[[931,931],109],[968,968],[931,931],0,[[968,968],36],[[931,931],36],[968,36],[931,36],[[],969],[[],931],[[],964],[[],970],[[],962],0,[[968,968],968],[[931,931],931],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],964],[[],964],0,[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[[],968],[[],931],[[969,969],36],[[968,968],36],[[931,931],36],[[964,964],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[968],[931],0,[[969,40],[[10,[41]]]],[[968,40],[[10,[41]]]],[[968,40],[[10,[41]]]],[[968,40],[[10,[41]]]],[[968,40],[[10,[41]]]],[[968,40],[[10,[41]]]],[[931,40],[[10,[41]]]],[[931,40],[[10,[41]]]],[[931,40],[[10,[41]]]],[[931,40],[[10,[41]]]],[[931,40],[[10,[41]]]],[[964,40],[[10,[41]]]],[[970,40],[[10,[41]]]],[[]],[972,968],[[]],[[]],[[]],[[]],[[]],[[]],[153,[[12,[968]]]],[43,[[12,[931]]]],[153,968],[43,931],[153,968],[43,931],[[],968],[[],931],[42],[42],[42],[42],[42],[[],43],[[],43],[[],43],[[],43],[969],[968],[931],[964],[[968,968]],[[931,931]],[[968,968],968],[[931,931],931],[[968,968],36],[[931,931],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[968,36],[931,36],[968,36],[931,36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[968,968],[931,931],[[968,968],[[12,[109]]]],[[931,931],[[12,[109]]]],0,0,[[968,968]],[[931,931]],[969,10],[968,10],[931,10],[964,10],[[968,968,36]],[[931,931,36]],[[],[[12,[971]]]],[[968,968],968],[[931,931],931],[[968,968]],[[931,931]],[[968,968],968],[[931,931],931],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[968,968]],[[931,931]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[968,968],968],[[931,931],931],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[964,964],964],[[964,964],964],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],973],[[258,42]],[[258,42]],[[574,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[574,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[574,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[974,[[12,[975]]]],[574,24],[574,24],[574,35],[[]],[[973,973],973],[[973,973]],[[973,973],973],[[973,973]],[973,153],[[973,973],973],[[973,973]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[976,28]],[977,977],[574,574],[978,978],[979,979],[980,980],[981,981],[982,982],[973,973],[983,983],[984,984],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[574,[[7,[24,6]]]],[[973,973],109],[973,973],[[973,973],36],[[574,720],[[12,[574]]]],0,[[973,36],[[10,[574,399]]]],[[985,36],[[10,[720,399]]]],[[],976],[[],986],[[],987],[[],977],[[],574],[[],978],[[],973],[[],210],[[],976],[[],976],0,0,[520],[592],[986],[987],[979],[986],[987],[979],[[973,973],973],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],[[],973],[[973,973],36],[[],36],[973],[977],[983],[574],[[974,40],[[10,[41]]]],[[574,40],[[10,[41]]]],[[978,40],[[10,[41]]]],[[979,40],[[10,[41]]]],[[980,40],[[10,[41]]]],[[981,40],[[10,[41]]]],[[399,40],[[10,[41]]]],[[399,40],[[10,[41]]]],[[982,40],[[10,[41]]]],[[973,40],[[10,[41]]]],[[973,40],[[10,[41]]]],[[973,40],[[10,[41]]]],[[973,40],[[10,[41]]]],[[973,40],[[10,[41]]]],[[988,40],[[10,[41]]]],[[988,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[989,399],[[]],[[]],[[]],[[]],[[]],[[]],[153,[[12,[973]]]],[153,973],[153,973],[[990,973,36],[[10,[574,399]]]],[[991,36],574],[38,[[12,[974]]]],[931,973],[[],973],[38,[[12,[974]]]],[24,[[12,[574]]]],[42],[42,520],[42,592],[42],[42],[42],[42],[42],[42],[42,983],[42],[[210,212,[933,[[12,[38]]]]],984],[[],43],[[258,42,153]],[[258,42,153]],[[973,980,36]],[574,44],[[],45],[973],[[590,153],982],[[591,153],982],[[]],[[]],[[42,258]],[[42,258]],[[973,973]],[[973,973],973],[[973,973],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[574,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[574,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[973,36],[574,36],[973,36],[[973,36],[[10,[574,399]]]],[[992,36],[[10,[720,399]]]],[[993,36],[[10,[720,399]]]],[[994,36],[[10,[720,399]]]],[[],978],[[],837],[[977,97],[[129,[[7,[128,6]]]]]],[[983,97],[[129,[[7,[128,6]]]]]],[[],978],[[],837],[[857,855,[34,[297,6]],720],574],[[176,258]],[[176,258]],[[857,855,720],574],[973,973],[[973,973],[[12,[109]]]],[[],39],[[],[[10,[745]]]],[130],[130],[574,50],[[[7,[574,6]]],51],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[574,53],[[574,857]],[[574,153]],[[973,973]],[[574,857]],0,0,[[574,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[973,973,36]],[574,454],0,[399,[[12,[93]]]],[[973,973],973],[[973,973]],[[973,720],36],[[973,973],973],0,0,0,0,0,0,[990,[[10,[974,399]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[973,973]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[574,[[10,[991,92]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[574,38],[[],38],[[],54],[[973,973],973],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[210],[[[96,[210]]]],[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[60,61],[[],995],0,[60,61],[60,61],[60,61],[[],61],[[],61],[[],61],[[995,24]],[[996,24]],[[997,24]],[[578,24]],[[211,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[995,1],[[],1],[996,1],[[],1],[[],1],[997,1],[[],1],[[],1],[[],1],[[],1],[[],1],[578,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[211,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[995,1],[[],1],[996,1],[997,1],[[],1],[[],1],[[],1],[578,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[211,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[995,24],[996,24],[997,24],[578,24],[211,24],[995,24],[996,24],[997,24],[578,24],[211,24],[60,61],[60,61],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[998,28]],[[999,28]],[[1000,28]],[[198,[17,[[18,[587]]]],20]],[[[81,[[1002,[[1001,[[34,[170,6]]]]]]]],[20,[[199,[569]]]],20,[20,[[538,[740]]]]]],[995,995],[996,996],[997,997],[578,578],[1003,1003],[1004,1004],[211,211],[1005,1005],[1006,1006],[995,190],[996,29],[997,30],[578,30],[211,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[995,[[7,[24,6]]]],[996,[[7,[24,6]]]],[997,[[7,[24,6]]]],[578,[[7,[24,6]]]],[211,[[7,[24,6]]]],[[995,995],109],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],0,[491,1005],[[],995],[[],996],[[],997],[[],1007],[[],578],[[],1008],[[],719],[[],1009],[[],211],[[],589],[719],[719],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1003,[[7,[74,6]]]],[1004,[[7,[74,6]]]],[1006,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],0,0,[[995,995],36],[[996,996],36],[[996,996],36],[[996,996],36],[[997,997],36],[[1003,1003],36],[[1004,1004],36],[[211,211],36],[[1006,1006],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],211],[[995,39],[[12,[24]]]],[[996,38],[[12,[24]]]],[[997,38],[[12,[24]]]],[[578,38],[[12,[24]]]],[[211,38],[[12,[24]]]],[[996,39],[[12,[24]]]],[[997,39],[[12,[24]]]],[[578,39],[[12,[24]]]],[[211,39],[[12,[24]]]],[[996,39],[[12,[24]]]],[[997,39],[[12,[24]]]],[[578,39],[[12,[24]]]],[[211,39],[[12,[24]]]],[995,39],[996,39],[997,39],[578,39],[211,39],[[995,39],[[12,[24]]]],[[996,38],[[12,[24]]]],[[997,38],[[12,[24]]]],[[578,38],[[12,[24]]]],[[211,38],[[12,[24]]]],[[995,40],[[10,[41]]]],[[996,40],[[10,[41]]]],[[997,40],[[10,[41]]]],[[1007,40],[[10,[41]]]],[[578,40],[[10,[41]]]],[[1003,40],[[10,[41]]]],[[1004,40],[[10,[41]]]],[[1006,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],995],[[],995],[24,[[12,[996]]]],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[1010,[832,[1011]]],833],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,12],[38,12],[38,12],[39,12],[38,12],[38,12],[[],43],[[],43],[[],43],[995,44],[996,44],[997,44],[578,44],[211,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[1010,[832,[1011]]],833],0,[1003],[1004],[1006],0,[74,61],[74,61],[74,61],[[],61],[[],61],[[],61],[74,61],[74,61],[74,61],[[996,38],[[12,[39]]]],[[211,38],[[12,[39]]]],[[995,995],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[995,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[996,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[997,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[578,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[211,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[],61],[[],61],[[[7,[995,6]]],[[7,[24,6]]]],[[[7,[996,6]]],[[7,[24,6]]]],[[[7,[997,6]]],[[7,[24,6]]]],[[[7,[578,6]]],[[7,[24,6]]]],[[[7,[211,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1003,36],[1004,36],[1006,36],[578,36],[1010,36],[1003,36],[1004,36],[1006,36],[997,36],[997,36],[997,36],[995,127],[578,580],[995,191],[996,46],[997,47],[578,47],[211,46],[297,995],[578,39],[1010,721],[1010,720],[1010,721],[[996,39],[[12,[38]]]],[[997,39],[[12,[38]]]],[[578,39],[[12,[38]]]],[[211,39],[[12,[38]]]],[[],995],0,[1010,721],[1010,720],[[995,995],[[12,[109]]]],[[211,211],[[12,[109]]]],0,0,[1010,1012],[[[359,[1008]],[96,[719]],[96,[1009]],[17,[212]],[17,[958]],[17,[950]],[96,[211]]]],0,0,0,0,[584,791],[[1005,491]],[996,[[12,[43]]]],[211,[[12,[43]]]],[995,50],[996,50],[997,50],[578,50],[211,50],[[[7,[995,6]]],51],[[[7,[996,6]]],51],[[[7,[997,6]]],51],[[[7,[578,6]]],51],[[[7,[211,6]]],51],[[995,24],[[12,[36]]]],[[996,24],[[12,[36]]]],[[997,24],[[12,[36]]]],[[578,24],[[12,[36]]]],[[211,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[995,53],[996,53],[997,53],[578,53],[211,53],[82,61],[82,61],[82,61],[1010,[[12,[721]]]],[211,153],[[995,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[996,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[997,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[578,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[211,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[997],[1005,536],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[995,38],[996,38],[997,38],[578,38],[211,38],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[20],[996,39],[211,39],[996,38],[211,38],[996,55],[211,55],0,0,0,0,0,0,0,[[995,297],995],[[995,297],995],[[1005,493]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[198,[17,[[18,[587]]]],20]],[[[81,[[1002,[[1001,[[34,[170,6]]]]]]]],[20,[[199,[569]]]],20,[20,[[538,[740]]]]]],0,0,[20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[359,[1008]],[96,[719]],[96,[1009]],[17,[212]],[17,[958]],[17,[950]],[96,[211]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1013,1014],[[1015,28]],[1016,1016],[[]],[[],[[7,[31,6]]]],[[1017,64],[[10,[1017,1018]]]],[[32,33]],0,0,0,[[],1019],[[],1020],[[],1014],[[],1021],[[],1015],[1022],[1022],[[1021,[48,[1014]]]],[[1021,1016]],[[1021,42,1016]],[[1021,42]],[[1021,42],[[10,[1018]]]],[[1021,42,[48,[1014]]],[[10,[1018]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],0,0,0,[[1016,1016],36],[[],36],[1023],[[1013,127],1013],[[1013,170],1013],[[1017,40],[[10,[41]]]],[[1023,40],[[10,[41]]]],[[1024,40],[[10,[41]]]],[[1016,40],[[10,[41]]]],[[1018,40],[[10,[41]]]],[[1018,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1014,64],[[10,[1017,1018]]]],[[1017,64],1014],[42,1013],[42],[42],[42],[[42,64],1014],[42,1023],[42],[42],[[42,64],1013],[[]],[[],43],0,0,[1016],[[]],[[1021,1016],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1021,1016],127],[[1023,97],[[129,[[7,[128,6]]]]]],[42,1017],0,[130],[1013,1013],0,0,[[198,20,20,[96,[1021]]]],[42],0,[[],[[10,[78,1025]]]],[[1014,640],[[10,[78,1025]]]],[[1021,[48,[1017]]],1016],[[1021,[48,[1017]],170],1016],[[1021,[48,[1014]]],1016],[[1021,[48,[1014]],170],1016],[[1021,42,48],[[10,[1018]]]],[[1021,42],[[10,[1018]]]],[[1021,42,[48,[1017]]],[[10,[1016,1018]]]],[[]],[[],78],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],38],[[],38],[[],54],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[1021,42],[[10,[1018]]]],0,0,0,[[1014,42,276],[[10,[1018]]]],[[1014,42,276,64],[[10,[1018]]]],[[1017,42,64],[[10,[1024,1018]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1026,10],[1027,10],[1028,10],[1029,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1014,640],1030],0,0,0,0,0,0,[1030,10],[1031,10],[1032,10],[1033,10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1034,1035,18,574],[[12,[39]]]],[[1035,471],39],[[1036,[48,[574]],574]],[60,61],[[],1037],[[],1038],[[],1039],[60,61],[[],61],0,0,0,[[1040,24]],[[1041,24]],[[1042,24]],[[1043,24]],[[1035,24]],[[1044,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1040,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1041,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1042,1],[1043,1],[[],1],[[],1],[1035,1],[1044,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1040,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1041,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1042,1],[[],1],[1043,1],[[],1],[1035,1],[[],1],[1044,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[1040,519,212,2,520],[[10,[521,522]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[1040,2],1045],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[[],26],[1040,24],[1041,24],[1042,24],[1043,24],[1035,24],[1044,24],[1040,24],[1041,24],[1042,24],[1043,24],[1035,24],[1044,24],[1043,454],0,[[1036,36],1036],[60,61],0,0,[212,519],0,[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[1037,1037]],[[1038,1038]],[[1039,1039]],[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[1037,1037]],[[1038,1038]],[[1039,1039]],[1037,153],[1038,153],[1039,153],[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[1037,1037]],[[1038,1038]],[[1039,1039]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1046,28]],[[1047,28]],[[1048,28]],[[1049,28]],[1050,1050],[1051,1051],[1052,1052],[1040,1040],[1037,1037],[1045,1045],[1053,1053],[1054,1054],[1041,1041],[1055,1055],[1056,1056],[1038,1038],[1039,1039],[1057,1057],[1058,1058],[1042,1042],[1043,1043],[1035,1035],[1044,1044],[1059,1059],[1040,30],[1041,190],[1042,30],[1043,29],[1035,30],[1044,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1040,[[7,[24,6]]]],[1041,[[7,[24,6]]]],[1042,[[7,[24,6]]]],[1043,[[7,[24,6]]]],[1035,[[7,[24,6]]]],[1044,[[7,[24,6]]]],[[1037,1037],109],[[1038,1038],109],[[1039,1039],109],0,0,0,0,0,0,[1037,1037],[1038,1038],[1039,1039],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],0,0,0,[[1037,1037],36],[[1038,1038],36],[[1039,1039],36],[491,1045],[491,1055],0,0,0,[[1040,40],[[10,[41]]]],[[1035,40],[[10,[41]]]],[[],1046],[[],1060],[[],1051],[[],1052],[[],1047],[[],1040],[[],1045],[[],1061],[[],1054],[[],1041],[[],1048],[[],1062],[[],1063],[[],1064],[[],1065],[[],1042],[[],1043],[[],1044],[[],1036],[[],1049],[1061],[1061],[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1059,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[37],[[],1037],[[],1038],[[],1039],0,[[1050,1050],36],[[1037,1037],36],[[1038,1038],36],[[1039,1039],36],[[1058,1058],36],[[1059,1059],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[1037],[1038],[1039],[[198,[81,[39]],[200,[20]]]],[[[96,[1063]],[200,[[284,[[94,[574]]]]]]]],[[[96,[1062]],[200,[[17,[[18,[1035]]]]]],[200,[20]],[200,[20]]]],[[1040,38],[[12,[24]]]],[[1041,39],[[12,[24]]]],[[1042,38],[[12,[24]]]],[[1043,38],[[12,[24]]]],[[1035,38],[[12,[24]]]],[[1044,38],[[12,[24]]]],[[1040,39],[[12,[24]]]],[[1042,39],[[12,[24]]]],[[1043,39],[[12,[24]]]],[[1035,39],[[12,[24]]]],[[1044,39],[[12,[24]]]],[[1040,39],[[12,[24]]]],[[1042,39],[[12,[24]]]],[[1043,39],[[12,[24]]]],[[1035,39],[[12,[24]]]],[[1044,39],[[12,[24]]]],[1040,39],[1041,39],[1042,39],[1043,39],[1035,39],[1044,39],[[1040,38],[[12,[24]]]],[[1041,39],[[12,[24]]]],[[1042,38],[[12,[24]]]],[[1043,38],[[12,[24]]]],[[1035,38],[[12,[24]]]],[[1044,38],[[12,[24]]]],[[1036,18],[[10,[1035,1066]]]],0,0,0,0,0,0,0,0,[[1040,40],[[10,[41]]]],[[1037,40],[[10,[41]]]],[[1037,40],[[10,[41]]]],[[1037,40],[[10,[41]]]],[[1037,40],[[10,[41]]]],[[1037,40],[[10,[41]]]],[[1041,40],[[10,[41]]]],[[1038,40],[[10,[41]]]],[[1038,40],[[10,[41]]]],[[1038,40],[[10,[41]]]],[[1038,40],[[10,[41]]]],[[1038,40],[[10,[41]]]],[[1039,40],[[10,[41]]]],[[1039,40],[[10,[41]]]],[[1039,40],[[10,[41]]]],[[1039,40],[[10,[41]]]],[[1039,40],[[10,[41]]]],[[1042,40],[[10,[41]]]],[[1043,40],[[10,[41]]]],[[1035,40],[[10,[41]]]],[[1044,40],[[10,[41]]]],[[1066,40],[[10,[41]]]],[[1066,40],[[10,[41]]]],[[1036,40],[[10,[41]]]],[[1059,40],[[10,[41]]]],[[1036,720],1036],[[],573],[[],573],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[492,1040],[[[48,[574]]],1040],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[587]]],1041],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,[[12,[1037]]]],[153,[[12,[1038]]]],[153,[[12,[1039]]]],[153,1037],[153,1038],[153,1039],[153,1037],[153,1038],[153,1039],[36,1039],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[574]],454,39,39,[12,[454]],[12,[454]]],1035],[36,1038],[36,1039],[[],1037],[[],1038],[[],1039],[153,1038],[153,1039],[575,1038],[24,[[12,[1040]]]],[24,[[12,[1035]]]],[42],[42],[42],[42],[42],[42],[42],[42,1053],[42],[42],[42],[42],[42,1056],[42,1067],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,12],[39,12],[38,12],[38,12],[38,12],[38,12],[39,12],[38,12],[38,12],[38,12],[[],43],[[],43],[[],43],[[],43],[[],43],[[1056,2,12],12],[[1035,48],[[12,[39]]]],[1040,44],[1041,44],[1042,44],[1043,44],[1035,44],[1044,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,0,0,[1050],[1037],[1038],[1039],[1059],0,0,[74,61],[[]],[[],61],[74,61],0,[[1043,38],[[12,[39]]]],[[1036,454],1036],[[1037,1037]],[[1038,1038]],[[1039,1039]],[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[1037,1037],36],[[1038,1038],36],[[1039,1039],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1040,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1041,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1042,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1043,6]]],[[7,[1,6]]]],[[[7,[1035,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1044,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[[7,[1040,6]]],[[7,[24,6]]]],[[[7,[1041,6]]],[[7,[24,6]]]],[[[7,[1042,6]]],[[7,[24,6]]]],[[[7,[1043,6]]],[[7,[24,6]]]],[[[7,[1035,6]]],[[7,[24,6]]]],[[[7,[1044,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1037,36],[1038,36],[1039,36],[1059,36],[1037,36],[1038,36],[1039,36],[1035,36],[1059,36],[1040,47],[1041,191],[1042,47],[1043,46],[1035,47],[1044,47],0,[1035,39],0,0,[[1036,454],1036],0,0,0,0,[1038,153],[1039,153],[[1040,39],[[12,[38]]]],[[1042,39],[[12,[38]]]],[[1043,39],[[12,[38]]]],[[1035,39],[[12,[38]]]],[[1044,39],[[12,[38]]]],[[454,490],1034],[39,1044],[[[48,[574]],454],1035],[1037,1037],[1038,1038],[1039,1039],0,[[1037,1037],[[12,[109]]]],[[1038,1038],[[12,[109]]]],[[1039,1039],[[12,[109]]]],0,[1038,575],[130],[[[17,[[585,[193]]]],[17,[1053]],[96,[[586,[1053]]]],[17,[220]],[17,[211]],[17,[[2,[587]]]],[17,[1061]],20,20]],[[198,[17,[1056]],[17,[212]],[17,[[588,[1055]]]]]],[[198,[17,[212]],[17,[1056]],[17,[589]],[20,[170,[199,[584]]]],[17,[593]]]],[[198,[81,[1068]],[17,[[585,[193]]]],[17,[212]],[17,[582]],[96,[1064]],[17,[589]],[17,[1067]],[96,[[221,[1067]]]],[17,[220]],[96,[1065]],[17,[[2,[574]]]],[17,[211]],[96,[1062]],20,[17,[1063]]]],[[1045,491]],[[1055,491]],0,0,[1043,[[12,[43]]]],[1040,50],[1041,50],[1042,50],[1043,50],[1035,50],[1044,50],[[[7,[1040,6]]],51],[[[7,[1041,6]]],51],[[[7,[1042,6]]],51],[[[7,[1043,6]]],51],[[[7,[1035,6]]],51],[[[7,[1044,6]]],51],[[1040,24],[[12,[36]]]],[[1041,24],[[12,[36]]]],[[1042,24],[[12,[36]]]],[[1043,24],[[12,[36]]]],[[1035,24],[[12,[36]]]],[[1044,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[1040,53],[1041,53],[1042,53],[1043,53],[1035,53],[1044,53],[[1037,1037]],[[1038,1038]],[[1039,1039]],[595,596],[595,596],[[726,595],596],[595,596],[[597,595],596],[[1058,595],596],[[1058,595],596],[82,61],[[1040,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1037,1037,36]],[[1041,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1038,1038,36]],[[1039,1039,36]],[[1042,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1043,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1035,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1044,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[1045,536],[1055,536],0,[[222,598,1050],[[10,[599]]]],[[1053,598],[[10,[222,599]]]],[[1056,598],[[10,[222,599]]]],[1067,222],0,0,0,[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[1037,1037]],[[1038,1038]],[[1039,1039]],[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[1037,1037]],[[1038,1038]],[[1039,1039]],0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],38],[1040,38],[1041,38],[1042,38],[1043,38],[1035,38],[[],38],[1044,38],[[],54],[[],54],[[1037,1037],1037],[[1038,1038],1038],[[1039,1039],1039],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[1043,39],[1043,38],[1043,55],[[],573],0,0,0,0,0,[[1045,493]],[[1055,493]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[2],[[]],[[]],[[483,454,483,454],[[12,[1069]]]],[[]],[26,36],[[1069,1069],36],[[],36],[[1069,40],[[10,[41]]]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1070,36],[1070,36],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1071,1070],[[]],[1072,128],[[],1073],[[],1074],[1070],[[],1075],[1070,39],[[],1076],[[],1071],[[],1070],[[],1077],[1078],[1079],[1080],[1072],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1070],[1081],[[],1082],[[],1083],[[],1084],[[],1085],[[1072,40],[[10,[41]]]],[[1070,40],[[10,[41]]]],[[1081,40],[[10,[41]]]],[[1078,40],[[10,[41]]]],[[1079,40],[[10,[41]]]],[[1080,40],[[10,[41]]]],[[1077,40],[[10,[41]]]],[[1086,40],[[10,[41]]]],[1070,[[34,[6]]]],[1070],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[[],1087],[[],1078],[[],1079],[[],1080],[125,1078],[125,1079],[125,1080],[[],1088],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1072,36],[1070,12],[[],1089],[1070,12],[1070,12],[1070,12],[1070,12],[1070,12],[1070,12],[1090,1072],[[],1071],[[],1070],[[],1077],[[],12],[[1070,39],12],[[1071,39],1071],[[1071,[0,[79,80,413]]],1071],[[1071,[0,[79,80,413]]],1071],[[1070,39],[[34,[6]]]],[[1070,39],[[34,[6]]]],[[1070,[12,[39]]],[[34,[6]]]],[[1070,[12,[39]]],[[34,[6]]]],[1070],[[[129,[1072]],1091],1092],[1070,[[12,[39]]]],0,[1070],[1070,[[34,[6]]]],[[1070,36,[12,[1077]]],[[34,[6]]]],[[]],[[1070,[0,[128,80]]],1072],[1081],[[1077,[0,[128,80]]],1090],[[1070,128],1072],[1081],[1081],[[1071,39],1071],[1070],[[1071,78],1071],[1070,39],[1086,128],[[]],[1077,[[12,[1086]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[129,1091],1092],[1086,36],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1070],0,0,0,0,0,0,[1070,36],[1070,36],[[]],[[],1073],[[],1074],[1070],[[],1075],[1070,39],[[],1076],[[],1082],[[],1083],[[],1084],[[],1085],[1070,[[34,[6]]]],[1070],[[],1087],[[],1088],[1070,12],[[],1089],[1070,12],[1070,12],[1070,12],[1070,12],[1070,12],[1070,12],[[],12],[[1070,39],12],[[1070,39],[[34,[6]]]],[[1070,39],[[34,[6]]]],[[1070,[12,[39]]],[[34,[6]]]],[[1070,[12,[39]]],[[34,[6]]]],[1070],[1070,[[12,[39]]]],[1070],[[]],[1070],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1093,[48,[1094]],1095],1096],[[1097,18,18,1098,1099,574],36],[[1100,18,18,1101],[[10,[1102,1103]]]],0,0,[[1104,24]],[[1105,24]],[[1106,24]],[[1107,24]],[[1108,24]],[[1109,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1104,1],[[],1],[[],1],[1105,1],[[],1],[[],1],[1106,1],[1107,1],[[],1],[[],1],[1108,1],[[],1],[1109,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1104,1],[[],1],[[],1],[1105,1],[1106,1],[[],1],[[],1],[1107,1],[1108,1],[[],1],[1109,1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[1104,24],[1105,24],[1106,24],[1107,24],[1108,24],[1109,24],[1104,24],[1105,24],[1106,24],[1107,24],[1108,24],[1109,24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1110,28]],0,[1099,1099],[1102,1102],[1111,1111],[1112,1112],[1104,1104],[1105,1105],[1106,1106],[1107,1107],[1108,1108],[1109,1109],[1113,1113],[1104,30],[1105,30],[1106,29],[1107,30],[1108,29],[1109,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1104,[[7,[24,6]]]],[1105,[[7,[24,6]]]],[1106,[[7,[24,6]]]],[1107,[[7,[24,6]]]],[1108,[[7,[24,6]]]],[1109,[[7,[24,6]]]],0,[[32,33]],[[32,33]],[[32,33]],[[1093,454,1106,1108],[[10,[[34,[1114,6]],1103]]]],0,[[],1093],[[],1100],[[],1115],[[],1116],[[],1112],[[],1104],[[],1105],[[],1107],[[],1109],[[],1113],[[],1110],[[],1117],[[],1118],[[],[[10,[1106]]]],[[],[[10,[1108]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],0,[[1103,1103],36],[[1099,1099],36],[[1106,1106],36],[[1108,1108],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[1115],[[[96,[1062]],[200,[[17,[[18,[1035]]]]]],[200,[[20,[1119,[199,[714]]]]]],[200,[20]]]],[[1104,38],[[12,[24]]]],[[1105,38],[[12,[24]]]],[[1106,38],[[12,[24]]]],[[1107,38],[[12,[24]]]],[[1108,38],[[12,[24]]]],[[1109,38],[[12,[24]]]],[[1104,39],[[12,[24]]]],[[1105,39],[[12,[24]]]],[[1106,39],[[12,[24]]]],[[1107,39],[[12,[24]]]],[[1108,39],[[12,[24]]]],[[1109,39],[[12,[24]]]],[[1104,39],[[12,[24]]]],[[1105,39],[[12,[24]]]],[[1106,39],[[12,[24]]]],[[1107,39],[[12,[24]]]],[[1108,39],[[12,[24]]]],[[1109,39],[[12,[24]]]],[1104,39],[1105,39],[1106,39],[1107,39],[1108,39],[1109,39],[[1104,38],[[12,[24]]]],[[1105,38],[[12,[24]]]],[[1106,38],[[12,[24]]]],[[1107,38],[[12,[24]]]],[[1108,38],[[12,[24]]]],[[1109,38],[[12,[24]]]],[[1103,40],[[10,[41]]]],[[1103,40],[[10,[41]]]],[[1094,40],[[10,[41]]]],[[1099,40],[[10,[41]]]],[[1102,40],[[10,[41]]]],[[1111,40],[[10,[41]]]],[[1112,40],[[10,[41]]]],[[1104,40],[[10,[41]]]],[[1105,40],[[10,[41]]]],[[1106,40],[[10,[41]]]],[[1107,40],[[10,[41]]]],[[1108,40],[[10,[41]]]],[[1109,40],[[10,[41]]]],[[1113,40],[[10,[41]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[1120,1099],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[1105]]]],[24,[[12,[1107]]]],[[[175,[78]],1107],1104],[123,1104],[1107,1105],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[]],[[]],[[]],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[1100,35,1098,1120],[[12,[1102]]]],[[1097,1098,1099],[[12,[39]]]],[[],43],[[],43],[[],43],[[1116,48,1094],1096],[1101,574],[1104,44],[1105,44],[1106,44],[1107,44],[1108,44],[1109,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,0,0,0,[[1097,1098,1099],36],[[1100,1098,1120,35],36],[1099],[1106],[1108],[[]],[[1106,38],[[12,[39]]]],[[1108,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1104,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1105,6]]],[[7,[1,6]]]],[[[7,[1106,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1107,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1108,6]]],[[7,[1,6]]]],[[[7,[1109,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[1104,6]]],[[7,[24,6]]]],[[[7,[1105,6]]],[[7,[24,6]]]],[[[7,[1106,6]]],[[7,[24,6]]]],[[[7,[1107,6]]],[[7,[24,6]]]],[[[7,[1108,6]]],[[7,[24,6]]]],[[[7,[1109,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1100,127],[1104,47],[1105,47],[1106,46],[1107,47],[1108,46],[1109,47],0,[[1115,97],[[129,[[7,[128,6]]]]]],0,[[1104,39],[[12,[38]]]],[[1105,39],[[12,[38]]]],[[1106,39],[[12,[38]]]],[[1107,39],[[12,[38]]]],[[1108,39],[[12,[38]]]],[[1109,39],[[12,[38]]]],[[18,18,454],1097],[[[175,[78]],1107],1105],[1100,39],0,0,[[1093,[34,[1114,6]],18,18,18,18,1117,1118,1121],[[10,[[34,[1111,6]],1103]]]],[130],[[1116,18,239,1106,1108,454,18,18,18,1117,1118,1121],[[10,[1112,1103]]]],[1106,[[12,[43]]]],[1108,[[12,[43]]]],[1104,50],[1105,50],[1106,50],[1107,50],[1108,50],[1109,50],[[[7,[1104,6]]],51],[[[7,[1105,6]]],51],[[[7,[1106,6]]],51],[[[7,[1107,6]]],51],[[[7,[1108,6]]],51],[[[7,[1109,6]]],51],[[1104,24],[[12,[36]]]],[[1105,24],[[12,[36]]]],[[1106,24],[[12,[36]]]],[[1107,24],[[12,[36]]]],[[1108,24],[[12,[36]]]],[[1109,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[1104,53],[1105,53],[1106,53],[1107,53],[1108,53],[1109,53],[[35,239],35],0,0,[1106,10],[1108,10],[[1104,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1105,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1106,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1107,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1108,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1109,[7,[24,6]]],[[10,[[7,[24,6]]]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[34,[297,6]]],[[10,[1094,1122]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],38],[[],38],[1104,38],[1105,38],[1106,38],[1107,38],[1108,38],[1109,38],[[],54],[[],54],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[198,[81,[[404,[170,277,278]]]],[96,[[18,[574]]]],[17,[[18,[1094]]]],[17,[1117]],[96,[1118]],[20,[1119,[199,[714]]]],[284,[1123]],[96,[[18,[1035]]]],[96,[[18,[1100]]]],[96,[1116]],20]],0,[1106,39],[1108,39],[1106,38],[1108,38],[1106,55],[1108,55],0,[[1104,1106],1104],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[1124,24]],[[16,24]],[[1125,24]],[[1126,24]],[[],1],[1124,1],[16,1],[[],1],[1125,1],[[],1],[[],1],[[],1],[1126,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1124,1],[16,1],[[],1],[1125,1],[[],1],[1126,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[1124,24],[16,24],[1125,24],[1126,24],[1124,24],[16,24],[1125,24],[1126,24],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1127,28]],[1124,1124],[16,16],[1125,1125],[1126,1126],[1128,1128],[1124,30],[16,30],[1125,30],[1126,29],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1124,[[7,[24,6]]]],[16,[[7,[24,6]]]],[1125,[[7,[24,6]]]],[1126,[[7,[24,6]]]],[[]],[[],1124],[[],16],[[],1125],[[],1126],[[],1127],[[],1129],[16,49],[16,35],[16,239],[[],[[10,[1124]]]],[[],[[10,[1125]]]],[[],[[10,[1126]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1125,49],[1128,[[7,[74,6]]]],[26,36],[26,36],[37],[37],[1124,49],[16,49],[1125,49],[16,35],[16,239],[16,35],[16,239],[1124,35],[1125,35],[1124,239],[16,49],[[1126,1126],36],[[1128,1128],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[1124,38],[[12,[24]]]],[[16,38],[[12,[24]]]],[[1125,38],[[12,[24]]]],[[1126,38],[[12,[24]]]],[[1124,39],[[12,[24]]]],[[16,39],[[12,[24]]]],[[1125,39],[[12,[24]]]],[[1126,39],[[12,[24]]]],[[1124,39],[[12,[24]]]],[[16,39],[[12,[24]]]],[[1125,39],[[12,[24]]]],[[1126,39],[[12,[24]]]],[1124,39],[16,39],[1125,39],[1126,39],[[1124,38],[[12,[24]]]],[[16,38],[[12,[24]]]],[[1125,38],[[12,[24]]]],[[1126,38],[[12,[24]]]],[1125,36],[16,[[12,[1130]]]],0,[[1124,40],[[10,[41]]]],[[16,40],[[10,[41]]]],[[1125,40],[[10,[41]]]],[[1126,40],[[10,[41]]]],[[1128,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[1124]]]],[24,[[12,[16]]]],[24,[[12,[1125]]]],[24,[[12,[1126]]]],[[35,1126],1125],[42],[42],[42],[42],[42],[42],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[[],43],[[],43],[1124,44],[16,44],[1125,44],[1126,44],[[],45],[[],45],[[],45],[[],45],[1126],[1128],[74,61],[[],61],[74,61],[[1126,38],[[12,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[1124,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[16,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1125,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1126,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[[7,[1124,6]]],[[7,[24,6]]]],[[[7,[16,6]]],[[7,[24,6]]]],[[[7,[1125,6]]],[[7,[24,6]]]],[[[7,[1126,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1128,36],[16,36],[1128,36],[1124,47],[16,47],[1125,47],[1126,46],[1125,36],[16,[[12,[1130]]]],[1125,1126],[[1124,39],[[12,[38]]]],[[16,39],[[12,[38]]]],[[1125,39],[[12,[38]]]],[[1126,39],[[12,[38]]]],[[],1124],[1130,16],[[49,1126],1125],[1124],[16],[1125],[1124,36],[1125,36],[1125,35],[1125,35],0,[16,49],[16,35],[16,239],[16,49],[16,35],[16,239],[16,35],[16,239],[16,49],[1126,[[12,[43]]]],[1124,50],[16,50],[1125,50],[1126,50],[[[7,[1124,6]]],51],[[[7,[16,6]]],51],[[[7,[1125,6]]],51],[[[7,[1126,6]]],51],[[1124,24],[[12,[36]]]],[[16,24],[[12,[36]]]],[[1125,24],[[12,[36]]]],[[1126,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[1124,53],[16,53],[1125,53],[1126,53],[16,35],[16,239],[1125,49],[1125,35],[1124],[1125],[82,61],[1124,10],[1125,10],[1126,10],[[1124,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[16,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1125,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1126,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1125,49]],[[1124,49]],[[1125,49]],[[1125,1126]],[[16,35]],[[16,239]],[[16,49]],[16,1130],[[1124,49],1124],[[1125,49],1125],[1125,153],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[1124,38],[16,38],[1125,38],[1126,38],[1124],[16],[1125],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[16],[[16,1130]],[1126,39],[1126,38],[1126,55],[16,49],0,0,0,[1131,49],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[],1131],[[]],[[]],[1131,[[10,[1132]]]],[[1131,40],[[10,[41]]]],[[1132,40],[[10,[41]]]],[[1132,40],[[10,[41]]]],[[]],[[]],[42],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[49,1131],[35,1131],0,[130],[42],[[1131,49]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],[[],61],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[],26],[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[[1133,28]],[1134,1134],[1135,1135],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],0,0,[[],1134],[[],1133],[[]],[[]],[[]],[1135,[[7,[74,6]]]],[26,36],[37],[[1135,1135],36],[[],36],[[1134,40],[[10,[41]]]],[[1135,40],[[10,[41]]]],[[]],[22,1134],[[]],[[]],[22,1134],[42],[42],[[],43],0,[1135],[74,61],[[],61],[74,61],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[]],[[]],[[]],[[]],[1135,36],[1135,36],0,[82,61],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],0,[[]],[170],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[[1136,42]],[[1137,42]],0,0,0,0,[571,461],[[571,24]],[[22,24]],[571,1],[[],1],[[],1],[22,1],[[],1],[571,1],[[],1],[22,1],[2],[2],[571,24],[22,24],[571,24],[22,24],[571,483],[22,483],[[]],[[]],[[]],[[]],[571,571],[22,22],[571,190],[22,30],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[571,[[7,[24,6]]]],[22,[[7,[24,6]]]],[[32,33]],[[32,33]],[22,461],[571,479],[22,479],[571,22],[[],571],[[],22],[[],[[10,[571]]]],[[],[[10,[22]]]],[571,483],[22,483],[[]],[[]],[[571,571],36],[[22,22],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[571,39],[[12,[24]]]],[[22,38],[[12,[24]]]],[[22,39],[[12,[24]]]],[[22,39],[[12,[24]]]],[571,39],[22,39],[[571,39],[[12,[24]]]],[[22,38],[[12,[24]]]],[[571,40],[[10,[41]]]],[[22,40],[[10,[41]]]],[571,483],[22,483],[22,571],[461,571],[479,571],[[]],[571,22],[[]],[[]],[[]],[479,22],[24,[[12,[571]]]],[24,[[12,[22]]]],[473,22],[483,22],[483,22],[42],[42],[[35,35,35],22],[[]],[[]],[39,12],[38,12],[39,12],[38,12],[571,44],[22,44],[[],45],[[],45],[[]],[[]],[[[7,[571,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[22,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[571,6]]],[[7,[24,6]]]],[[[7,[22,6]]],[[7,[24,6]]]],[[]],[[]],[571,191],[22,47],[571,483],[22,483],[22,483],[22,483],[22,483],[[22,483,483]],[[22,483,483]],[[22,483,483],22],[[22,483,483],22],[[571,571]],[[571,22]],[[571,483]],[[22,483]],[[22,22]],[[571,22],571],[[22,22],22],[[22,39],[[12,[38]]]],[[571,456],35],[571,50],[22,50],[[[7,[571,6]]],51],[[[7,[22,6]]],51],[[571,24],[[12,[36]]]],[[22,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[571,53],[22,53],[[571,571],22],[571,483],[22,483],[[22,473]],[[22,483,473]],[[22,483,35]],[[22,473]],[[22,483,35]],[[22,35]],[[22,35]],[[22,35]],[[22,35]],[[22,35]],[[22,35]],0,0,[571,10],[22,10],[[571,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[22,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[]],[[]],[571],[[571,483],483],[[22,483],483],[[22,483,473]],[571,483],0,[571,456],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],44],[[],44],[571,38],[22,38],[571,483],[22,483],[[],12],[[],12],[[22,473],22],[[22,483],22],[[22,483],22],[[[20,[[538,[401]]]],[20,[[199,[401]]]],20]],[20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[60,61],0,0,0,[1138,1139],[1138,1140],[60,61],[60,61],[[],61],[[],61],[[1141,24]],[[1142,24]],[[1143,24]],[[1139,24]],[[1140,24]],[[1144,24]],[[1138,24]],[[1145,24]],[[1146,24]],[[1147,24]],[[1148,24]],[[1149,24]],[[1150,24]],[[1151,24]],[[1152,24]],[[1153,24]],[[1154,24]],[[1155,24]],[[1156,24]],[[1157,24]],[[1158,24]],[[1159,24]],[[1160,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1141,1],[[],1],[[],1],[1142,1],[[],1],[[],1],[[],1],[1143,1],[[],1],[[],1],[[],1],[[],1],[1139,1],[[],1],[1140,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1144,1],[[],1],[[],1],[1138,1],[[],1],[[],1],[[],1],[1145,1],[[],1],[1146,1],[[],1],[1147,1],[[],1],[[],1],[[],1],[1148,1],[[],1],[[],1],[[],1],[1149,1],[[],1],[[],1],[1150,1],[[],1],[[],1],[1151,1],[[],1],[[],1],[1152,1],[1153,1],[[],1],[[],1],[[],1],[[],1],[1154,1],[[],1],[1155,1],[[],1],[1156,1],[[],1],[1157,1],[[],1],[[],1],[1158,1],[[],1],[1159,1],[[],1],[1160,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1141,1],[[],1],[1142,1],[[],1],[1143,1],[[],1],[[],1],[[],1],[[],1],[1139,1],[[],1],[[],1],[1140,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[1144,1],[[],1],[1138,1],[[],1],[1145,1],[[],1],[1146,1],[[],1],[1147,1],[[],1],[[],1],[1148,1],[[],1],[1149,1],[1150,1],[[],1],[1151,1],[[],1],[1152,1],[[],1],[1153,1],[[],1],[[],1],[1154,1],[1155,1],[[],1],[[],1],[1156,1],[[],1],[1157,1],[[],1],[1158,1],[1159,1],[[],1],[[],1],[1160,1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[1141,24],[1142,24],[1143,24],[1139,24],[1140,24],[1144,24],[1138,24],[1145,24],[1146,24],[1147,24],[1148,24],[1149,24],[1150,24],[1151,24],[1152,24],[1153,24],[1154,24],[1155,24],[1156,24],[1157,24],[1158,24],[1159,24],[1160,24],[1141,24],[1142,24],[1143,24],[1139,24],[1140,24],[1144,24],[1138,24],[1145,24],[1146,24],[1147,24],[1148,24],[1149,24],[1150,24],[1151,24],[1152,24],[1153,24],[1154,24],[1155,24],[1156,24],[1157,24],[1158,24],[1159,24],[1160,24],0,0,[60,61],[60,61],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1138,1139],0,[[1161,28]],[28],[1162,195],0,0,0,[1141,1141],[1142,1142],[1143,1143],[1139,1139],[1140,1140],[1163,1163],[1164,1164],[1144,1144],[1138,1138],[1165,1165],[1145,1145],[1146,1146],[1147,1147],[1148,1148],[1149,1149],[1150,1150],[1151,1151],[1152,1152],[1153,1153],[1154,1154],[1155,1155],[1156,1156],[1157,1157],[1158,1158],[1159,1159],[1160,1160],[1166,1166],[1141,29],[1142,30],[1143,29],[1139,30],[1140,30],[1144,30],[1138,29],[1145,30],[1146,29],[1147,29],[1148,29],[1149,29],[1150,29],[1151,29],[1152,29],[1153,29],[1154,29],[1155,29],[1156,30],[1157,190],[1158,30],[1159,30],[1160,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1141,[[7,[24,6]]]],[1142,[[7,[24,6]]]],[1143,[[7,[24,6]]]],[1139,[[7,[24,6]]]],[1140,[[7,[24,6]]]],[1144,[[7,[24,6]]]],[1138,[[7,[24,6]]]],[1145,[[7,[24,6]]]],[1146,[[7,[24,6]]]],[1147,[[7,[24,6]]]],[1148,[[7,[24,6]]]],[1149,[[7,[24,6]]]],[1150,[[7,[24,6]]]],[1151,[[7,[24,6]]]],[1152,[[7,[24,6]]]],[1153,[[7,[24,6]]]],[1154,[[7,[24,6]]]],[1155,[[7,[24,6]]]],[1156,[[7,[24,6]]]],[1157,[[7,[24,6]]]],[1158,[[7,[24,6]]]],[1159,[[7,[24,6]]]],[1160,[[7,[24,6]]]],0,[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[[32,33]],[1167],[[],1167],[[],1141],[[],1142],[[],1143],[[],1139],[[],1140],[[],1168],[[],1169],[[],1170],[[],1171],[[],1144],[[],1138],[[],1145],[[],1146],[[],1147],[[],1148],[[],1149],[[],1150],[[],1151],[[],1152],[[],1153],[[],1154],[[],1155],[[],1156],[[],1157],[[],1158],[[],1159],[[],1160],[[],1161],[[],1172],[1142],[1142],[[],[[10,[1141]]]],[[],[[10,[1142]]]],[[],[[10,[1143]]]],[[],[[10,[1138]]]],[[],[[10,[1146]]]],[[],[[10,[1147]]]],[[],[[10,[1148]]]],[[],[[10,[1149]]]],[[],[[10,[1150]]]],[[],[[10,[1151]]]],[[],[[10,[1152]]]],[[],[[10,[1153]]]],[[],[[10,[1154]]]],[[],[[10,[1155]]]],0,0,[[1140,35]],[[1138,35]],[[1140,35]],[[1138,35]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1162,197],0,0,[1164,[[7,[74,6]]]],[1166,[[7,[74,6]]]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[1162,170],0,[[1141,1141],36],[[1142,1142],36],[[1143,1143],36],[[1139,1139],36],[[1140,1140],36],[[1163,1163],36],[[1164,1164],36],[[1138,1138],36],[[1165,1165],36],[[1145,1145],36],[[1146,1146],36],[[1147,1147],36],[[1148,1148],36],[[1149,1149],36],[[1150,1150],36],[[1151,1151],36],[[1152,1152],36],[[1153,1153],36],[[1154,1154],36],[[1155,1155],36],[[1166,1166],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[[1138,35],[[10,[35,1165]]]],[[198,[200,[[20,[199]]]]]],[[[96,[1168]],[200,[[17,[[18,[1035]]]]]],[200,[[20,[1119,[199,[714]]]]]],[200,[[17,[1171]]]],[200,[20]]]],[[[96,[1168]],[200,[[17,[[18,[574]]]]]],[200,[[17,[1171]]]],[200,[20]]]],[[170,171]],[[170,171]],[[1141,38],[[12,[24]]]],[[1142,38],[[12,[24]]]],[[1143,38],[[12,[24]]]],[[1139,38],[[12,[24]]]],[[1140,38],[[12,[24]]]],[[1144,38],[[12,[24]]]],[[1138,38],[[12,[24]]]],[[1145,38],[[12,[24]]]],[[1146,38],[[12,[24]]]],[[1147,38],[[12,[24]]]],[[1148,38],[[12,[24]]]],[[1149,38],[[12,[24]]]],[[1150,38],[[12,[24]]]],[[1151,38],[[12,[24]]]],[[1152,38],[[12,[24]]]],[[1153,38],[[12,[24]]]],[[1154,38],[[12,[24]]]],[[1155,38],[[12,[24]]]],[[1156,38],[[12,[24]]]],[[1157,39],[[12,[24]]]],[[1158,38],[[12,[24]]]],[[1159,38],[[12,[24]]]],[[1160,38],[[12,[24]]]],[[1141,39],[[12,[24]]]],[[1142,39],[[12,[24]]]],[[1143,39],[[12,[24]]]],[[1139,39],[[12,[24]]]],[[1140,39],[[12,[24]]]],[[1144,39],[[12,[24]]]],[[1138,39],[[12,[24]]]],[[1145,39],[[12,[24]]]],[[1146,39],[[12,[24]]]],[[1147,39],[[12,[24]]]],[[1148,39],[[12,[24]]]],[[1149,39],[[12,[24]]]],[[1150,39],[[12,[24]]]],[[1151,39],[[12,[24]]]],[[1152,39],[[12,[24]]]],[[1153,39],[[12,[24]]]],[[1154,39],[[12,[24]]]],[[1155,39],[[12,[24]]]],[[1156,39],[[12,[24]]]],[[1158,39],[[12,[24]]]],[[1159,39],[[12,[24]]]],[[1160,39],[[12,[24]]]],[[1141,39],[[12,[24]]]],[[1142,39],[[12,[24]]]],[[1143,39],[[12,[24]]]],[[1139,39],[[12,[24]]]],[[1140,39],[[12,[24]]]],[[1144,39],[[12,[24]]]],[[1138,39],[[12,[24]]]],[[1145,39],[[12,[24]]]],[[1146,39],[[12,[24]]]],[[1147,39],[[12,[24]]]],[[1148,39],[[12,[24]]]],[[1149,39],[[12,[24]]]],[[1150,39],[[12,[24]]]],[[1151,39],[[12,[24]]]],[[1152,39],[[12,[24]]]],[[1153,39],[[12,[24]]]],[[1154,39],[[12,[24]]]],[[1155,39],[[12,[24]]]],[[1156,39],[[12,[24]]]],[[1158,39],[[12,[24]]]],[[1159,39],[[12,[24]]]],[[1160,39],[[12,[24]]]],[1141,39],[1142,39],[1143,39],[1139,39],[1140,39],[1144,39],[1138,39],[1145,39],[1146,39],[1147,39],[1148,39],[1149,39],[1150,39],[1151,39],[1152,39],[1153,39],[1154,39],[1155,39],[1156,39],[1157,39],[1158,39],[1159,39],[1160,39],[[1141,38],[[12,[24]]]],[[1142,38],[[12,[24]]]],[[1143,38],[[12,[24]]]],[[1139,38],[[12,[24]]]],[[1140,38],[[12,[24]]]],[[1144,38],[[12,[24]]]],[[1138,38],[[12,[24]]]],[[1145,38],[[12,[24]]]],[[1146,38],[[12,[24]]]],[[1147,38],[[12,[24]]]],[[1148,38],[[12,[24]]]],[[1149,38],[[12,[24]]]],[[1150,38],[[12,[24]]]],[[1151,38],[[12,[24]]]],[[1152,38],[[12,[24]]]],[[1153,38],[[12,[24]]]],[[1154,38],[[12,[24]]]],[[1155,38],[[12,[24]]]],[[1156,38],[[12,[24]]]],[[1157,39],[[12,[24]]]],[[1158,38],[[12,[24]]]],[[1159,38],[[12,[24]]]],[[1160,38],[[12,[24]]]],[[170,171],36],[[170,171],36],0,0,0,[[[20,[[199,[714]]]],20,[17,[1172]],[284,[1123]],[96,[1167]],[20,[170]],20,[20,[[199,[1144]]]],20,20,[320,[19]],20,[320,[1144]]]],0,0,0,0,0,0,[[1167,40],[[10,[41]]]],[[1173,40],[[10,[41]]]],[[1141,40],[[10,[41]]]],[[1142,40],[[10,[41]]]],[[1143,40],[[10,[41]]]],[[1139,40],[[10,[41]]]],[[1140,40],[[10,[41]]]],[[1164,40],[[10,[41]]]],[[1171,40],[[10,[41]]]],[[1144,40],[[10,[41]]]],[[1138,40],[[10,[41]]]],[[1165,40],[[10,[41]]]],[[1165,40],[[10,[41]]]],[[1145,40],[[10,[41]]]],[[1146,40],[[10,[41]]]],[[1147,40],[[10,[41]]]],[[1148,40],[[10,[41]]]],[[1149,40],[[10,[41]]]],[[1150,40],[[10,[41]]]],[[1151,40],[[10,[41]]]],[[1152,40],[[10,[41]]]],[[1153,40],[[10,[41]]]],[[1154,40],[[10,[41]]]],[[1155,40],[[10,[41]]]],[[1156,40],[[10,[41]]]],[[1157,40],[[10,[41]]]],[[1158,40],[[10,[41]]]],[[1159,40],[[10,[41]]]],[[1160,40],[[10,[41]]]],[[1166,40],[[10,[41]]]],[[1172,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1140],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[492,1157],[[[48,[574]]],1158],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[42],[42],[42],[42],[42,1174],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[39,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[39,12],[38,12],[38,12],[[],43],[[],43],[[],43],[[1167,170],[[10,[1175,1173]]]],[1141,44],[1142,44],[1143,44],[1139,44],[1140,44],[1144,44],[1138,44],[1145,44],[1146,44],[1147,44],[1148,44],[1149,44],[1150,44],[1151,44],[1152,44],[1153,44],[1154,44],[1155,44],[1156,44],[1157,44],[1158,44],[1159,44],[1160,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[1163],[1164],[1166],0,[1138,1140],0,[1138,1139],0,0,0,[74,61],[74,61],[[]],[[],61],[[],61],[74,61],[74,61],[[1141,38],[[12,[39]]]],[[1143,38],[[12,[39]]]],[[1138,38],[[12,[39]]]],[[1146,38],[[12,[39]]]],[[1147,38],[[12,[39]]]],[[1148,38],[[12,[39]]]],[[1149,38],[[12,[39]]]],[[1150,38],[[12,[39]]]],[[1151,38],[[12,[39]]]],[[1152,38],[[12,[39]]]],[[1153,38],[[12,[39]]]],[[1154,38],[[12,[39]]]],[[1155,38],[[12,[39]]]],[[1160,38],[[12,[39]]]],[[42,153,153]],[[42,153,153]],[42,1176],[42,1176],[1177,[[34,[184,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1141,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1142,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1143,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1139,6]]],[[7,[1,6]]]],[[[7,[1140,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1144,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1138,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1145,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1146,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1147,6]]],[[7,[1,6]]]],[[[7,[1148,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1149,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1150,6]]],[[7,[1,6]]]],[[[7,[1151,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1152,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1153,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1154,6]]],[[7,[1,6]]]],[[[7,[1155,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1156,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1157,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1158,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1159,6]]],[[7,[1,6]]]],[[[7,[1160,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],61],[[],61],[[[7,[1141,6]]],[[7,[24,6]]]],[[[7,[1142,6]]],[[7,[24,6]]]],[[[7,[1143,6]]],[[7,[24,6]]]],[[[7,[1139,6]]],[[7,[24,6]]]],[[[7,[1140,6]]],[[7,[24,6]]]],[[[7,[1144,6]]],[[7,[24,6]]]],[[[7,[1138,6]]],[[7,[24,6]]]],[[[7,[1145,6]]],[[7,[24,6]]]],[[[7,[1146,6]]],[[7,[24,6]]]],[[[7,[1147,6]]],[[7,[24,6]]]],[[[7,[1148,6]]],[[7,[24,6]]]],[[[7,[1149,6]]],[[7,[24,6]]]],[[[7,[1150,6]]],[[7,[24,6]]]],[[[7,[1151,6]]],[[7,[24,6]]]],[[[7,[1152,6]]],[[7,[24,6]]]],[[[7,[1153,6]]],[[7,[24,6]]]],[[[7,[1154,6]]],[[7,[24,6]]]],[[[7,[1155,6]]],[[7,[24,6]]]],[[[7,[1156,6]]],[[7,[24,6]]]],[[[7,[1157,6]]],[[7,[24,6]]]],[[[7,[1158,6]]],[[7,[24,6]]]],[[[7,[1159,6]]],[[7,[24,6]]]],[[[7,[1160,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1164,36],[1166,36],[1164,36],[1166,36],[1141,46],[1142,47],[1143,46],[1139,47],[1140,47],[1144,47],[1138,46],[1145,47],[1146,46],[1147,46],[1148,46],[1149,46],[1150,46],[1151,46],[1152,46],[1153,46],[1154,46],[1155,46],[1156,47],[1157,191],[1158,47],[1159,47],[1160,46],0,[1138,1139],0,0,[[],36],[[],36],0,0,[1142,36],[[1140,35]],[[1138,35]],[[1140,35]],[[1138,35]],[[1141,39],[[12,[38]]]],[[1142,39],[[12,[38]]]],[[1143,39],[[12,[38]]]],[[1139,39],[[12,[38]]]],[[1140,39],[[12,[38]]]],[[1144,39],[[12,[38]]]],[[1138,39],[[12,[38]]]],[[1145,39],[[12,[38]]]],[[1146,39],[[12,[38]]]],[[1147,39],[[12,[38]]]],[[1148,39],[[12,[38]]]],[[1149,39],[[12,[38]]]],[[1150,39],[[12,[38]]]],[[1151,39],[[12,[38]]]],[[1152,39],[[12,[38]]]],[[1153,39],[[12,[38]]]],[[1154,39],[[12,[38]]]],[[1155,39],[[12,[38]]]],[[1156,39],[[12,[38]]]],[[1158,39],[[12,[38]]]],[[1159,39],[[12,[38]]]],[[1160,39],[[12,[38]]]],[42,1177],[[1138,1138,1138,1138],1139],[[1138,1138],1140],[[[48,[574]]],1158],0,0,0,0,0,0,0,0,[[198,[17,[212]],[17,[582]],[96,[1169]],[96,[1168]]]],0,[130],[[[17,[[585,[1162]]]],[17,[212]],[96,[1169]],[17,[589]],[17,[1174]],[96,[[221,[1174]]]],[17,[220]],[96,[1170]],[17,[[2,[574]]]],20,20,[17,[1063]]]],0,0,[1141,[[12,[43]]]],[1143,[[12,[43]]]],[1138,[[12,[43]]]],[1146,[[12,[43]]]],[1147,[[12,[43]]]],[1148,[[12,[43]]]],[1149,[[12,[43]]]],[1150,[[12,[43]]]],[1151,[[12,[43]]]],[1152,[[12,[43]]]],[1153,[[12,[43]]]],[1154,[[12,[43]]]],[1155,[[12,[43]]]],[1160,[[12,[43]]]],[1141,50],[1142,50],[1143,50],[1139,50],[1140,50],[1144,50],[1138,50],[1145,50],[1146,50],[1147,50],[1148,50],[1149,50],[1150,50],[1151,50],[1152,50],[1153,50],[1154,50],[1155,50],[1156,50],[1157,50],[1158,50],[1159,50],[1160,50],[[[7,[1141,6]]],51],[[[7,[1142,6]]],51],[[[7,[1143,6]]],51],[[[7,[1139,6]]],51],[[[7,[1140,6]]],51],[[[7,[1144,6]]],51],[[[7,[1138,6]]],51],[[[7,[1145,6]]],51],[[[7,[1146,6]]],51],[[[7,[1147,6]]],51],[[[7,[1148,6]]],51],[[[7,[1149,6]]],51],[[[7,[1150,6]]],51],[[[7,[1151,6]]],51],[[[7,[1152,6]]],51],[[[7,[1153,6]]],51],[[[7,[1154,6]]],51],[[[7,[1155,6]]],51],[[[7,[1156,6]]],51],[[[7,[1157,6]]],51],[[[7,[1158,6]]],51],[[[7,[1159,6]]],51],[[[7,[1160,6]]],51],[[1141,24],[[12,[36]]]],[[1142,24],[[12,[36]]]],[[1143,24],[[12,[36]]]],[[1139,24],[[12,[36]]]],[[1140,24],[[12,[36]]]],[[1144,24],[[12,[36]]]],[[1138,24],[[12,[36]]]],[[1145,24],[[12,[36]]]],[[1146,24],[[12,[36]]]],[[1147,24],[[12,[36]]]],[[1148,24],[[12,[36]]]],[[1149,24],[[12,[36]]]],[[1150,24],[[12,[36]]]],[[1151,24],[[12,[36]]]],[[1152,24],[[12,[36]]]],[[1153,24],[[12,[36]]]],[[1154,24],[[12,[36]]]],[[1155,24],[[12,[36]]]],[[1156,24],[[12,[36]]]],[[1157,24],[[12,[36]]]],[[1158,24],[[12,[36]]]],[[1159,24],[[12,[36]]]],[[1160,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[1141,53],[1142,53],[1143,53],[1139,53],[1140,53],[1144,53],[1138,53],[1145,53],[1146,53],[1147,53],[1148,53],[1149,53],[1150,53],[1151,53],[1152,53],[1153,53],[1154,53],[1155,53],[1156,53],[1157,53],[1158,53],[1159,53],[1160,53],[[1167,123]],[[597,595],596],[[1178,595],596],[[1178,595],596],[1138,1139],0,[[1177,185,186,42],[[10,[187]]]],[82,61],[82,61],0,[1141,10],[1142,10],[1143,10],[1138,10],[1146,10],[1147,10],[1148,10],[1149,10],[1150,10],[1151,10],[1152,10],[1153,10],[1154,10],[1155,10],[[1141,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1142,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1143,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1139,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1140,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1144,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1138,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1145,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1146,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1147,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1148,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1149,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1150,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1151,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1152,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1153,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1154,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1155,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1156,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1157,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1158,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1159,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1160,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[176,177]],[[176,177]],[177],[177],[[1167,170,127]],[[]],[[]],[1144,454],0,0,[1162],0,[1174,222],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[1138,1139],0,0,[[1138,1138],[[10,[1138,1165]]]],[[1138,1138],[[10,[1165]]]],[[1138,1138,35],[[10,[1165]]]],[[1138,1138,35],[[10,[35,1165]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[1167,170]],[[1138,1138],[[10,[1138,1165]]]],[[1138,1138],[[10,[1165]]]],[[1138,1138,35],[[10,[1165]]]],[[1138,1138,35],[[10,[35,1165]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[1141,38],[1142,38],[1143,38],[1139,38],[1140,38],[1144,38],[1138,38],[1145,38],[1146,38],[1147,38],[1148,38],[1149,38],[1150,38],[1151,38],[1152,38],[1153,38],[1154,38],[1155,38],[1156,38],[1157,38],[1158,38],[1159,38],[1160,38],[[[81,[1179]],20,[20,[1119]],[17,[[418,[445]]]],[17,[449]],[17,[1171]],[20,[1180]],[20,[170,[199,[714]]]]]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[1177,42]],[[176,178]],[[176,178]],[[1167,170,19]],[179],[179],[[1167,170,1181]],[[1167,170,1145,1156,239]],[[1167,170,1145,239]],0,[1141,39],[1143,39],[1138,39],[1146,39],[1147,39],[1148,39],[1149,39],[1150,39],[1151,39],[1152,39],[1153,39],[1154,39],[1155,39],[1160,39],[1141,38],[1143,38],[1138,38],[1146,38],[1147,38],[1148,38],[1149,38],[1150,38],[1151,38],[1152,38],[1153,38],[1154,38],[1155,38],[1160,38],[1141,55],[1143,55],[1138,55],[1146,55],[1147,55],[1148,55],[1149,55],[1150,55],[1151,55],[1152,55],[1153,55],[1154,55],[1155,55],[1160,55],[1138,1139],0,0,[1138,1140],0,0,0,[[],1],[[],1],[2],[[]],[[]],[1182,1182],[[]],[[],[[7,[31,6]]]],[[32,33]],[[],1182],[[]],[[],12],[[]],[[]],[42],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],0,[[]],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1183,1183],[1184,1184],[1185,1185],[1186,1186],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],0,0,0,0,[[],1183],[[],1184],[[],1185],[[],1186],[[]],[[]],[[]],[[]],[[1183,40],[[10,[41]]]],[[1184,40],[[10,[41]]]],[[1185,40],[[10,[41]]]],[[1186,40],[[10,[41]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[[175,[78]],1107],1185],[123,1185],[42],[42],[42],[42],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[1185,1145],1185],[[1185,1106],1185],0,0,0,0,[[198,[20,[170]],20,[20,[19]]]],0,[[1187,24]],[[],1],[1187,1],[[],1],[1187,1],[2],[1187,24],[1187,24],[[]],[[]],[1187,1187],[1187,30],[[]],[[],[[7,[31,6]]]],[1187,[[7,[24,6]]]],[[32,33]],[[],1187],[[]],[[1187,38],[[12,[24]]]],[[1187,39],[[12,[24]]]],[[1187,39],[[12,[24]]]],[1187,39],[[1187,38],[[12,[24]]]],[[1187,40],[[10,[41]]]],[[]],[[]],[42],[[]],[38,12],[38,12],[1187,44],[[],45],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1187,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[[7,[1187,6]]],[[7,[24,6]]]],[[]],[1187,47],[[1187,39],[[12,[38]]]],[1187,50],[[[7,[1187,6]]],51],[[1187,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[1187,53],[[1187,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1138,1138,1138,239],35],[[198,[81,[[34,[170,6]]]],[81,[239]],[96,[[18,[574]]]],[17,[[18,[1094]]]],[20,[1119,[199,[714]]]],[17,[1117]],[96,[1118]],[17,[1172]],[96,[[18,[1035]]]],[96,[[18,[1100]]]],[96,[1116]],369]],[[]],[[],10],[[],10],[[],11],[[],44],[1187,38],[[],12],[[[17,[[18,[574]]]],[20,[[538,[1104]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[49,49],49],[[49,49]],[[49,24]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[49,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[49,1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[54,1188],[54],[[],26],[[],26],[[],26],[[],26],[54],[54,1189],[49,247],[49,247],[49,247],[54],[49,24],[49,24],[49,43],[49,35],[49,239],[54,1190],[54,247],[54],[54,1191],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,1188],[743,1192],[1193],[[49,49],[[12,[49]]]],[[49,153],[[12,[49]]]],[[49,153],[[12,[49]]]],[[49,49],[[12,[49]]]],[598,598],[1194,1194],[743,743],[54,54],[1192,1192],[49,49],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[49,[[7,[24,6]]]],[[1194,1194],109],[[54,54],109],[[49,49],109],[[49,40],[[10,[41]]]],[[]],[[],743],[[],1193],[[],1195],[[],54],[[],1192],[[],49],0,0,[598],[[],[[10,[54]]]],[[],[[10,[49]]]],0,[[49,153],49],[[49,153]],[[49,49],35],[[49,49],239],[[49,35],49],[[49,239],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1196],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[[]],[[598,598],36],[[1194,1194],36],[[54,54],36],[[49,49],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[1195,43],[1192,43],[[598,40],[[10,[41]]]],[[1194,40],[[10,[41]]]],[[743,40],[[10,[41]]]],[[1195,40],[[10,[41]]]],[[54,40],[[10,[41]]]],[[54,40],[[10,[41]]]],[[54,40],[[10,[41]]]],[[54,40],[[10,[41]]]],[[1192,40],[[10,[41]]]],[[49,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1191,54],[[]],[1189,54],[1188,54],[1190,54],[[]],[[]],[1197,49],[1198,49],[1199,49],[1200,49],[[],54],[[],54],[[],54],[[153,144,144],54],[[153,144,144],54],[43,49],[43,49],[43,49],[24,[[12,[49]]]],[43,49],[35,49],[239,49],[[],[[10,[54,1201]]]],[[],[[10,[54,1201]]]],[38,[[10,[54]]]],[247,54],[247,54],[[43,43],54],[42],[42],[42],[42],[42],[42],0,[[],43],[[],43],[[],43],[[],43],[598],[38,78],[54,[[12,[1202]]]],[49,44],[[],45],[54,1203],[54,[[12,[1204]]]],[54,39],[598,43],[598],[1194],[54],[49],[54,1189],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[49,6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[54],[[[7,[49,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,36],[49,36],0,[[49,153],49],[[49,153]],[[49,35],49],[[49,239],49],[1194],[[],598],[[],1196],[[43,153],49],[[],54],[[247,247],1192],[[],54],[38,[[10,[54,1201]]]],[[1194,1194],[[12,[109]]]],[[54,54],[[12,[109]]]],[[49,49],[[12,[109]]]],0,[49,[[12,[43]]]],[49,50],[[[7,[49,6]]],51],[[49,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[49,53],[[49,49],49],[[49,153],49],[[49,49],49],[54,10],[49,10],[[49,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[54,1190],[[49,49],49],[[49,49]],[49,153],[49,153],[49,153],[[],49],[[],49],0,0,[54],[54],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[54,247],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[38,[[10,[54]]]],[[],10],[[],10],[35,[[10,[49,1205]]]],[239,[[10,[49,1205]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[38,[[10,[54,1201]]]],[[],[[10,[54,1201]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[49,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[54,1191],[1195],[1192],[[1192,247]],[[1192,144]],[[1192,153]],[[1195,43]],[[1192,43]],[[1192,297]],[[1192,39]],[[],12],0,0,0,0,0,[934],[404],[[[934,[277,278]],24]],[[[404,[277,278]],24]],[[],1],[[],1],[[[934,[277,278]]],1],[[],1],[[[404,[277,278]]],1],[[],1],[[],1],[[],1],[[[934,[277,278]]],1],[[],1],[[[404,[277,278]]],1],[[],1],[[],1],[2],[2],[2],[[[934,[277,278]]],24],[[[404,[277,278]]],24],[[[934,[277,278]]],24],[[[404,[277,278]]],24],[[404,404],[[404,[278]]]],[[404,404],[[404,[278]]]],[[404,404],[[404,[278]]]],[[]],[[]],[[]],[[]],[[]],[[]],[934,39],[404,39],[934],[404],[934,934],[404,404],[1206,1206],[[[934,[277,278]]],624],[[934,934]],[[404,404]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[[934,[277,278]]],[[7,[24,6]]]],[[[404,[277,278]]],[[7,[24,6]]]],[404,36],[934,36],[[],934],[[],404],[[],[[10,[[934,[278]]]]]],[[],[[10,[[404,[278]]]]]],[[404,404],1207],[[]],[[]],[[]],[[[7,[[934,[277,278]],6]]],[[34,[6]]]],[934,1208],[404,1209],[934,1210],[404,1211],[26,36],[26,36],[26,36],[934,279],[404,1212],[934,1213],[[934,934],36],[[404,404],36],[[1206,1206],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[934],[934],[934],[404],[404],[[934,40],[[10,[41]]]],[[404,40],[[10,[41]]]],[[1206,40],[[10,[41]]]],[[],[[934,[277]]]],[[]],[[],[[404,[277]]]],[934,404],[[]],[[]],[[],934],[[],404],[24,[[12,[[934,[277,278]]]]]],[24,[[12,[[404,[277,278]]]]]],[42],[42],[934,12],[[[934,[277,278]],24],[[12,[24]]]],[404,12],[[[934,[277,278]],39],12],[934,12],[934,12],[934,12],[934,12],[934,12],[934,12],[[[934,[277,278]],24],[[12,[24]]]],[934,12],[404],[404],[[[934,[[598,[743]],1193,278]],598]],[404],[[[934,[277,278]]],44],[[[404,[277,278]]],44],[[],45],[[],45],0,0,[934],[404],[934],[934,12],[404,36],[[[934,[277,278]],[7,[24,6]],[7,[24,6]]],[[12,[[7,[24,6]]]]]],[934],[404],[[404,404],1214],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[[934,[277,278]],6]]],[[7,[1,6]]]],[[[7,[[404,[277,278]],6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[934,1215],[934,1216],[934,1217],[404,1218],[404,1219],[934,1220],[[[7,[[934,[277,278]],6]]],[[7,[24,6]]]],[[[7,[[404,[277,278]],6]]],[[7,[24,6]]]],[[]],[[]],[[]],[934,1221],[[404,404],36],[934,36],[404,36],[[404,404],36],[[404,404],36],[[[934,[277,278]]],656],[934,1216],[404,1218],[934,1217],[934,1222],[[[934,[277,278]]],39],[934,39],[404,39],[[],[[934,[277,278]]]],[[],[[404,[277,278]]]],[[],[[934,[277]]]],[[],[[404,[277]]]],0,[934,1223],[934,1224],[934,1225],[[[934,[277,278]]],50],[[[404,[277,278]]],50],[[[7,[[934,[277,278]],6]]],51],[[[7,[[404,[277,278]],6]]],51],[[[934,[277,278]],24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[[[934,[277,278]]],53],[[[404,[277,278]]],53],[934,12],[[[934,[277,278]],24],[[12,[[7,[24,6]]]]]],[404,36],[934,12],[404,12],[[934,39]],[[404,39]],[934],[404],[[[934,[278]]],10],[[[404,[278]]],10],[[[934,[277,278]],[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[[404,[277,278]],[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[934,39]],[[404,39]],[934],[404],[[404,404],[[404,[278]]]],[[404,404],1226],[404,12],[[]],[[]],[[]],[[],10],[[],10],[[],10],[934,[[10,[1227]]]],[[],10],[[],10],[[],10],[[934,39],[[10,[1206]]]],[[404,39],[[10,[1206]]]],[[],11],[[],11],[[],11],[[],44],[[],44],[[[934,[277,278]]],38],[[[404,[277,278]]],38],[[404,404],1228],[[],12],[[],12],[[],12],[934,1229],[934,1230],[39,[[934,[277,278]]]],[39,[[404,[277,278]]]],[39,[[934,[278]]]],[39,[[404,[278]]]],[39,934],[39,404],[39,[[934,[277]]]],[39,[[404,[277]]]],[[],[[934,[278]]]],[[],[[404,[278]]]],[[],934],[[],404],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1231,1231],[279,279],[1213,1213],[1231,1231],[279,279],[1213,1213],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1216,1216],[1222,1222],[1229,1229],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1210],0,[[1216,40],[[10,[41]]]],[[1217,40],[[10,[41]]]],[[1215,40],[[10,[41]]]],[[1220,40],[[10,[41]]]],[[1221,40],[[10,[41]]]],[[1222,40],[[10,[41]]]],[[1229,40],[[10,[41]]]],[[1208,40],[[10,[41]]]],[[1230,40],[[10,[41]]]],[[1224,40],[[10,[41]]]],[[1231,40],[[10,[41]]]],[[1232,40],[[10,[41]]]],[[1233,40],[[10,[41]]]],[[1223,40],[[10,[41]]]],[[279,40],[[10,[41]]]],[[1234,40],[[10,[41]]]],[[1235,40],[[10,[41]]]],[[1213,40],[[10,[41]]]],[[1236,40],[[10,[41]]]],[[1237,40],[[10,[41]]]],[[1227,40],[[10,[41]]]],[[1227,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1224,43],1231],[[1223,43],12],[1224,1231],[1223,12],[[1224,43],1231],[[1223,43],12],[1232],[1234],[1236],[1232],[1232],[1232],[1234],[1236],[1231,1232],[1232],[1233],[279,1234],[1234],[1235],[1213,1236],[1236],[1237],[[1233,43]],[1232],[[1233,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1232],[1235],[1237],[1232],[1232],[1234],[1236],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1232],[279],[1234],[1235],[1213],[1236],[1237],[1232],[1216,39],[1217,39],[1215,39],[1220,39],[1221,39],[1222,39],[1229,39],[1208,39],[1230,39],[1216,12],[1217,12],[1215,12],[1220,12],[1221,12],[1222,12],[1229,12],[1208,12],[1210,12],[1230,12],[279],[1213],[1231],[279],[1213],[1231],[279],[1213],[279],[1213],[1232],[1234],[1236],[1232],[1234],[1236],[1234],[1236],[1232,1231],[1234,279],[1236,1213],[1234],[1236],[1216],[1217],[1215],[1220],[1221],[1222],[1229],[1208],[1210],[1230],[[]],[[]],[[]],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1218,1218],[1214,1214],[1207,1207],[1226,1226],[1228,1228],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1211],[[1218,40],[[10,[41]]]],[[1219,40],[[10,[41]]]],[[1209,40],[[10,[41]]]],[[1214,40],[[10,[41]]]],[[1207,40],[[10,[41]]]],[[1226,40],[[10,[41]]]],[[1228,40],[[10,[41]]]],[[1212,40],[[10,[41]]]],[[1238,40],[[10,[41]]]],[[1239,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1212],[1238],[1239],[1212,1238],[1239],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1239],[1218,39],[1219,39],[1209,39],[1218,12],[1219,12],[1209,12],[1211,12],[1214,12],[1207,12],[1226,12],[1228,12],[1212],[1238],[1238],[1218],[1219],[1209],[1211],[1214],[1207],[1226],[1228],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,[1225],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[1240],[1240],[1240],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1225,39],1240],[[1225,1240],39],[1225,39],[1225,39],[1225],[1225],[1240,1240],[1225,1225],[1241,1241],[[1225,1225]],[[1225,1225,79]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1240,1240]],[1225,298],[[],1225],[[]],[[]],[[]],[[]],[[]],[[]],[1225,1242],[[1225,1241],1242],[1240],[1225],[1243],[1242],[[1225,1240]],[[1225,43,75],36],[[1225,1240]],[[1225,43,75],[[12,[1240]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[[1225,43,75],12],[[1225,75],12],[[1225,75],12],[[1225,43,75],12],[[1225,43,79],1240],[[1225,43,79]],[[1225,43],1240],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1225,1243],[[]],[[]],[[]],[[]],[[1225,1241],1243],[[]],[[]],[[]],[[]],[[]],[[]],[1225,36],[1225,1241],[1243,1241],[1242,1241],[[1225,43],1244],[1225,39],[[],[[1225,[278]]]],[[],1225],[1241,[[12,[1240]]]],[1243,12],[1242,12],[1244,[[12,[1240]]]],[1240],[[1241,1240]],[[1241,1240]],[[1225,1240]],[[1225,43,75],12],[[1225,1240],36],[[1225,39,79]],[[1225,39,79]],[1241],[1243],[1242],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[1225,43],[[10,[1240]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[1225,39,79],[[10,[1206]]]],[39,[[10,[[1225,[278]],1206]]]],[39,[[10,[1225,1206]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[39,[[1225,[278]]]],[39,1225],[1240],0,0,[[],1],[[],26],0,0,[26,36],[37],0,0,0,0,0,0,0,0,0,0,0,0,[[1245,1246,1246],1247],[1245,12],[1245],[1245,1246],0,[1245,1068],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1245],[1245],[1245],[1245,1245],[1248,1248],[1249,1249],[1250,1250],[[1245,1245]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1248,1248],109],[[1245,1246,1246],36],0,0,[[],1245],0,[[]],[[]],[[]],[[]],[26,36],[37],[1245,39],[1245,39],[1245,39],[[1245,1247],12],[1245,1251],[1245],[1245,1252],[1245,12],[[1245,1247],12],[[1245,1247],12],[1245,12],[1245,1253],[1245,1254],[1245],[[1245,1246],1255],[[1245,1246,1246],1256],[[1245,1246,1248],1255],[[1245,1248]],[[1248,1248],36],[[],36],[1245],[[1245,1248],1257],[1245,1245],[[1245,1246,1246],[[12,[1247]]]],[[1245,1246,1246],12],[[1245,1246,1248],[[12,[1247]]]],[[1245,40],[[10,[41]]]],[[1248,40],[[10,[41]]]],[[1249,40],[[10,[41]]]],[[1250,40],[[10,[41]]]],[[]],[1258,1245],[[]],[1259,1248],[[]],[[]],[[],1245],[[],1245],[[1245,39]],[[1245,39]],[42],[[],43],0,0,[1248],[[1245,1247]],[[1245,1246]],[1248,39],[[1245,1247]],[[1245,1246]],[1245],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1245,1245],[1245],[[]],[[]],[[]],[[]],[[]],[[1245,1068,1246,1246],36],[[],36],[1245,36],[[],36],[[],36],[1245,1245],0,[[1245,1246],1260],[[1245,1246],1260],[[1245,1246,1248],1260],[[1245,1246,1248],1260],[[1245,1246],1260],[[],[[1245,[1249,153]]]],[[],[[1245,[1250,153]]]],[[1245,1247,1248],[[12,[1247]]]],[1245,39],[1245,39],[1245,39],[1245,1261],[1245,1261],[1245],[[1245,1246],12],[1245,12],[1245,12],[[1245,1246],12],[1245,1262],[1245,1263],0,[1248,1248],[[1248,1248],[[12,[109]]]],0,[1245],[1245],[[1245,1247],12],[[1245,1246],12],[[1245,39]],[[1245,39]],[[1245,39]],[[1245,39]],[1245],[1245],[1245],[1245],[1245],[1245],[1245],0,[[1245,1246],39],[[1245,1247],39],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],0,[[],12],[[],12],[[],12],[[],12],[[1245,1246,1246],1247],[1245],0,[1245,1068],[[39,39],1245],[[39,39],1245],0,0,0,0,0,0,0,0,0,0,0,0,0,[1264,1265],[1264,[[12,[1265]]]],[1264],[1264],[1264],[[1264,39]],[1264,1068],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1264],[1265,1265],[1266,1266],[1267,1267],[1268,1268],[1269,1269],[1270,1270],[1264,1264],[1271,1271],[1272,1272],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1265,1265],109],[[1268,1268],109],[1264,36],[[],1264],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[37],[1264,39],[1264,39],[[1264,1265],12],[1264,1269],[1264,1266],[1264],[[1264,1265],12],[[1264,1265],12],[1264],[[1265,1265],36],[[1268,1268],36],[[],36],[[],36],[1264,[[12,[1265]]]],[[1265,40],[[10,[41]]]],[[1266,40],[[10,[41]]]],[[1267,40],[[10,[41]]]],[[1268,40],[[10,[41]]]],[[1269,40],[[10,[41]]]],[[1270,40],[[10,[41]]]],[[1264,40],[[10,[41]]]],[[1271,40],[[10,[41]]]],[[1272,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1264,39]],[42],[[],43],[1265],[1268],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1264,1068],36],[1264,36],[1267,39],[1270,39],[[]],[1264],[39],[[],1264],[1266,12],[1267,12],[1269,[[12,[1265]]]],[1270,12],[1271,12],[1272,12],[1267,12],[1270,12],[1264,39],[1264,39],[1264,1270],[1264,1270],[1264],[1264,12],[1264,12],[[1265,1265],[[12,[109]]]],[[1268,1268],[[12,[109]]]],[1264],[1267,12],[1270,12],[1267],[1270],[1266],[1267],[1270],[1271],[1272],[1268],[1268],[1264,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1264,1265],[1264,1068],[1268],[39,1264],0,0,0,0,0,0,0,0,0,[[39,[12,[39]]],127],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],0,[[],12],0,[[],[[10,[1273,1274]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1275,1275],[1276,1276],[1277,1277],[1274,1274],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1245,36],[[1245,[[34,[6]]]]]],[[],39],[1278,36],[1278,36],[[],1275],[[],1279],0,[12,[[1281,[1280]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[1278,1282],[[1277,1277],36],[[1274,1274],36],0,[[],[[12,[[34,[6]]]]]],0,[[],[[10,[[1281,[1280]],1274]]]],[[1275,40],[[10,[41]]]],[[1279,40],[[10,[41]]]],[[1276,40],[[10,[41]]]],[[1277,40],[[10,[41]]]],[[1274,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42],[42],[[],127],[[],1278],[[[12,[1275]]],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[1278,36],[[],36],[[],36],[[],36],[[],36],[1278,36],0,0,[[12,39],[[1281,[1280]]]],[[],[[34,[[34,[6]],6]]]],[1278,39],0,[1278,12],[[]],[[],1278],[[]],[[],1276],[[],1275],[[],1279],[1276,12],[1279,39],[1277],[1278,1283],[[]],[1279],[[],[[34,[[34,[6]],6]]]],0,[[],[[12,[127]]]],[[],[[34,[[34,[6]],6]]]],[[]],[[]],[[]],[[]],[[[12,[1275]]],[[10,[[34,[6]],1277]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[],12],0,[[],1],[[],1],[2],[[],[[10,[1273,1274]]]],[[]],[[]],[1273,1273],[[]],[[],[[7,[31,6]]]],0,[[]],[[],[[12,[[34,[6]]]]]],[[1273,40],[[10,[41]]]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],0,[[]],[[],10],[[],10],[[],11],[[],12],[12,[[1281,[1280]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[1284,1284],[1285,1285],[1286,1286],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1284,[[12,[1285]]]],[[]],[[]],[[]],[[1284,40],[[10,[41]]]],[[1285,40],[[10,[41]]]],[[1286,40],[[10,[41]]]],[[]],[[]],[[]],[1284,12],[1284,1286],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[1285,12],[1286,12],[1284],[[],1284],[1286],[1284,[[12,[1285]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],127],[[],[[10,[[1281,[1280]],1274]]]],[[],36],[[],36],[[],36],[[],36],[[],[[12,[127]]]],[[12,39],[[1281,[1280]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1278],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[],1278],[1283,12],[1282,12],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[[39,[12,[39]]],127],[[]],[1264],0,0,0,0,0,0,0,0,0,0,0,0,[1287,36],[1287],[1287,1068],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1287],[1287,1287],[1288,1288],[1289,1289],[1290,1290],[1291,1291],[1292,1292],[1293,1293],[1294,1294],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1287,36],[[],1287],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1287,39],[1287,39],[1287],[1287],[1287,1289],[1287],[[1287,40],[[10,[41]]]],[[1288,40],[[10,[41]]]],[[1289,40],[[10,[41]]]],[[1290,40],[[10,[41]]]],[[1291,40],[[10,[41]]]],[[1292,40],[[10,[41]]]],[[1293,40],[[10,[41]]]],[[1294,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1287,39]],[[],[[10,[[1287,[1249]],1288]]]],[42],[1290],[[],39],[1287],[1287],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1287,1068],36],[1287,36],[[]],[1287],[1287],[39],[[],1287],[1289,12],[1291,12],[1292,12],[1293,12],[1294,12],[1294,12],[1287,39],[1287,39],[1287,39],[1287],[1287],[1287,39],[1287],[1289],[1292],[1293],[1294],[1290],[1290],[1287,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1287,1068],[1290],[1290],[39,1287],0,0,0,0,0,0,0,0,0,0,[[],12],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[1295,1295],[1296,1296],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[]],[[]],[26,36],[[],12],[[],12],[[1295,1295],36],[[],36],[[],1296],[[1295,40],[[10,[41]]]],[[1296,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[1296,12],[[],12],[[],12],[1296],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[[]],[[39,39]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[[1297,1297],36],[[],36],[[1298,40],[[10,[41]]]],[[1298,40],[[10,[41]]]],[[1297,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[],1298],[[],78],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],[[79,79],1298],[[],1298],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1299],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1300,1300],[1301,1301],[1302,1302],[1257,1257],[1260,1260],[1255,1255],[1256,1256],[1261,1261],[1251,1251],[1303,1303],[1304,1304],[1252,1252],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1299],[1260,1300],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1299,39],[1299,39],[39,1247],[1299],[1299,12],[1299,12],[1299],[[1299,1248]],[[1303,1303],36],[[1301,40],[[10,[41]]]],[[1302,40],[[10,[41]]]],[[1257,40],[[10,[41]]]],[[1260,40],[[10,[41]]]],[[1255,40],[[10,[41]]]],[[1256,40],[[10,[41]]]],[[1263,40],[[10,[41]]]],[[1254,40],[[10,[41]]]],[[1261,40],[[10,[41]]]],[[1251,40],[[10,[41]]]],[[1303,40],[[10,[41]]]],[[1304,40],[[10,[41]]]],[[1252,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1299,39]],[[1299,39]],[1303],[[],39],[1299],[1299],[[[1299,[1245]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1299,36],[[]],[1299],[[1299,1248]],[39],[[],1299],[[1300,1245],12],[1257,[[12,[1246]]]],[1260,[[12,[1246]]]],[1255,12],[1256,[[12,[1303]]]],[1263,12],[1254,12],[1261,12],[1251,12],[1304,12],[1252,12],[1261,12],[1251,12],[1304,12],[1252,12],[[1300,1245],[[12,[1247]]]],[[1301,1248],1247],[[1302,1248],1247],[[1300,1245],[[12,[1246]]]],[1299,39],[1299,39],[1299],[39,1246],[1299],[1299,12],[1299,12],[1299],[1257],[1256],[1263],[1254],[1261],[1251],[1304],[1252],[1302,1246],[1303],[1302,1246],[1303],[1299,39],[1299,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1299],[1303],[1303],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1305,1305],[1306,1306],[1307,1307],[1308,1308],[1309,1309],[1310,1310],[1311,1311],[1312,1312],[1313,1313],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1305,1305],109],[1314,39],[1311,39],[1305],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],[[1305,1305],36],[[],36],[[1305,40],[[10,[41]]]],[[1306,40],[[10,[41]]]],[[1307,40],[[10,[41]]]],[[1308,40],[[10,[41]]]],[[1309,40],[[10,[41]]]],[[1310,40],[[10,[41]]]],[[1311,40],[[10,[41]]]],[[1312,40],[[10,[41]]]],[[1313,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[1305],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1314,12],[1311,12],[1306,39],[1314,12],[1306,12],[1307,12],[1308,12],[1309,12],[1310,12],[1311,12],[1312,12],[1313,12],[1314,12],[1306,12],[1311,12],[[1314,39],12],[[1311,39],12],[[1305,1305],[[12,[109]]]],[1306,12],[1306],[1314],[1306],[1307],[1308],[1309],[1310],[1311],[1312],[1313],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,[[1315,1246,1246]],[1315,12],[1315,1246],[1315],[1315],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1315],[1315,1315],[1316,1316],[1317,1317],[1318,1318],[1319,1319],[1320,1320],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],1321],[[],1315],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1315,39],[1315,39],[1315],[[1315,1246,1246]],[[1315,1246,1246]],[1315],[[1315,1246],1320],[[1315,1248]],[[[1315,[1249]],1246,1248],[[1320,[1249]]]],[1315],[[1316,40],[[10,[41]]]],[[1317,40],[[10,[41]]]],[[1318,40],[[10,[41]]]],[[1319,40],[[10,[41]]]],[[1320,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1315],[[1315,39]],[42],[42],[[1315,1246,1246],36],[[],39],[1315],[[1315,1246]],[[1315,1246]],[1315],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1315,1246,1246],36],[1315,36],[[],36],[[]],[[1315,1246],1319],[[1315,1246]],[[1315,1246,1248]],[[[1315,[1249]],1246,1248],[[1319,[1249]]]],[39],[[],[[1315,[1249,12,144]]]],[[],[[1315,[1250,12,144]]]],[1316,12],[1317,12],[1318,12],[1319,12],[1320,12],[1315,39],[1315,39],[1315,39],[1315],[39,[[1246,[144]]]],[1315],[[1315,1246]],[[1315,1246]],[[1315,1246,1246]],[[1315,1246]],[1315],[1316],[1317],[1319],[[1315,1246],39],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1315],[[1315,1246,1246],12],[1315,1068],[39,1315],[[]],[[1245,1245]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1322,12],[1322,12],[1322],[1322],[1322],[1322,1311],[1322,1314],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1322],[1322],[1323,1323],[1324,1324],[1325,1325],[1322,1322],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1322,36],[1322,36],[[],1323],[[],1324],[[],1325],[[],1322],0,0,0,[[]],[[]],[[]],[[]],[1322,39],[1322,39],[1322,39],[1322],[1322,12],[1322,12],[1322],[1322,1309],[[1322,1248]],[[1322,1248],1310],[[],1323],[[],1324],[1322],0,[[1323,40],[[10,[41]]]],[[1324,40],[[10,[41]]]],[[1322,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[],1322],[[],1322],[1245,1322],[[1322,39]],[[1322,39]],[[],1322],[[[34,[6]]],1323],[42],[42],[42],[42],[[]],[1322],[1322],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1322,1245],[[]],[[]],[[]],[[]],[1322,36],[1322,36],[1323],[1324],[1322],[1322,1307],[[1322,1248],1308],[[1322,1248]],[[],1323],[[],1324],[[],1325],[[],1322],[1323,12],[1324,12],[1325,12],[1322,39],[1322,39],[1322,39],[1322],[1322],[1322,1306],[1322,12],[1322,36],[1323],[1324],[1322],[[]],0,0,0,[[]],[1322,39],[1322,39],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[1322],[1322,[[1326,[1280]]]],[1323,12],[1324,12],[1325,12],[[]],[[39,39],1322],[[39,39],1322],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1258,1246,1246],1247],[1258,12],[1258,1246],[1258],[1258,1068],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1258],[1258],[1258],[1258,1258],[1327,1327],[1246,1246],[1247,1247],[1328,1328],[1329,1329],[1330,1330],[1331,1331],[1332,1332],[1333,1333],[1334,1334],[1335,1335],[1336,1336],[[1258,1258]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1246,1246],109],[[1247,1247],109],[[1258,1246,1246],36],[[1258,1246],36],[[],1258],[[],1246],[[],1247],[1334,1327],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[37],[37],[1258,39],[1258,39],[1258,39],[[1258,1247],12],[39,1247],[1258,1336],[1258],[1258,12],[[1258,1247],12],[[1258,1247],12],[1258,12],[1258,127],[1258,127],[1258],[[1258,1246],1330],[[1258,1246,1246],1331],[[1258,1246,1248],1330],[[1258,1248]],[[],1246],[[],1247],[[1246,1246],36],[[1247,1247],36],[[1329,1329],36],[[],36],[[],36],[1258],[[1258,1248],1333],[1258,1258],[[1258,1246,1246],[[12,[1247]]]],[[1258,1246,1246],12],[[1258,40],[[10,[41]]]],[[1246,40],[[10,[41]]]],[[1247,40],[[10,[41]]]],[[1328,40],[[10,[41]]]],[[1329,40],[[10,[41]]]],[[1330,40],[[10,[41]]]],[[1331,40],[[10,[41]]]],[[1332,40],[[10,[41]]]],[[1333,40],[[10,[41]]]],[[1334,40],[[10,[41]]]],[[1335,40],[[10,[41]]]],[[1336,40],[[10,[41]]]],[1245,1258],[[]],[[]],[[],1246],[[]],[[],1247],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1258],[[],1258],[[1258,39]],[[1258,39]],[42],[42],[42],[[],43],[[],43],[1246],[1247],[[]],[1329],[[],39],[[1258,1247]],[[1258,1246]],[1246,39],[1246,39],[1247,39],[[1258,1246]],[[1258,1247]],[1258],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1258,1068,1246,1246],36],[1258,36],[1258,1258],[[]],[[],1246],[[1258,1246],1334],[1258],[[1258,1246,1248],1334],[[1258,1246,1248]],[[1258,1246],1334],[39],[[],[[1258,[1249,153]]]],[39,1246],[39,1246],[39,1247],[[1327,1258],12],[1328,12],[1330,12],[1331,[[12,[1329]]]],[1332,12],[1333,[[12,[1246]]]],[1334,[[12,[1246]]]],[1335,12],[1336,12],[1328,12],[1332,12],[1335,12],[1336,12],[[1327,1258],[[12,[1247]]]],[[1327,1258],[[12,[1246]]]],[1258,39],[1258,39],[1258,39],[1258],[39,1246],[1258,1335],[1258],[[1258,1246],12],[1258,12],[1258,12],[[1258,1246],12],[1258,127],[1258,127],[[1246,1246],[[12,[109]]]],[[1247,1247],[[12,[109]]]],[[1258,1247],12],[[1258,1246],12],[1258],[1258],[1258],[1258],[1328],[1331],[1333],[1335],[1336],[1329],[1329],[[1258,1246],39],[[1258,1247],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[1258,1246,1246],1247],[1258],[1258,1068],[[]],[1329],[1329],[[39,39],1258],[[39,39],1258],0,[[],1],[[],1],[2],[[]],[[]],[1337,1337],[[]],[[],[[7,[31,6]]]],[[]],[1337,36],[1337],[1337],[[1337,40],[[10,[41]]]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[1337,[[34,[6]]]],[[]],[39,1337],[[]],[[],10],[[],10],[[],11],[1337,36],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[1338],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[1339],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1340,12],[[],1340],[1341,1341],[1342,1342],[1340,1340],[1343,1343],[1344,1344],[1345,1345],[1346,1346],[1347,1347],[1348,1348],[1349,1349],[1350,1350],[1351,1351],[1352,1352],[1353,1353],[1338,1338],[1354,1354],[1339,1339],[1355,1355],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1341,1341],109],[1344],[[]],[[],1340],[[],1341],[[],1340],[[],1343],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[37],[[],39],[1345,39],[1350,39],[1338,39],[[],39],[1338,39],[[]],[1345],[1350],[1338],[1345,12],[1338,12],[1338,12],[[]],[1345],[1350],[1338],[1248],[[1345,1248]],[[1350,1248]],[[1338,1248]],[[1341,1341],36],[[],36],0,[[1341,40],[[10,[41]]]],[[1342,40],[[10,[41]]]],[[1340,40],[[10,[41]]]],[[1344,40],[[10,[41]]]],[[1345,40],[[10,[41]]]],[[1346,40],[[10,[41]]]],[[1347,40],[[10,[41]]]],[[1348,40],[[10,[41]]]],[[1349,40],[[10,[41]]]],[[1350,40],[[10,[41]]]],[[1351,40],[[10,[41]]]],[[1352,40],[[10,[41]]]],[[1353,40],[[10,[41]]]],[[1338,40],[[10,[41]]]],[[1354,40],[[10,[41]]]],[[1339,40],[[10,[41]]]],[[1355,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1345],[[],1350],[39],[39],[[1345,39]],[[1345,39]],[[1350,39]],[[1350,39]],[[1338,39]],[[1338,39]],[42],[42],[42],[[],43],[1341],[[]],[[]],[1339],[[],36],[[],36],[1344],[1344],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1339],[[],36],[1338,36],[[],36],[[],36],[[],1344],[[]],[1345],[1350],[1338],[1248],[[1345,1248]],[[1350,1248]],[[1338,1248]],[[],1343],[1343,12],[1344,12],[1346,12],[1347,12],[1348,12],[1349,12],[1351,12],[1352,12],[1353,12],[1354,12],[1355,12],[[],39],[1345,39],[1350,39],[1338,39],[[],39],[1350,39],[1338,39],[[]],[1345],[1350],[1338],[[]],[1345],[1350],[1338],[1345,12],[1338,12],[1338,12],[[1341,1341],[[12,[109]]]],[1343],[[]],[1345],[1350],[1338],[[],36],[1340,36],[[],36],[1340,36],[1346],[1347],[1348],[1349],[1351],[1352],[1353],[1354],[1355],[[]],[1339],0,0,0,[[]],[1339],[[],39],[[],39],[1345,39],[1345,39],[1350,39],[1350,39],[1338,39],[1338,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],36],[[]],[1345],[1350],[1338],[[],12],[1343,12],[[]],[[]],[1339],[[]],0,[[],1],[[],1],[2],[[]],[[]],[[]],[[]],[[],1356],[1356],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[[],1356],[1356],[[],10],[[],10],[[],11],[[],12],0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[1357],[[]],[[]],[[]],[[]],[[],1357],[[],347],[347],[347],[[]],[[]],[[347,40],[[10,[41]]]],[[]],[119],[[],1357],[119],[[]],[[],347],[[],1357],[42],[42],[1357],[347],[1357],[347],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1357],[347],[[]],[[]],[[],1357],[[],347],[1357],[347],[347],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[],26],[[],26],[1358],[1359,1360],[1359,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1358,1361],[[[175,[[12,[1362]]]],1358,1363],1364],[1364,1364],[1365,1365],[1359,1359],[1362,1362],[[]],[[]],[[]],[[]],[1362,1362],[[1365,1362],1362],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1359,1359],109],[[],1364],[[],1366],[1365,1366],0,0,[[],1365],0,[[]],[[]],[[]],[[]],[[]],[11,12],[1367,12],[1367,12],[1367,12],[1367,12],[1365,12],[1365,1368],[1364],[1362],[[1365,1362]],[26,36],[26,36],[26,36],[37],[37],[1358,36],[[1365,1358],36],0,[1362],[1364,1369],[[1365,1362]],[1364,1370],[[1364,1364],36],[[1358,1358],36],[[1359,1359],36],[[1359,1371],36],[[1362,1362],36],[[],36],[[],36],[[],36],0,0,0,[1372],[[1365,1372]],0,[1372,36],0,[1362],[[1365,1362]],0,[1364,[[12,[1373]]]],[1358,1374],[1358,[[12,[38]]]],[[1375,40],[[10,[41]]]],[[1375,40],[[10,[41]]]],[[1364,40],[[10,[41]]]],[[1358,40],[[10,[41]]]],[[1365,40],[[10,[41]]]],[[1359,40],[[10,[41]]]],[[1359,40],[[10,[41]]]],[[1362,40],[[10,[41]]]],[[1364,[175,[[12,[1362]]]]],1364],[[]],[[]],[1376,1365],[[]],[[],1365],[[]],[[]],[536,1362],[38,[[10,[1359,1377]]]],[43,1362],[42],[[1359,1359],36],[[1359,1371],36],[[],43],[[],43],[[],43],[[1359,1371],36],[[1359,1359],36],[1364,36],[1364],[1359],[1362],[1364,[[12,[1362]]]],[[],1378],[1364],0,0,0,[1364,1378],0,[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1362,536],[[]],[[]],[[]],[[]],[[]],[1362,43],[1367,36],[1367,36],[1367,36],[1367,36],[1365,36],[1364,36],[1358,36],[1364,36],[1358,36],[[1359,1371],36],[[1359,1359],36],[1358,1359],0,[1358,[[12,[153]]]],[[1359,1359],36],[[1359,1371],36],[[],[[12,[1371]]]],0,[[],1358],[1364,[[12,[1358]]]],0,[1358,[[12,[38]]]],[1358,38],[[1358,1363],1364],[[38,38,1359,[12,[38]],[12,[153]],[12,[38]],1374,1379],1358],[[],1365],[1358,1364],[[1358,1363],1364],[1380,1362],[[1365,1380],1362],[[],1364],[[],1365],[1365],[1364,1364],[[1359,1371],[[12,[109]]]],[[1359,1359],[[12,[109]]]],[[1373,1381]],[[1362,1382]],[1364,1364],[[1365,1362,1382]],[[1364,1363],1364],[[1362,1362]],[[1365,1362,1362]],[1358,1383],[[1365,1358],1383],[1383],0,0,0,0,[1358,38],[[]],[[]],[[]],[[]],[[],78],0,0,[1362,36],[[1365,1362],36],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[1364,125],12],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[],26],[[]],[[]],[[]],[[]],[1361,1361],[[]],[[],[[7,[31,6]]]],[[]],[[]],[26,36],[37],[[1361,1361],36],[[],36],[[1361,40],[[10,[41]]]],[[1384,40],[[10,[41]]]],[[]],[[]],[[],43],[1361],[1384,1383],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[],1358],[1384,1358],[1358,1384],[[]],[1385],[1384,1383],[1383],[[1384,1383]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],12],[[],12],0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[1368,1368],[[]],[[],[[7,[31,6]]]],[[]],[[1368,40],[[10,[41]]]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[]],[1365,1386],[1365,[[10,[1387]]]],[[]],[[],10],[[],10],[[],11],[[],12],[1368,[[12,[1365]]]],[[1365,125]],0,[[],1],[[],1],[2],[[]],[[]],[[[175,[[12,[1362]]]],1358,1363]],[[1358,1363]],[[]],[1372,1388],[[1372,40],[[10,[41]]]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[9,[[9,[1]]]],[[]],[1372,36],[1372,36],[1372,36],[1372,1358],[[1358,1363],1372],[[[175,[[12,[1362]]]],1358,1363],1372],[1372,[[12,[1358]]]],[1372,[[12,[1362]]]],[[1372,1381]],[[1372,1381]],[[],10],[[],10],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[],26],[1358,[[12,[1373]]]],[[1373,1358],[[12,[1373]]]],[[1373,1358],[[12,[1373]]]],[1373,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1363,1361],[1373,1361],[1373,1373],[1389,1389],[1390,1390],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1374,1373],36],[[],1390],[[],1389],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[37],[[1374,1374],36],[[1373,1373],36],[[1391,1391],36],[[],36],[[],36],[[],36],[1374,[[12,[1373]]]],[[1374,40],[[10,[41]]]],[[1374,40],[[10,[41]]]],[[1363,40],[[10,[41]]]],[[1363,40],[[10,[41]]]],[[1373,40],[[10,[41]]]],[[1373,40],[[10,[41]]]],[[1391,40],[[10,[41]]]],[[1388,40],[[10,[41]]]],[[1389,40],[[10,[41]]]],[[1389,40],[[10,[41]]]],[[1390,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[1373],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1374],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1374,36],[1363,36],[1374,1388],[1374,39],[1363,39],[1373,38],[1361,1374],[1388,[[12,[1373]]]],[[1373,1381]],[[1363,1381]],[[1391,1373,1381]],[[1389,1373,1381]],[[1390,1373,1381]],[[1373,36]],[[1373,1392]],[[1373,93]],[[1373,239]],[[1373,670]],[[1373,671]],[[1373,38]],[[1373,247]],[[1373,43]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[1393,1393],[1378,1378],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1393,1365],[[]],[[]],[[1393,40],[[10,[41]]]],[[1378,40],[[10,[41]]]],[[]],[[]],[[],1378],[1393],[1378],[1393],[1378],[[[129,[1393]]],129],[[[129,[1378]]],129],[[[129,[1393]]],129],[[[129,[1378]]],129],[1364,1378],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[1393],[1378],[[]],[[]],[[[129,[1393]],1091],1092],[[[129,[1378]],1091],1092],[1378,1364],[1378,1364],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[129,1091],1092],[[129,1091],1092],[[],11],[[],11],[[],12],[[],12],[[],1393],[[],1393],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],26],[1371],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1371,1358],1383],[1379,1379],[1371,1371],[1394,1394],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[1371,1371],109],[[],1371],[[]],[[]],[[]],[[]],[26,36],[26,36],[37],[[1371,1358,1395],36],[[1371,1358,1395],36],[[1379,1379],36],[[1371,1371],36],[[1371,1359],36],[[],36],[[],36],[[1379,40],[[10,[41]]]],[[1371,40],[[10,[41]]]],[[1371,40],[[10,[41]]]],[[1394,40],[[10,[41]]]],[[1394,40],[[10,[41]]]],[[1377,40],[[10,[41]]]],[[1377,40],[[10,[41]]]],[[]],[[]],[1359,1371],[[[12,[1359]]],1371],[[]],[[]],[1359,1371],[38,[[10,[1371]]]],[[1371,1359],36],[[1371,1371],36],[[],43],[[1371,1359],36],[[1371,1371],36],[1371],[1379,1379],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[1371,[[12,[1359]]]],[[]],[[]],[[]],[[]],[1379,36],[1379,36],[1379,36],[[1371,1371],36],[[1371,1359],36],[[1371,1371],36],[[1371,1359],36],[1371,[[12,[1371]]]],[[1371,1359],[[12,[109]]]],[[1371,1371],[[12,[109]]]],[130],[130],[[1371,1358],1383],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],[[12,[1362]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1362,1358,1363],1380],[[1380,1373],36],[[1382,1373],36],[1370,1364],[[]],[[]],[[]],[[]],[1369],[1370],[1370,1364],[1380,1374],[[1369,40],[[10,[41]]]],[[1370,40],[[10,[41]]]],[[1380,40],[[10,[41]]]],[[1382,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[1370,[[12,[1362]]]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[1380,36],[1380,36],[1382,36],[1380,36],[1382,39],[1380,1358],[[1358,1363],1380],[1363,1382],[[1358,1363],1380],[1380,[[12,[1362]]]],[[1380,1381]],[[1380,1381]],[[1382,1381]],[[1382,1381]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[1380,1363],0,0,0,0,0,[[],1383],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1383,1383],[1396,1396],[[]],[[]],[1362,1362],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],1366],[[],1396],[[]],[[]],[[]],[[]],[11,12],[1386],[1362],[1358,36],[[1396,1358],36],[1362],[[1396,1362]],[1372],[[1396,1372]],[1372,36],[1362],[[1396,1362]],[[1387,40],[[10,[41]]]],[[1387,40],[[10,[41]]]],[[1386,40],[[10,[41]]]],[[1383,40],[[10,[41]]]],[[1396,40],[[10,[41]]]],[[]],[[]],[[]],[[]],[42],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[1383,36],[1383,36],[1383,36],[[],[[12,[1371]]]],[[],1383],[1380,1362],[[1396,1380],1362],[1365],[130],[[1362,1382]],[[1396,1362,1382]],[[1362,1362]],[[1396,1362,1362]],[1358,1383],[[1396,1358],1383],[[],1386],[[],[[10,[1387]]]],[[],1383],[[]],[[]],[[],78],[1362,36],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[125],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1397,24]],[[712,24]],[[1398,24]],[[713,24]],[[1399,24]],[[1400,24]],[[1401,24]],[[1402,24]],[[1403,24]],[[1404,24]],[[1405,24]],[[1406,24]],[[1123,24]],[[1407,24]],[[1408,24]],[[1409,24]],[[714,24]],[[1410,24]],[[1411,24]],[[1119,24]],[[1412,24]],[[1413,24]],[[1414,24]],[[1181,24]],[[1415,24]],[[1416,24]],[[1417,24]],[[1418,24]],[[1419,24]],[[1420,24]],[[1421,24]],[[],1],[[],1],[1397,1],[[],1],[[],1],[[],1],[712,1],[[],1],[[],1],[1398,1],[713,1],[[],1],[[],1],[[],1],[[],1],[1399,1],[[],1],[[],1],[1400,1],[1401,1],[[],1],[[],1],[1402,1],[[],1],[1403,1],[[],1],[[],1],[[],1],[1404,1],[[],1],[[],1],[[],1],[1405,1],[1406,1],[[],1],[[],1],[1123,1],[[],1],[1407,1],[[],1],[1408,1],[[],1],[[],1],[[],1],[1409,1],[[],1],[[],1],[714,1],[[],1],[[],1],[1410,1],[[],1],[[],1],[[],1],[1411,1],[[],1],[1119,1],[[],1],[1412,1],[1413,1],[[],1],[1414,1],[[],1],[[],1],[1181,1],[[],1],[1415,1],[[],1],[1416,1],[[],1],[[],1],[1417,1],[[],1],[[],1],[[],1],[1418,1],[[],1],[[],1],[[],1],[1419,1],[[],1],[1420,1],[[],1],[1421,1],[[],1],[[],1],[[],1],[[],1],[[],1],[1397,1],[[],1],[712,1],[[],1],[[],1],[1398,1],[713,1],[[],1],[[],1],[1399,1],[[],1],[1400,1],[1401,1],[[],1],[1402,1],[[],1],[[],1],[1403,1],[1404,1],[[],1],[1405,1],[[],1],[[],1],[1406,1],[1123,1],[[],1],[1407,1],[[],1],[1408,1],[[],1],[1409,1],[[],1],[[],1],[[],1],[714,1],[1410,1],[[],1],[[],1],[1411,1],[[],1],[1119,1],[1412,1],[[],1],[[],1],[1413,1],[1414,1],[[],1],[[],1],[1181,1],[[],1],[1415,1],[1416,1],[[],1],[[],1],[1417,1],[[],1],[1418,1],[1419,1],[[],1],[1420,1],[[],1],[[],1],[1421,1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],26],[[],26],[[],26],[[],26],[1397,24],[712,24],[1398,24],[713,24],[1399,24],[1400,24],[1401,24],[1402,24],[1403,24],[1404,24],[1405,24],[1406,24],[1123,24],[1407,24],[1408,24],[1409,24],[714,24],[1410,24],[1411,24],[1119,24],[1412,24],[1413,24],[1414,24],[1181,24],[1415,24],[1416,24],[1417,24],[1418,24],[1419,24],[1420,24],[1421,24],[1397,24],[712,24],[1398,24],[713,24],[1399,24],[1400,24],[1401,24],[1402,24],[1403,24],[1404,24],[1405,24],[1406,24],[1123,24],[1407,24],[1408,24],[1409,24],[714,24],[1410,24],[1411,24],[1119,24],[1412,24],[1413,24],[1414,24],[1181,24],[1415,24],[1416,24],[1417,24],[1418,24],[1419,24],[1420,24],[1421,24],[1181,239],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1422,28]],0,[[1414,1417]],0,[1412,1412],[1397,1397],[712,712],[1398,1398],[713,713],[1399,1399],[1400,1400],[1401,1401],[1402,1402],[1403,1403],[1404,1404],[1405,1405],[1406,1406],[1123,1123],[1407,1407],[1408,1408],[1409,1409],[1423,1423],[714,714],[1410,1410],[1411,1411],[1119,1119],[1412,1412],[1413,1413],[1414,1414],[1181,1181],[1415,1415],[1416,1416],[1417,1417],[1418,1418],[1419,1419],[1420,1420],[1421,1421],[1424,1424],[1397,29],[712,30],[1398,30],[713,30],[1399,30],[1400,30],[1401,30],[1402,30],[1403,30],[1404,30],[1405,29],[1406,30],[1123,30],[1407,30],[1408,29],[1409,30],[714,30],[1410,29],[1411,190],[1119,30],[1412,30],[1413,30],[1414,29],[1181,30],[1415,29],[1416,30],[1417,29],[1418,29],[1419,29],[1420,29],[1421,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[[],[[7,[31,6]]]],[1397,[[7,[24,6]]]],[712,[[7,[24,6]]]],[1398,[[7,[24,6]]]],[713,[[7,[24,6]]]],[1399,[[7,[24,6]]]],[1400,[[7,[24,6]]]],[1401,[[7,[24,6]]]],[1402,[[7,[24,6]]]],[1403,[[7,[24,6]]]],[1404,[[7,[24,6]]]],[1405,[[7,[24,6]]]],[1406,[[7,[24,6]]]],[1123,[[7,[24,6]]]],[1407,[[7,[24,6]]]],[1408,[[7,[24,6]]]],[1409,[[7,[24,6]]]],[714,[[7,[24,6]]]],[1410,[[7,[24,6]]]],[1411,[[7,[24,6]]]],[1119,[[7,[24,6]]]],[1412,[[7,[24,6]]]],[1413,[[7,[24,6]]]],[1414,[[7,[24,6]]]],[1181,[[7,[24,6]]]],[1415,[[7,[24,6]]]],[1416,[[7,[24,6]]]],[1417,[[7,[24,6]]]],[1418,[[7,[24,6]]]],[1419,[[7,[24,6]]]],[1420,[[7,[24,6]]]],[1421,[[7,[24,6]]]],[[198,20,[17,[[418,[442]]]]]],[[198,[284,[1399]]]],0,[[714,714],109],[[1411,1411],109],[[32,33]],[[32,33]],[[32,33]],0,0,[1119,[[12,[454]]]],[[1397,40],[[10,[41]]]],[[712,40],[[10,[41]]]],[[1398,40],[[10,[41]]]],[[713,40],[[10,[41]]]],[[1399,40],[[10,[41]]]],[[1400,40],[[10,[41]]]],[[1401,40],[[10,[41]]]],[[1402,40],[[10,[41]]]],[[1403,40],[[10,[41]]]],[[1404,40],[[10,[41]]]],[[1405,40],[[10,[41]]]],[[1406,40],[[10,[41]]]],[[1123,40],[[10,[41]]]],[[1407,40],[[10,[41]]]],[[1408,40],[[10,[41]]]],[[1409,40],[[10,[41]]]],[[1412,40],[[10,[41]]]],[[1413,40],[[10,[41]]]],[[1414,40],[[10,[41]]]],[[1181,40],[[10,[41]]]],[[1415,40],[[10,[41]]]],[[1416,40],[[10,[41]]]],[[1417,40],[[10,[41]]]],[[1418,40],[[10,[41]]]],[[1419,40],[[10,[41]]]],[[1420,40],[[10,[41]]]],[[1421,40],[[10,[41]]]],0,[[],1422],[[],1397],[[],714],[[],1410],[[],1119],[[],1412],[[],1413],[[],1414],[[],1181],[[],1415],[[],1416],[[],1418],[[],1419],[[],1420],[[],1421],[[],[[10,[1397]]]],[[],[[10,[712]]]],[[],[[10,[1398]]]],[[],[[10,[713]]]],[[],[[10,[1399]]]],[[],[[10,[1400]]]],[[],[[10,[1401]]]],[[],[[10,[1402]]]],[[],[[10,[1403]]]],[[],[[10,[1404]]]],[[],[[10,[1405]]]],[[],[[10,[1406]]]],[[],[[10,[1123]]]],[[],[[10,[1407]]]],[[],[[10,[1408]]]],[[],[[10,[1409]]]],[[],[[10,[1410]]]],[[],[[10,[1411]]]],[[],[[10,[1119]]]],[[],[[10,[1412]]]],[[],[[10,[1413]]]],[[],[[10,[1414]]]],[[],[[10,[1181]]]],[[],[[10,[1415]]]],[[],[[10,[1416]]]],[[],[[10,[1417]]]],[[],[[10,[1418]]]],[[],[[10,[1419]]]],[[],[[10,[1420]]]],[[],[[10,[1421]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[26,36],[37],[37],[37],[37],[1411,170],0,[[1397,1397],36],[[712,712],36],[[1398,1398],36],[[713,713],36],[[1399,1399],36],[[1400,1400],36],[[1401,1401],36],[[1402,1402],36],[[1403,1403],36],[[1404,1404],36],[[1405,1405],36],[[1406,1406],36],[[1123,1123],36],[[1407,1407],36],[[1408,1408],36],[[1409,1409],36],[[714,714],36],[[1411,1411],36],[[1412,1412],36],[[1414,1414],36],[[1181,1181],36],[[1415,1415],36],[[1416,1416],36],[[1417,1417],36],[[1418,1418],36],[[1419,1419],36],[[1420,1420],36],[[1421,1421],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],[113,[[10,[114,115]]]],0,[[[95,[65]],[20,[1119]]]],[[[95,[65]],20]],[[1397,38],[[12,[24]]]],[[712,38],[[12,[24]]]],[[1398,38],[[12,[24]]]],[[713,38],[[12,[24]]]],[[1399,38],[[12,[24]]]],[[1400,38],[[12,[24]]]],[[1401,38],[[12,[24]]]],[[1402,38],[[12,[24]]]],[[1403,38],[[12,[24]]]],[[1404,38],[[12,[24]]]],[[1405,38],[[12,[24]]]],[[1406,38],[[12,[24]]]],[[1123,38],[[12,[24]]]],[[1407,38],[[12,[24]]]],[[1408,38],[[12,[24]]]],[[1409,38],[[12,[24]]]],[[714,38],[[12,[24]]]],[[1410,38],[[12,[24]]]],[[1411,39],[[12,[24]]]],[[1119,38],[[12,[24]]]],[[1412,38],[[12,[24]]]],[[1413,38],[[12,[24]]]],[[1414,38],[[12,[24]]]],[[1181,38],[[12,[24]]]],[[1415,38],[[12,[24]]]],[[1416,38],[[12,[24]]]],[[1417,38],[[12,[24]]]],[[1418,38],[[12,[24]]]],[[1419,38],[[12,[24]]]],[[1420,38],[[12,[24]]]],[[1421,38],[[12,[24]]]],[[1397,39],[[12,[24]]]],[[712,39],[[12,[24]]]],[[1398,39],[[12,[24]]]],[[713,39],[[12,[24]]]],[[1399,39],[[12,[24]]]],[[1400,39],[[12,[24]]]],[[1401,39],[[12,[24]]]],[[1402,39],[[12,[24]]]],[[1403,39],[[12,[24]]]],[[1404,39],[[12,[24]]]],[[1405,39],[[12,[24]]]],[[1406,39],[[12,[24]]]],[[1123,39],[[12,[24]]]],[[1407,39],[[12,[24]]]],[[1408,39],[[12,[24]]]],[[1409,39],[[12,[24]]]],[[714,39],[[12,[24]]]],[[1410,39],[[12,[24]]]],[[1119,39],[[12,[24]]]],[[1412,39],[[12,[24]]]],[[1413,39],[[12,[24]]]],[[1414,39],[[12,[24]]]],[[1181,39],[[12,[24]]]],[[1415,39],[[12,[24]]]],[[1416,39],[[12,[24]]]],[[1417,39],[[12,[24]]]],[[1418,39],[[12,[24]]]],[[1419,39],[[12,[24]]]],[[1420,39],[[12,[24]]]],[[1421,39],[[12,[24]]]],[[1397,39],[[12,[24]]]],[[712,39],[[12,[24]]]],[[1398,39],[[12,[24]]]],[[713,39],[[12,[24]]]],[[1399,39],[[12,[24]]]],[[1400,39],[[12,[24]]]],[[1401,39],[[12,[24]]]],[[1402,39],[[12,[24]]]],[[1403,39],[[12,[24]]]],[[1404,39],[[12,[24]]]],[[1405,39],[[12,[24]]]],[[1406,39],[[12,[24]]]],[[1123,39],[[12,[24]]]],[[1407,39],[[12,[24]]]],[[1408,39],[[12,[24]]]],[[1409,39],[[12,[24]]]],[[714,39],[[12,[24]]]],[[1410,39],[[12,[24]]]],[[1119,39],[[12,[24]]]],[[1412,39],[[12,[24]]]],[[1413,39],[[12,[24]]]],[[1414,39],[[12,[24]]]],[[1181,39],[[12,[24]]]],[[1415,39],[[12,[24]]]],[[1416,39],[[12,[24]]]],[[1417,39],[[12,[24]]]],[[1418,39],[[12,[24]]]],[[1419,39],[[12,[24]]]],[[1420,39],[[12,[24]]]],[[1421,39],[[12,[24]]]],[1397,39],[712,39],[1398,39],[713,39],[1399,39],[1400,39],[1401,39],[1402,39],[1403,39],[1404,39],[1405,39],[1406,39],[1123,39],[1407,39],[1408,39],[1409,39],[714,39],[1410,39],[1411,39],[1119,39],[1412,39],[1413,39],[1414,39],[1181,39],[1415,39],[1416,39],[1417,39],[1418,39],[1419,39],[1420,39],[1421,39],[[1397,38],[[12,[24]]]],[[712,38],[[12,[24]]]],[[1398,38],[[12,[24]]]],[[713,38],[[12,[24]]]],[[1399,38],[[12,[24]]]],[[1400,38],[[12,[24]]]],[[1401,38],[[12,[24]]]],[[1402,38],[[12,[24]]]],[[1403,38],[[12,[24]]]],[[1404,38],[[12,[24]]]],[[1405,38],[[12,[24]]]],[[1406,38],[[12,[24]]]],[[1123,38],[[12,[24]]]],[[1407,38],[[12,[24]]]],[[1408,38],[[12,[24]]]],[[1409,38],[[12,[24]]]],[[714,38],[[12,[24]]]],[[1410,38],[[12,[24]]]],[[1411,39],[[12,[24]]]],[[1119,38],[[12,[24]]]],[[1412,38],[[12,[24]]]],[[1413,38],[[12,[24]]]],[[1414,38],[[12,[24]]]],[[1181,38],[[12,[24]]]],[[1415,38],[[12,[24]]]],[[1416,38],[[12,[24]]]],[[1417,38],[[12,[24]]]],[[1418,38],[[12,[24]]]],[[1419,38],[[12,[24]]]],[[1420,38],[[12,[24]]]],[[1421,38],[[12,[24]]]],0,[[1397,40],[[10,[41]]]],[[712,40],[[10,[41]]]],[[1398,40],[[10,[41]]]],[[713,40],[[10,[41]]]],[[1399,40],[[10,[41]]]],[[1400,40],[[10,[41]]]],[[1401,40],[[10,[41]]]],[[1402,40],[[10,[41]]]],[[1403,40],[[10,[41]]]],[[1404,40],[[10,[41]]]],[[1405,40],[[10,[41]]]],[[1406,40],[[10,[41]]]],[[1123,40],[[10,[41]]]],[[1407,40],[[10,[41]]]],[[1408,40],[[10,[41]]]],[[1409,40],[[10,[41]]]],[[1423,40],[[10,[41]]]],[[714,40],[[10,[41]]]],[[1410,40],[[10,[41]]]],[[1411,40],[[10,[41]]]],[[1119,40],[[10,[41]]]],[[1412,40],[[10,[41]]]],[[1413,40],[[10,[41]]]],[[1414,40],[[10,[41]]]],[[1181,40],[[10,[41]]]],[[1415,40],[[10,[41]]]],[[1416,40],[[10,[41]]]],[[1417,40],[[10,[41]]]],[[1418,40],[[10,[41]]]],[[1419,40],[[10,[41]]]],[[1420,40],[[10,[41]]]],[[1421,40],[[10,[41]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[457,1181],[454,1181],[[],1181],[[]],[[],1181],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[12,[1397]]]],[24,[[12,[712]]]],[24,[[12,[1398]]]],[24,[[12,[713]]]],[24,[[12,[1399]]]],[24,[[12,[1400]]]],[24,[[12,[1401]]]],[24,[[12,[1402]]]],[24,[[12,[1403]]]],[24,[[12,[1404]]]],[24,[[12,[1405]]]],[24,[[12,[1406]]]],[24,[[12,[1123]]]],[24,[[12,[1407]]]],[24,[[12,[1408]]]],[24,[[12,[1409]]]],[24,[[12,[1410]]]],[24,[[12,[1411]]]],[24,[[12,[1119]]]],[24,[[12,[1412]]]],[24,[[12,[1413]]]],[24,[[12,[1414]]]],[24,[[12,[1181]]]],[24,[[12,[1415]]]],[24,[[12,[1416]]]],[24,[[12,[1417]]]],[24,[[12,[1418]]]],[24,[[12,[1419]]]],[24,[[12,[1420]]]],[24,[[12,[1421]]]],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[42],[[]],[[]],[[]],[1423,1425],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[39,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[38,12],[39,12],[38,12],[38,12],[38,12],[38,12],[38,12],[1423,1426],[[],43],[[],43],[[],43],[[],43],[1397,44],[712,44],[1398,44],[713,44],[1399,44],[1400,44],[1401,44],[1402,44],[1403,44],[1404,44],[1405,44],[1406,44],[1123,44],[1407,44],[1408,44],[1409,44],[714,44],[1410,44],[1411,44],[1119,44],[1412,44],[1413,44],[1414,44],[1181,44],[1415,44],[1416,44],[1417,44],[1418,44],[1419,44],[1420,44],[1421,44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[1423,1427],0,[1397],[1411],[1418],[1419],[1119,35],[1181,35],0,0,0,0,0,[[1397,38],[[12,[39]]]],[[1405,38],[[12,[39]]]],[[1408,38],[[12,[39]]]],[[1410,38],[[12,[39]]]],[[1414,38],[[12,[39]]]],[[1415,38],[[12,[39]]]],[[1417,38],[[12,[39]]]],[[1418,38],[[12,[39]]]],[[1419,38],[[12,[39]]]],[[1420,38],[[12,[39]]]],[[1421,38],[[12,[39]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1397,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[712,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1398,6]]],[[7,[1,6]]]],[[[7,[713,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1399,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1400,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1401,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1402,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1403,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1404,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1405,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1406,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1123,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1407,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1408,6]]],[[7,[1,6]]]],[[[7,[1409,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[714,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1410,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1411,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1119,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1412,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1413,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1414,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1181,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1415,6]]],[[7,[1,6]]]],[[[7,[1416,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1417,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1418,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1419,6]]],[[7,[1,6]]]],[[[7,[1420,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[1421,6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[7,[1397,6]]],[[7,[24,6]]]],[[[7,[712,6]]],[[7,[24,6]]]],[[[7,[1398,6]]],[[7,[24,6]]]],[[[7,[713,6]]],[[7,[24,6]]]],[[[7,[1399,6]]],[[7,[24,6]]]],[[[7,[1400,6]]],[[7,[24,6]]]],[[[7,[1401,6]]],[[7,[24,6]]]],[[[7,[1402,6]]],[[7,[24,6]]]],[[[7,[1403,6]]],[[7,[24,6]]]],[[[7,[1404,6]]],[[7,[24,6]]]],[[[7,[1405,6]]],[[7,[24,6]]]],[[[7,[1406,6]]],[[7,[24,6]]]],[[[7,[1123,6]]],[[7,[24,6]]]],[[[7,[1407,6]]],[[7,[24,6]]]],[[[7,[1408,6]]],[[7,[24,6]]]],[[[7,[1409,6]]],[[7,[24,6]]]],[[[7,[714,6]]],[[7,[24,6]]]],[[[7,[1410,6]]],[[7,[24,6]]]],[[[7,[1411,6]]],[[7,[24,6]]]],[[[7,[1119,6]]],[[7,[24,6]]]],[[[7,[1412,6]]],[[7,[24,6]]]],[[[7,[1413,6]]],[[7,[24,6]]]],[[[7,[1414,6]]],[[7,[24,6]]]],[[[7,[1181,6]]],[[7,[24,6]]]],[[[7,[1415,6]]],[[7,[24,6]]]],[[[7,[1416,6]]],[[7,[24,6]]]],[[[7,[1417,6]]],[[7,[24,6]]]],[[[7,[1418,6]]],[[7,[24,6]]]],[[[7,[1419,6]]],[[7,[24,6]]]],[[[7,[1420,6]]],[[7,[24,6]]]],[[[7,[1421,6]]],[[7,[24,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1397,46],[712,47],[1398,47],[713,47],[1399,47],[1400,47],[1401,47],[1402,47],[1403,47],[1404,47],[1405,46],[1406,47],[1123,47],[1407,47],[1408,46],[1409,47],[714,47],[1410,46],[1411,191],[1119,47],[1412,47],[1413,47],[1414,46],[1181,47],[1415,46],[1416,47],[1417,46],[1418,46],[1419,46],[1420,46],[1421,46],[[1410,276],[[10,[280]]]],0,0,0,0,0,[[1397,39],[[12,[38]]]],[[712,39],[[12,[38]]]],[[1398,39],[[12,[38]]]],[[713,39],[[12,[38]]]],[[1399,39],[[12,[38]]]],[[1400,39],[[12,[38]]]],[[1401,39],[[12,[38]]]],[[1402,39],[[12,[38]]]],[[1403,39],[[12,[38]]]],[[1404,39],[[12,[38]]]],[[1405,39],[[12,[38]]]],[[1406,39],[[12,[38]]]],[[1123,39],[[12,[38]]]],[[1407,39],[[12,[38]]]],[[1408,39],[[12,[38]]]],[[1409,39],[[12,[38]]]],[[714,39],[[12,[38]]]],[[1410,39],[[12,[38]]]],[[1119,39],[[12,[38]]]],[[1412,39],[[12,[38]]]],[[1413,39],[[12,[38]]]],[[1414,39],[[12,[38]]]],[[1181,39],[[12,[38]]]],[[1415,39],[[12,[38]]]],[[1416,39],[[12,[38]]]],[[1417,39],[[12,[38]]]],[[1418,39],[[12,[38]]]],[[1419,39],[[12,[38]]]],[[1420,39],[[12,[38]]]],[[1421,39],[[12,[38]]]],[474,1414],[[35,35],1181],[[1410,[12,[170]]],[[12,[1411]]]],[[714,714],[[12,[109]]]],[[1411,1411],[[12,[109]]]],[1119,[[12,[454]]]],[1119,153],[1181,153],[1119,153],[1181,153],0,0,0,0,0,0,0,[1426,1425],[1426,1427],[1397,[[12,[43]]]],[1405,[[12,[43]]]],[1408,[[12,[43]]]],[1410,[[12,[43]]]],[1414,[[12,[43]]]],[1415,[[12,[43]]]],[1417,[[12,[43]]]],[1418,[[12,[43]]]],[1419,[[12,[43]]]],[1420,[[12,[43]]]],[1421,[[12,[43]]]],[1397,50],[712,50],[1398,50],[713,50],[1399,50],[1400,50],[1401,50],[1402,50],[1403,50],[1404,50],[1405,50],[1406,50],[1123,50],[1407,50],[1408,50],[1409,50],[714,50],[1410,50],[1411,50],[1119,50],[1412,50],[1413,50],[1414,50],[1181,50],[1415,50],[1416,50],[1417,50],[1418,50],[1419,50],[1420,50],[1421,50],[[[7,[1397,6]]],51],[[[7,[712,6]]],51],[[[7,[1398,6]]],51],[[[7,[713,6]]],51],[[[7,[1399,6]]],51],[[[7,[1400,6]]],51],[[[7,[1401,6]]],51],[[[7,[1402,6]]],51],[[[7,[1403,6]]],51],[[[7,[1404,6]]],51],[[[7,[1405,6]]],51],[[[7,[1406,6]]],51],[[[7,[1123,6]]],51],[[[7,[1407,6]]],51],[[[7,[1408,6]]],51],[[[7,[1409,6]]],51],[[[7,[714,6]]],51],[[[7,[1410,6]]],51],[[[7,[1411,6]]],51],[[[7,[1119,6]]],51],[[[7,[1412,6]]],51],[[[7,[1413,6]]],51],[[[7,[1414,6]]],51],[[[7,[1181,6]]],51],[[[7,[1415,6]]],51],[[[7,[1416,6]]],51],[[[7,[1417,6]]],51],[[[7,[1418,6]]],51],[[[7,[1419,6]]],51],[[[7,[1420,6]]],51],[[[7,[1421,6]]],51],[[1397,24],[[12,[36]]]],[[712,24],[[12,[36]]]],[[1398,24],[[12,[36]]]],[[713,24],[[12,[36]]]],[[1399,24],[[12,[36]]]],[[1400,24],[[12,[36]]]],[[1401,24],[[12,[36]]]],[[1402,24],[[12,[36]]]],[[1403,24],[[12,[36]]]],[[1404,24],[[12,[36]]]],[[1405,24],[[12,[36]]]],[[1406,24],[[12,[36]]]],[[1123,24],[[12,[36]]]],[[1407,24],[[12,[36]]]],[[1408,24],[[12,[36]]]],[[1409,24],[[12,[36]]]],[[714,24],[[12,[36]]]],[[1410,24],[[12,[36]]]],[[1411,24],[[12,[36]]]],[[1119,24],[[12,[36]]]],[[1412,24],[[12,[36]]]],[[1413,24],[[12,[36]]]],[[1414,24],[[12,[36]]]],[[1181,24],[[12,[36]]]],[[1415,24],[[12,[36]]]],[[1416,24],[[12,[36]]]],[[1417,24],[[12,[36]]]],[[1418,24],[[12,[36]]]],[[1419,24],[[12,[36]]]],[[1420,24],[[12,[36]]]],[[1421,24],[[12,[36]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[38,[[10,[24,52]]]],[1397,53],[712,53],[1398,53],[713,53],[1399,53],[1400,53],[1401,53],[1402,53],[1403,53],[1404,53],[1405,53],[1406,53],[1123,53],[1407,53],[1408,53],[1409,53],[714,53],[1410,53],[1411,53],[1119,53],[1412,53],[1413,53],[1414,53],[1181,53],[1415,53],[1416,53],[1417,53],[1418,53],[1419,53],[1420,53],[1421,53],0,0,0,[1119,239],[1181,239],0,0,[1181,[[12,[239]]]],[1397,10],[712,10],[1398,10],[713,10],[1399,10],[1400,10],[1401,10],[1402,10],[1403,10],[1404,10],[1405,10],[1406,10],[1123,10],[1407,10],[1408,10],[1409,10],[1410,10],[1411,10],[1119,10],[1412,10],[1413,10],[1414,10],[1181,10],[1415,10],[1416,10],[1417,10],[1418,10],[1419,10],[1420,10],[1421,10],[[1397,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[712,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1398,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[713,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1399,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1400,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1401,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1402,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1403,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1404,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1405,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1406,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1123,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1407,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1408,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1409,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[714,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1410,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1411,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1119,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1412,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1413,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1414,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1414,474]],[[1181,35,35]],[[1181,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1415,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1416,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1417,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1418,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1419,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1420,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1421,[7,[24,6]]],[[10,[[7,[24,6]]]]]],[[1119,[12,[454]]]],[[1119,36]],[[1119,36]],[[1119,[12,[457]]]],[[1181,153,153]],[[1181,239]],[[1181,[12,[239]]]],[1416,[[12,[36]]]],[1416,[[12,[36]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[1397,38],[712,38],[1398,38],[713,38],[1399,38],[1400,38],[1401,38],[1402,38],[1403,38],[1404,38],[1405,38],[1406,38],[1123,38],[1407,38],[1408,38],[1409,38],[714,38],[1410,38],[1411,38],[1119,38],[1412,38],[1413,38],[1414,38],[1181,38],[1415,38],[1416,38],[1417,38],[1418,38],[1419,38],[1420,38],[1421,38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[1397,39],[1405,39],[1408,39],[1410,39],[1414,39],[1415,39],[1417,39],[1418,39],[1419,39],[1420,39],[1421,39],[1397,38],[1405,38],[1408,38],[1410,38],[1414,38],[1415,38],[1417,38],[1418,38],[1419,38],[1420,38],[1421,38],[1397,55],[1405,55],[1408,55],[1410,55],[1414,55],[1415,55],[1417,55],[1418,55],[1419,55],[1420,55],[1421,55],0,[1119,35],[1181,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1181,239],1181],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1428,28]],[[1429,1430,170,1119],1431],[[],1432],[[],1429],[[],1428],[[],1432],[[]],[[]],[[]],[[]],0,[[1432,40],[[10,[41]]]],[[1433,40],[[10,[41]]]],[[1429,40],[[10,[41]]]],0,[[]],[[]],[[]],[[]],[42],[42],[42],[[],1432],[1434,1435],[[1434,153,153],1435],[[1429,170],[[12,[1431]]]],[[1429,1436],[[12,[170]]]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[[1429,170],[[12,[1431]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],0,[[],12],[[],12],[[],12],[[],12],[[1432,36],1433],0,[28],0,[[1414,1181,127,[12,[1434]],[12,[1434]]],[[12,[[1437,[490]]]]]],0,0],"p":[[8,"Any"],[3,"RenderAssets"],[3,"DefaultPlugins"],[3,"PluginGroupBuilder"],[3,"MinimalPlugins"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"AnimationClip"],[3,"EntityPath"],[3,"VariableCurve"],[3,"Time"],[3,"Res"],[3,"Assets"],[3,"Children"],[3,"Query"],[3,"Name"],[3,"Transform"],[4,"Keyframes"],[8,"Reflect"],[3,"AnimationPlayer"],[8,"DynEq"],[3,"AnimationPlugin"],[3,"App"],[3,"DynamicEnum"],[3,"DynamicStruct"],[8,"TypeData"],[3,"Components"],[3,"Storages"],[3,"Vec"],[15,"f32"],[15,"bool"],[8,"Hasher"],[15,"str"],[15,"usize"],[3,"Formatter"],[3,"Error"],[3,"World"],[15,"u64"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"VariantFieldIter"],[3,"FieldIter"],[3,"Handle"],[3,"Duration"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectPathError"],[4,"ReflectRef"],[3,"Uuid"],[4,"VariantType"],[8,"ScheduleLabel"],[3,"Schedule"],[8,"IntoSystemConfig"],[8,"IntoSystemConfigs"],[8,"IntoSystemSet"],[3,"SystemSetConfig"],[3,"AppLabelId"],[3,"ScheduleRunnerPlugin"],[3,"AppTypeRegistry"],[3,"AppExit"],[4,"RunMode"],[3,"ScheduleRunnerSettings"],[4,"CoreSchedule"],[4,"CoreSet"],[4,"StartupSet"],[8,"IntoSystemSetConfig"],[8,"IntoSystemSetConfigs"],[8,"Plugin"],[8,"SystemSet"],[8,"FnMut"],[3,"SubApp"],[8,"AppLabel"],[3,"String"],[8,"Fn"],[8,"Send"],[3,"Local"],[8,"Condition"],[3,"ReflectAsset"],[3,"HandleUntyped"],[3,"LoadedAsset"],[3,"AssetPath"],[3,"AssetServer"],[4,"HandleId"],[3,"AssetPathId"],[3,"SourcePathId"],[3,"LabelId"],[3,"Error"],[8,"Error"],[4,"AssetEvent"],[3,"EventWriter"],[3,"ResMut"],[3,"LoadContext"],[8,"AssetIo"],[3,"ReflectHandle"],[3,"AssetPlugin"],[3,"Chain"],[3,"SourceMeta"],[3,"AssetMeta"],[3,"SourceInfo"],[4,"LoadState"],[4,"FileType"],[3,"Metadata"],[4,"AssetSet"],[4,"Ordering"],[8,"AssetDynamic"],[3,"AssetLifecycleChannel"],[8,"AssetLifecycle"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"AssetServerError"],[4,"AssetIoError"],[3,"AssetResult"],[15,"never"],[3,"Error"],[3,"PathBuf"],[3,"Path"],[8,"IntoIterator"],[3,"FileAssetIo"],[8,"FnOnce"],[3,"UnsafeWorldCell"],[8,"Iterator"],[8,"Future"],[3,"Pin"],[3,"Demand"],[3,"FileType"],[3,"Metadata"],[3,"DebugAssetServerPlugin"],[3,"DebugAssetAppRun"],[3,"HandleMap"],[3,"DebugAssetApp"],[3,"AssetCountDiagnosticsPlugin"],[3,"DiagnosticId"],[3,"Diagnostics"],[3,"Amplify"],[3,"AudioSource"],[3,"Buffered"],[3,"AudioPlugin"],[15,"u16"],[3,"PlaybackSettings"],[3,"SamplesConverter"],[3,"Audio"],[3,"AudioOutput"],[3,"AudioLoader"],[3,"Delay"],[3,"AudioSink"],[3,"FadeIn"],[15,"u32"],[3,"BltFilter"],[3,"Mix"],[3,"Pausable"],[3,"PeriodicAccess"],[3,"Repeat"],[3,"SkipDuration"],[3,"Speed"],[3,"Stoppable"],[3,"TakeDuration"],[15,"i16"],[3,"TypeRegistrationPlugin"],[3,"TaskPoolPlugin"],[3,"FrameCountPlugin"],[3,"TaskPoolThreadAssignmentPolicy"],[3,"TaskPoolOptions"],[3,"FrameCount"],[3,"Entity"],[3,"TableRow"],[3,"DebugNameItem"],[3,"DebugNameState"],[4,"Cow"],[8,"Into"],[3,"Archetype"],[3,"Table"],[3,"Access"],[3,"FilteredAccess"],[3,"CorePipelinePlugin"],[3,"BloomSettings"],[3,"BloomPlugin"],[3,"BloomNode"],[3,"SlotInfo"],[3,"RenderGraphContext"],[3,"RenderContext"],[4,"NodeRunError"],[4,"ClearColorConfig"],[3,"ClearColor"],[3,"DynamicTupleStruct"],[3,"TupleStructFieldIter"],[3,"Camera2d"],[3,"Transparent2d"],[3,"Core2dPlugin"],[3,"CachedRenderPipelineId"],[3,"Camera2dBundle"],[3,"DrawFunctionId"],[3,"Commands"],[3,"With"],[3,"Extract"],[3,"MainPass2dNode"],[3,"Camera3d"],[4,"Camera3dDepthLoadOp"],[3,"Core3dPlugin"],[3,"Opaque3d"],[3,"AlphaMask3d"],[3,"Transparent3d"],[3,"Camera3dBundle"],[3,"MainPass3dNode"],[3,"TextureCache"],[4,"Msaa"],[3,"RenderDevice"],[3,"VertexState"],[4,"Sensitivity"],[3,"Fxaa"],[3,"FxaaPlugin"],[3,"FxaaPipelineKey"],[3,"FxaaPipeline"],[3,"FxaaNode"],[3,"PipelineCache"],[3,"SpecializedRenderPipelines"],[3,"RenderPipelineDescriptor"],[3,"DepthPrepass"],[3,"NormalPrepass"],[3,"Opaque3dPrepass"],[3,"AlphaMask3dPrepass"],[3,"PrepassNode"],[4,"Tonemapping"],[3,"TonemappingPlugin"],[3,"TonemappingPipelineKey"],[3,"TonemappingPipeline"],[3,"TonemappingNode"],[3,"UpscalingPlugin"],[4,"UpscalingMode"],[3,"UpscalingPipelineKey"],[3,"UpscalingPipeline"],[3,"UpscalingNode"],[3,"Diagnostic"],[15,"f64"],[3,"LogDiagnosticsPlugin"],[3,"EntityCountDiagnosticsPlugin"],[3,"FrameTimeDiagnosticsPlugin"],[3,"SystemInformationDiagnosticsPlugin"],[3,"DiagnosticsPlugin"],[3,"Entities"],[3,"DiagnosticMeasurement"],[15,"u128"],[4,"DynamicPluginLoadError"],[3,"Archetypes"],[3,"ArchetypeRow"],[3,"ArchetypeId"],[3,"ArchetypeGeneration"],[3,"ArchetypeComponentId"],[3,"ComponentId"],[3,"Edges"],[3,"ArchetypeEntity"],[3,"BundleId"],[3,"SystemMeta"],[4,"StorageType"],[3,"TableId"],[3,"BundleInfo"],[3,"Bundles"],[3,"MutUntyped"],[3,"Aligned"],[3,"PtrMut"],[3,"Ptr"],[3,"Mut"],[3,"Tick"],[3,"TickCells"],[3,"ComponentTicks"],[3,"ComponentIdFor"],[3,"ComponentInfo"],[3,"ComponentDescriptor"],[3,"Layout"],[3,"EntityLocation"],[3,"EntityMap"],[3,"RandomState"],[3,"Global"],[4,"Entry"],[4,"MapEntitiesError"],[3,"RemovedComponentEntity"],[3,"ReserveEntitiesIterator"],[3,"Events"],[3,"EventReader"],[3,"ManualEventReader"],[3,"EventId"],[3,"ManualEventIterator"],[3,"ManualEventIteratorWithId"],[8,"ExactSizeIterator"],[3,"SystemConfig"],[3,"SystemConfigs"],[3,"SystemSetConfigs"],[3,"In"],[8,"ReadOnlySystem"],[3,"PipeSystem"],[3,"NonZeroUsize"],[15,"u8"],[3,"NonNull"],[3,"FilteredAccessSet"],[3,"QueryState"],[3,"BatchingStrategy"],[3,"QueryParIter"],[3,"ChangeTrackers"],[4,"QueryEntityError"],[3,"QueryManyIter"],[3,"QueryCombinationIter"],[4,"QuerySingleError"],[3,"ChangeTrackersFetch"],[3,"QueryIter"],[3,"ReflectComponent"],[3,"EntityMut"],[3,"ReflectResource"],[3,"ReflectComponentFns"],[3,"ReflectResourceFns"],[3,"ReflectMapEntities"],[3,"EntityRef"],[3,"UnsafeEntityCell"],[3,"RemovedComponentReader"],[3,"RemovedComponentEvents"],[3,"RemovedComponents"],[3,"Cloned"],[3,"IntoIter"],[3,"Flatten"],[3,"Map"],[3,"SystemTypeSet"],[3,"MainThreadExecutor"],[4,"LogLevel"],[3,"ScheduleBuildSettings"],[3,"OnEnter"],[3,"OnExit"],[3,"OnUpdate"],[3,"Schedules"],[3,"MultiThreadedExecutor"],[3,"SimpleExecutor"],[3,"SingleThreadedExecutor"],[4,"ExecutorKind"],[3,"State"],[3,"NextState"],[4,"ScheduleBuildError"],[3,"SparseSet"],[3,"Resources"],[3,"SparseSets"],[3,"Column"],[3,"ComponentSparseSet"],[3,"Tables"],[3,"ResourceData"],[3,"UnsafeCell"],[3,"Iter"],[3,"EntityCommands"],[3,"SystemState"],[3,"CommandQueue"],[3,"ExclusiveFunctionSystem"],[3,"FunctionSystem"],[3,"NonSendMut"],[3,"SystemName"],[3,"SystemChangeTick"],[3,"ParallelCommands"],[3,"Deferred"],[3,"NonSend"],[3,"StaticSystemParam"],[4,"QueryComponentError"],[8,"System"],[3,"Spawn"],[3,"Despawn"],[3,"Remove"],[8,"Bundle"],[3,"AncestorIter"],[3,"DescendantIter"],[3,"ParamSet"],[3,"WithEntity"],[3,"GetOrSpawn"],[3,"SpawnBatch"],[3,"InsertOrSpawnBatch"],[3,"Insert"],[3,"InitResource"],[3,"InsertResource"],[3,"RemoveResource"],[3,"LogComponents"],[3,"Ref"],[3,"WorldCell"],[3,"WorldId"],[3,"WorldBorrow"],[3,"WorldBorrowMut"],[3,"SpawnBatchIter"],[3,"RefFetch"],[3,"OwningPtr"],[3,"GilrsPlugin"],[3,"GltfExtras"],[3,"GltfPlugin"],[3,"GltfNode"],[3,"GltfMesh"],[3,"GltfPrimitive"],[3,"GltfLoader"],[4,"GltfError"],[3,"Gltf"],[4,"DecodeError"],[4,"GenerateTangentsError"],[4,"Error"],[4,"TextureError"],[3,"ChildBuilder"],[3,"Parent"],[3,"ValidParentCheckPlugin"],[3,"HierarchyPlugin"],[3,"HashSet"],[4,"HierarchyEvent"],[3,"ReportHierarchyIssue"],[3,"DespawnRecursive"],[3,"DespawnChildrenRecursive"],[3,"AddChild"],[3,"InsertChildren"],[3,"PushChildren"],[3,"WorldChildBuilder"],[8,"Sync"],[3,"RemoveChildren"],[3,"ClearChildren"],[3,"ReplaceChildren"],[3,"RemoveParent"],[3,"Input"],[4,"ButtonState"],[3,"InputPlugin"],[3,"InputSystem"],[3,"Axis"],[3,"Gamepad"],[3,"GamepadInfo"],[4,"GamepadButtonType"],[3,"GamepadButton"],[4,"GamepadAxisType"],[3,"GamepadAxis"],[3,"GamepadSettings"],[3,"ButtonSettings"],[3,"AxisSettings"],[3,"ButtonAxisSettings"],[4,"GamepadConnection"],[3,"GamepadConnectionEvent"],[3,"GamepadAxisChangedEvent"],[3,"GamepadButtonChangedEvent"],[4,"GamepadEvent"],[3,"Gamepads"],[4,"AxisSettingsError"],[4,"ButtonSettingsError"],[3,"KeyboardInput"],[4,"KeyCode"],[3,"ScanCode"],[3,"MouseButtonInput"],[4,"MouseButton"],[3,"MouseMotion"],[4,"MouseScrollUnit"],[3,"MouseWheel"],[3,"Touches"],[3,"TouchInput"],[4,"ForceTouch"],[4,"TouchPhase"],[3,"Touch"],[3,"Vec2"],[3,"LogPlugin"],[3,"Vec3A"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"Affine2"],[3,"Affine3A"],[3,"Mat3A"],[3,"DAffine2"],[3,"DAffine3"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DQuat"],[3,"BVec3A"],[3,"BVec4A"],[3,"Rect"],[4,"EulerRot"],[3,"Quat"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Mat2"],[3,"Mat3"],[3,"Mat4"],[3,"UVec2"],[3,"UVec3"],[3,"UVec4"],[3,"Vec3"],[3,"Vec4"],[3,"Ray"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[3,"__m128"],[15,"i32"],[3,"Reader"],[4,"Color"],[3,"Writer"],[15,"i8"],[3,"StandardMaterialFlags"],[3,"ShadowPipelineKey"],[3,"MeshPipelineKey"],[4,"AlphaMode"],[3,"StandardMaterial"],[3,"CubemapVisibleEntities"],[3,"CascadesVisibleEntities"],[3,"EnvironmentMapLight"],[3,"FogSettings"],[4,"FogFalloff"],[3,"PointLight"],[3,"PointLightShadowMap"],[3,"SpotLight"],[3,"DirectionalLight"],[3,"DirectionalLightShadowMap"],[3,"CascadeShadowConfig"],[3,"Cascades"],[3,"Cascade"],[3,"AmbientLight"],[3,"NotShadowCaster"],[3,"NotShadowReceiver"],[4,"ClusterFarZMode"],[3,"ClusterZConfig"],[4,"ClusterConfig"],[3,"BindGroupLayout"],[3,"FallbackImage"],[3,"PreparedBindGroup"],[4,"AsBindGroupError"],[3,"StandardMaterialUniform"],[4,"GpuPointLights"],[4,"BindingResource"],[3,"CascadeShadowConfigBuilder"],[3,"MaterialPlugin"],[3,"PrepassPlugin"],[3,"FogPlugin"],[3,"PbrPlugin"],[3,"MeshRenderPlugin"],[3,"SkinnedMesh"],[3,"BufferVec"],[3,"SkinnedMeshJoints"],[3,"Shadow"],[3,"NonZeroU64"],[3,"VisiblePointLights"],[3,"Without"],[3,"ViewClusterBindings"],[3,"MaterialPipelineKey"],[3,"MaterialMeshBundle"],[4,"SimulationLightSystems"],[3,"MaterialPipeline"],[3,"StandardMaterialKey"],[3,"GpuFog"],[4,"RenderFogSystems"],[4,"RenderLightSystems"],[3,"GpuPointLight"],[3,"GpuDirectionalCascade"],[3,"GpuDirectionalLight"],[3,"GpuLights"],[3,"ShadowPipeline"],[3,"MeshUniform"],[3,"MeshPipeline"],[3,"GlobalVisiblePointLights"],[3,"GpuPointLightsUniform"],[3,"GpuPointLightsStorage"],[3,"PrepareNextFrameMaterials"],[3,"PointLightBundle"],[3,"SpotLightBundle"],[3,"DirectionalLightBundle"],[3,"Clusters"],[3,"ExtractedMaterials"],[3,"RenderMaterials"],[3,"PrepassViewBindGroup"],[3,"FogMeta"],[3,"LightMeta"],[3,"SkinnedMeshUniform"],[3,"Camera"],[3,"SkinnedMeshInverseBindposes"],[3,"GlobalTransform"],[3,"ExtractedDirectionalLight"],[4,"ShaderRef"],[3,"Image"],[4,"PrimitiveTopology"],[3,"PrepassPipeline"],[3,"GlobalLightMeta"],[3,"VisibleEntities"],[3,"ShadowPassNode"],[8,"DoubleEndedIterator"],[4,"BufferBindingType"],[3,"RenderQueue"],[3,"RenderPhase"],[3,"ExtractedView"],[3,"DrawFunctions"],[3,"SpecializedMeshPipelines"],[3,"Mesh"],[3,"ComponentUniforms"],[3,"ViewUniforms"],[3,"FallbackImagesMsaa"],[3,"FallbackImagesDepth"],[3,"FallbackImageCubemap"],[3,"GlobalsBuffer"],[3,"ExtractedPointLight"],[3,"TrackedRenderPass"],[4,"RenderCommandResult"],[3,"ViewUniformOffset"],[3,"Hashed"],[4,"SpecializedMeshPipelineError"],[3,"Or"],[3,"Wireframe"],[3,"WireframeConfig"],[3,"WireframePlugin"],[3,"WireframePipeline"],[4,"Serializable"],[3,"Cube"],[3,"Box"],[3,"Quad"],[3,"Plane"],[3,"Capsule"],[4,"CapsuleUvProfile"],[3,"Icosphere"],[3,"RegularPolygon"],[3,"Circle"],[3,"Torus"],[3,"UVSphere"],[3,"Cylinder"],[15,"isize"],[3,"ThinSlicePtr"],[3,"Unaligned"],[3,"TypeRegistryInternal"],[3,"DynamicArray"],[3,"DynamicList"],[3,"DynamicMap"],[3,"DynamicTuple"],[8,"Array"],[3,"ReflectFromPtr"],[3,"ArrayInfo"],[3,"NamedField"],[3,"UnnamedField"],[3,"ReflectFromReflect"],[3,"ListInfo"],[3,"MapInfo"],[3,"ParsedPath"],[3,"StructInfo"],[3,"TupleInfo"],[3,"TupleStructInfo"],[3,"ValueInfo"],[3,"DynamicInfo"],[3,"TypeRegistryArc"],[3,"ReflectSerialize"],[3,"ReflectDeserialize"],[4,"DynamicVariant"],[3,"EnumInfo"],[4,"VariantInfo"],[3,"StructVariantInfo"],[3,"TupleVariantInfo"],[3,"UnitVariantInfo"],[8,"Enum"],[3,"ParseIntError"],[8,"Struct"],[8,"Tuple"],[8,"TupleStruct"],[3,"ArrayIter"],[3,"ListIter"],[3,"MapIter"],[3,"TupleFieldIter"],[8,"List"],[8,"Map"],[4,"VariantField"],[3,"RawRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"Deserializer"],[3,"Deserializer"],[3,"Serializer"],[8,"Visitor"],[3,"Out"],[15,"char"],[15,"i128"],[15,"i64"],[3,"Map"],[8,"Serialize"],[3,"Seq"],[3,"Struct"],[3,"StructVariant"],[3,"Tuple"],[3,"TupleStruct"],[3,"TupleVariant"],[3,"SerializationData"],[3,"UntypedReflectDeserializer"],[3,"TypeRegistrationDeserializer"],[3,"TypedReflectDeserializer"],[3,"ReflectSerializer"],[3,"TypedReflectSerializer"],[3,"ReflectValueSerializer"],[3,"StructSerializer"],[3,"TupleStructSerializer"],[3,"EnumSerializer"],[3,"TupleSerializer"],[3,"MapSerializer"],[3,"ListSerializer"],[3,"ArraySerializer"],[3,"ReflectDefault"],[3,"GenericTypeInfoCell"],[3,"NonGenericTypeInfoCell"],[3,"RenderApp"],[3,"RenderPlugin"],[4,"RenderSet"],[3,"ExtractSchedule"],[3,"MainWorld"],[3,"Viewport"],[3,"CameraRenderGraph"],[4,"RenderTarget"],[4,"NormalizedRenderTarget"],[4,"Projection"],[3,"PerspectiveProjection"],[4,"ScalingMode"],[3,"OrthographicProjection"],[3,"CameraProjectionPlugin"],[3,"CameraPlugin"],[3,"WindowResized"],[3,"WindowCreated"],[3,"PrimaryWindow"],[3,"RenderTargetInfo"],[3,"ComputedCameraValues"],[3,"CameraUpdateSystem"],[3,"ExtractedCamera"],[3,"ExtractedWindows"],[4,"TextureFormat"],[3,"TextureView"],[3,"CameraDriverNode"],[4,"HexColorError"],[3,"UniformComponentPlugin"],[3,"ExtractComponentPlugin"],[3,"DynamicUniformIndex"],[3,"DynamicUniformBuffer"],[3,"ExtractResourcePlugin"],[3,"GlobalsUniform"],[3,"GlobalsPlugin"],[4,"VertexAttributeValues"],[3,"MeshVertexAttribute"],[3,"VertexAttributeDescriptor"],[3,"MeshVertexAttributeId"],[3,"InnerMeshVertexBufferLayout"],[3,"MeshPlugin"],[4,"Indices"],[3,"GpuMesh"],[4,"GpuBufferInfo"],[3,"Aabb"],[3,"MissingVertexAttributeError"],[3,"VertexBufferLayout"],[3,"FixedState"],[4,"VertexFormat"],[4,"PrepareAssetError"],[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"],[3,"RenderExtractApp"],[3,"PipelinedRenderingPlugin"],[3,"SpatialBundle"],[3,"Frustum"],[3,"CubemapFrusta"],[3,"CascadesFrusta"],[3,"Sphere"],[3,"Plane"],[3,"RenderAssetPlugin"],[4,"PrepareAssetLabel"],[3,"ExtractedAssets"],[3,"PrepareNextFrameAssets"],[3,"RenderGraph"],[3,"NodeId"],[4,"NodeLabel"],[4,"SlotLabel"],[4,"Edge"],[4,"SlotValue"],[4,"SlotType"],[3,"SlotInfos"],[8,"Node"],[4,"RunSubGraphError"],[4,"OutputSlotError"],[4,"InputSlotError"],[4,"EdgeExistence"],[4,"RenderGraphError"],[3,"RunSubGraph"],[3,"NodeState"],[3,"Edges"],[3,"Sampler"],[3,"Buffer"],[8,"AsRef"],[3,"GraphInputNode"],[3,"RunGraphOnViewNode"],[3,"EmptyNode"],[3,"DrawFunctionsInternal"],[4,"BatchResult"],[3,"ViewRangefinder3d"],[3,"RenderCommandState"],[3,"Range"],[8,"Draw"],[3,"RenderPass"],[3,"BindGroup"],[3,"BufferSlice"],[4,"IndexFormat"],[3,"ShaderStages"],[3,"RenderPipeline"],[3,"StorageBuffer"],[3,"BufferUsages"],[3,"DynamicStorageBuffer"],[3,"UniformBuffer"],[3,"ColorWrites"],[3,"TextureUsages"],[3,"CommandEncoder"],[3,"ComputePassDescriptor"],[3,"ComputePass"],[3,"QuerySet"],[3,"RenderPassDescriptor"],[3,"Buffer"],[3,"Texture"],[3,"ImageSubresourceRange"],[3,"WgpuAdapterInfo"],[4,"TextureViewDimension"],[4,"BlendFactor"],[4,"BlendOperation"],[3,"BlendComponent"],[3,"BlendState"],[3,"ColorTargetState"],[4,"FrontFace"],[4,"Face"],[4,"PolygonMode"],[3,"PrimitiveState"],[3,"MultisampleState"],[3,"BufferInitDescriptor"],[4,"ShaderSource"],[3,"ShaderModuleDescriptor"],[3,"BufferBinding"],[4,"LoadOp"],[3,"Operations"],[3,"RenderPassColorAttachment"],[3,"RenderPassDepthStencilAttachment"],[3,"TextureViewDescriptor"],[3,"PipelineLayoutDescriptor"],[3,"SamplerDescriptor"],[3,"StencilState"],[3,"BindGroupEntry"],[3,"DepthBiasState"],[3,"BindGroupDescriptor"],[3,"DepthStencilState"],[3,"RawVertexBufferLayout"],[3,"RawVertexState"],[3,"RawFragmentState"],[3,"RawRenderPipelineDescriptor"],[4,"StencilOperation"],[3,"RawComputePipelineDescriptor"],[3,"BindGroupLayoutDescriptor"],[3,"StencilFaceState"],[4,"CompareFunction"],[4,"VertexStepMode"],[3,"VertexAttribute"],[4,"MapMode"],[4,"TextureDimension"],[3,"Origin3d"],[3,"Extent3d"],[4,"TextureAspect"],[4,"AddressMode"],[4,"FilterMode"],[3,"ImageDataLayout"],[4,"TextureSampleType"],[4,"StorageTextureAccess"],[4,"SamplerBindingType"],[4,"BindingType"],[3,"BindGroupLayoutEntry"],[3,"ImageCopyBufferBase"],[3,"ImageCopyTextureBase"],[3,"BindGroupId"],[3,"ErasedBindGroup"],[3,"BindGroupLayoutId"],[3,"ErasedBindGroupLayout"],[3,"BufferId"],[3,"ErasedBuffer"],[3,"RenderPipelineId"],[3,"ErasedRenderPipeline"],[3,"ComputePipelineId"],[3,"ErasedComputePipeline"],[3,"ComputePipeline"],[3,"FragmentState"],[3,"ComputePipelineDescriptor"],[3,"ErasedShaderModule"],[3,"ErasedPipelineLayout"],[3,"CachedComputePipelineId"],[4,"ShaderDefVal"],[3,"ShaderId"],[3,"Shader"],[4,"Source"],[4,"ShaderImport"],[3,"TextureId"],[3,"ErasedTexture"],[3,"Texture"],[3,"TextureViewId"],[3,"ErasedTextureView"],[3,"ErasedSurfaceTexture"],[4,"TextureViewValue"],[3,"SamplerId"],[3,"ErasedSampler"],[4,"ShaderStage"],[3,"ShaderImportProcessor"],[3,"ShaderProcessor"],[3,"SpecializedComputePipelines"],[3,"ShaderLoader"],[3,"ShaderImports"],[3,"TextureFormatInfo"],[3,"ShaderModule"],[3,"PipelineLayout"],[4,"ProcessedShader"],[4,"ProcessShaderError"],[3,"CommandBuffer"],[4,"PipelineDescriptor"],[4,"Pipeline"],[4,"CachedPipelineState"],[4,"PipelineCacheError"],[4,"ShaderReflectError"],[4,"AsModuleDescriptorError"],[3,"BindGroup"],[3,"BindGroupLayout"],[3,"RenderPipeline"],[3,"ComputePipeline"],[4,"ValidationError"],[3,"WithSpan"],[4,"Error"],[3,"ParseError"],[4,"Error"],[4,"Error"],[3,"SurfaceTexture"],[3,"TextureView"],[3,"Sampler"],[4,"OwnedBindingResource"],[3,"WgpuFeatures"],[3,"ShaderReflection"],[3,"TextureDescriptor"],[3,"HashMap"],[8,"RangeBounds"],[3,"Origin2d"],[4,"PredefinedColorSpace"],[3,"ImageCopyTextureTagged"],[3,"StorageBuffer"],[3,"UniformBuffer"],[3,"DynamicStorageBuffer"],[3,"DynamicUniformBuffer"],[3,"ArrayLength"],[4,"Error"],[3,"AlignmentValue"],[3,"EnlargeError"],[3,"SizeValue"],[3,"TryReserveError"],[3,"ErasedRenderDevice"],[3,"RenderAdapter"],[3,"RenderAdapterInfo"],[3,"Surface"],[3,"SurfaceConfiguration"],[3,"BufferDescriptor"],[3,"CommandEncoderDescriptor"],[3,"RenderBundleEncoderDescriptor"],[3,"RenderBundleEncoder"],[3,"RenderInstance"],[4,"RenderGraphRunnerError"],[3,"Device"],[3,"Instance"],[3,"WgpuSettings"],[3,"RequestAdapterOptions"],[3,"WgpuLimits"],[3,"BufferSlice"],[3,"SubmissionIndex"],[4,"Maintain"],[3,"Backends"],[4,"PowerPreference"],[4,"Dx12Compiler"],[4,"WgpuSettingsPriority"],[4,"Backend"],[3,"CompressedImageFormats"],[4,"ImageFormat"],[4,"ImageFormat"],[3,"ImagePlugin"],[3,"HdrTextureLoader"],[4,"ImageSampler"],[3,"DefaultImageSampler"],[4,"DataFormat"],[4,"TranscodeFormat"],[3,"GpuImage"],[3,"ImageTextureLoader"],[3,"CachedTexture"],[3,"Dds"],[3,"FallbackImageMsaaCache"],[3,"FallbackImageDepthCache"],[3,"FileTextureError"],[4,"ImageError"],[4,"ImageType"],[4,"DynamicImage"],[3,"BasicDataFormatDescriptor"],[3,"Format"],[3,"Reader"],[3,"RenderLayers"],[4,"Visibility"],[3,"ComputedVisibility"],[3,"VisibilityPlugin"],[3,"WindowRenderPlugin"],[3,"ViewPlugin"],[3,"Cell"],[3,"ThreadLocal"],[4,"VisibilitySystems"],[4,"WindowSystem"],[3,"ViewUniform"],[4,"ViewSet"],[3,"VisibilityBundle"],[3,"NonSendMarker"],[3,"WindowSurfaces"],[3,"ViewTarget"],[3,"Color"],[3,"PostProcessWrite"],[3,"DynamicSceneBuilder"],[3,"DynamicScene"],[3,"ScenePlugin"],[3,"InstanceId"],[3,"Scene"],[4,"SceneSpawnError"],[3,"SceneBundle"],[3,"DynamicSceneBundle"],[3,"SceneSpawner"],[3,"SceneInstance"],[3,"SceneLoader"],[3,"InstanceInfo"],[4,"Error"],[3,"SceneDeserializer"],[3,"SceneEntitiesDeserializer"],[3,"SceneEntityDeserializer"],[3,"ComponentDeserializer"],[3,"SceneSerializer"],[3,"EntitiesSerializer"],[3,"EntitySerializer"],[3,"ComponentsSerializer"],[3,"DynamicTextureAtlasBuilder"],[3,"TextureAtlas"],[3,"TextureAtlasBuilder"],[3,"ColorMaterialFlags"],[3,"Mesh2dPipelineKey"],[3,"SpritePipelineKey"],[3,"ColorMaterial"],[3,"Mesh2dHandle"],[3,"Sprite"],[4,"Anchor"],[3,"TextureAtlasSprite"],[3,"ColorMaterialUniform"],[3,"Material2dPlugin"],[3,"ColorMaterialPlugin"],[3,"Mesh2dRenderPlugin"],[3,"SpritePlugin"],[3,"Material2dKey"],[3,"SpriteBundle"],[3,"SpriteSheetBundle"],[3,"Material2dPipeline"],[3,"MaterialMesh2dBundle"],[3,"Mesh2dUniform"],[3,"Mesh2dPipeline"],[3,"ExtractedSprite"],[3,"SpriteBatch"],[4,"SpriteSystem"],[3,"PrepareNextFrameMaterials"],[3,"RenderMaterials2d"],[3,"ExtractedSprites"],[3,"SpriteAssetEvents"],[3,"SpriteMeta"],[3,"ImageBindGroups"],[4,"TextureAtlasBuilderError"],[3,"SpritePipeline"],[3,"FixedBitSet"],[4,"Collision"],[3,"TaskPool"],[3,"TaskPoolBuilder"],[3,"Task"],[3,"Chain"],[3,"Cloned"],[3,"Copied"],[3,"Cycle"],[3,"ThreadExecutor"],[3,"ComputeTaskPool"],[3,"AsyncComputeTaskPool"],[3,"IoTaskPool"],[3,"Scope"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"ThreadExecutorTicker"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Task"],[3,"Context"],[4,"Poll"],[3,"GlyphBrush"],[3,"Font"],[3,"FontArc"],[3,"FontId"],[3,"FontAtlas"],[3,"GlyphId"],[3,"SubpixelOffset"],[3,"FontAtlasSet"],[3,"OutlinedGlyph"],[3,"GlyphAtlasInfo"],[4,"TextError"],[3,"Text"],[3,"TextSection"],[4,"TextAlignment"],[3,"TextStyle"],[4,"BreakLineOn"],[3,"Text2dBounds"],[3,"TextPlugin"],[3,"PositionedGlyph"],[3,"TextLayoutInfo"],[3,"Text2dBundle"],[3,"SectionGlyph"],[3,"FontLoader"],[3,"TextPipeline"],[3,"TextSettings"],[3,"FontAtlasWarning"],[3,"Window"],[3,"Point"],[4,"YAxisOrientation"],[3,"InvalidFont"],[3,"WindowScaleFactorChanged"],[3,"Stopwatch"],[3,"Timer"],[4,"TimerMode"],[3,"TimePlugin"],[3,"TimeSystem"],[4,"TimeUpdateStrategy"],[3,"Instant"],[3,"FixedTime"],[4,"FixedUpdateError"],[3,"TransformPlugin"],[3,"TransformBundle"],[4,"TransformSystem"],[3,"AddChildInPlace"],[3,"RemoveParentInPlace"],[4,"Val"],[3,"UiRect"],[3,"Size"],[4,"Interaction"],[3,"RelativeCursorPosition"],[4,"FocusPolicy"],[3,"Node"],[3,"Style"],[4,"AlignItems"],[4,"AlignSelf"],[4,"AlignContent"],[4,"Direction"],[4,"Display"],[4,"FlexDirection"],[4,"JustifyContent"],[4,"Overflow"],[4,"PositionType"],[4,"FlexWrap"],[3,"CalculatedSize"],[3,"BackgroundColor"],[3,"UiImage"],[3,"CalculatedClip"],[4,"ZIndex"],[3,"UiPlugin"],[3,"TransparentUi"],[3,"UiPipelineKey"],[4,"RenderUiSystem"],[4,"ValArithmeticError"],[4,"UiSystem"],[3,"FlexSurface"],[3,"ExtractedUiNodes"],[3,"UiMeta"],[3,"UiImageBindGroups"],[3,"UiStack"],[3,"UiScale"],[4,"FlexError"],[3,"UiPipeline"],[3,"Layout"],[3,"NodeQueryState"],[3,"UiPassNode"],[3,"UiBatch"],[3,"State"],[3,"NodeQuery"],[3,"WindowResolution"],[3,"UiCameraConfig"],[3,"NodeBundle"],[3,"ImageBundle"],[3,"TextBundle"],[3,"ButtonBundle"],[3,"Button"],[3,"Braced"],[3,"Hyphenated"],[3,"Simple"],[3,"Urn"],[3,"AHasher"],[3,"PassHash"],[3,"FloatOrd"],[3,"PassHasher"],[3,"OnDrop"],[3,"Delay"],[3,"TimeSpec"],[3,"TimeSpec"],[3,"TimeSpec"],[3,"Error"],[3,"Timestamp"],[4,"Variant"],[4,"Version"],[3,"TryFromFloatSecsError"],[4,"TryReserveError"],[3,"Difference"],[3,"Drain"],[3,"Drain"],[3,"DrainFilter"],[3,"DrainFilter"],[4,"Entry"],[4,"EntryRef"],[3,"Intersection"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Keys"],[3,"RawEntryBuilder"],[3,"RawEntryBuilderMut"],[3,"RawTable"],[3,"SymmetricDifference"],[3,"OccupiedError"],[3,"Union"],[3,"Values"],[3,"ValuesMut"],[4,"RawEntryMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Bucket"],[3,"RawIter"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"RawIterHash"],[3,"Graph"],[3,"NodeIndex"],[3,"EdgeIndex"],[4,"EdgeDirection"],[4,"Directed"],[4,"Undirected"],[3,"EdgeIndices"],[3,"EdgeReferences"],[3,"EdgeWeights"],[3,"EdgeWeightsMut"],[3,"Edges"],[3,"EdgesConnecting"],[3,"Externals"],[3,"StableGraph"],[4,"CompactDirection"],[3,"Neighbors"],[3,"NodeIndices"],[3,"NodeWeights"],[3,"NodeWeightsMut"],[3,"List"],[3,"EdgeIndex"],[3,"OutgoingEdgeIndices"],[3,"Neighbors"],[3,"EdgeReference"],[3,"EdgeIndices"],[3,"NodeIndices"],[3,"EdgeReferences"],[3,"OutgoingEdgeReferences"],[3,"Paths"],[3,"NegativeCycle"],[3,"DfsSpace"],[3,"MinSpanningTree"],[3,"Cycle"],[3,"Matching"],[3,"TarjanScc"],[3,"RandomState"],[3,"HashMap"],[3,"MatchedEdges"],[3,"MatchedNodes"],[3,"Dominators"],[3,"DominatorsIter"],[3,"DominatedByIter"],[3,"Csr"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReference"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[4,"Element"],[3,"FilterElements"],[4,"Config"],[3,"Dot"],[3,"Frozen"],[3,"WalkNeighbors"],[3,"Node"],[3,"Edge"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"Ptr"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"EdgesDirected"],[3,"AllEdges"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"AllEdgesMut"],[3,"MatrixGraph"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"Edges"],[3,"NotZero"],[3,"GraphMap"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[3,"HashSet"],[3,"WalkNeighbors"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgesConnecting"],[3,"EdgeReferences"],[3,"Externals"],[3,"Neighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"UnionFind"],[3,"Reversed"],[3,"ReversedEdgeReference"],[4,"Control"],[3,"Time"],[4,"DfsEvent"],[3,"Topo"],[3,"WalkerIter"],[3,"NodeFiltered"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFiltered"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"EdgeFilteredNeighborsDirected"],[3,"ReversedEdges"],[3,"ReversedEdgeReferences"],[3,"SyncCell"],[3,"SyncUnsafeCell"],[3,"Metadata"],[3,"Level"],[4,"Level"],[3,"Identifier"],[3,"Id"],[3,"ValueSet"],[3,"Span"],[3,"Dispatch"],[3,"Current"],[8,"Subscriber"],[3,"WeakDispatch"],[3,"Entered"],[3,"EnteredSpan"],[3,"LevelFilter"],[3,"Event"],[3,"Field"],[3,"FieldSet"],[8,"Value"],[3,"SubscriberBuilder"],[3,"ParseLevelError"],[3,"Instrumented"],[3,"Kind"],[3,"Attributes"],[8,"Visit"],[3,"Record"],[3,"Interest"],[3,"DefaultCallsite"],[8,"Callsite"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"Empty"],[8,"Debug"],[3,"WithDispatch"],[3,"ParseLevelFilterError"],[3,"Context"],[3,"NoSubscriber"],[4,"CursorIcon"],[3,"RequestRedraw"],[3,"WindowCloseRequested"],[3,"WindowClosed"],[3,"CursorMoved"],[3,"CursorEntered"],[3,"CursorLeft"],[3,"ReceivedCharacter"],[4,"Ime"],[3,"WindowFocused"],[3,"WindowBackendScaleFactorChanged"],[4,"FileDragAndDrop"],[3,"WindowMoved"],[4,"WindowRef"],[3,"NormalizedWindowRef"],[3,"WindowResizeConstraints"],[3,"Cursor"],[4,"WindowPosition"],[4,"CursorGrabMode"],[3,"InternalWindowState"],[4,"MonitorSelection"],[4,"PresentMode"],[4,"CompositeAlphaMode"],[4,"WindowMode"],[4,"WindowLevel"],[3,"WindowPlugin"],[3,"RawHandleWrapper"],[4,"ExitCondition"],[4,"RawDisplayHandle"],[3,"ThreadLockedRawWindowHandleWrapper"],[4,"RawWindowHandle"],[3,"WinitPlugin"],[3,"WinitWindows"],[3,"EventLoopWindowTarget"],[3,"Window"],[3,"WinitSettings"],[4,"UpdateMode"],[3,"MonitorHandle"],[3,"VideoMode"],[3,"WindowId"],[3,"PhysicalPosition"],[8,"PluginGroup"],[13,"Loop"],[4,"AssetLifecycleEvent"],[8,"AddAsset"],[3,"AssetServerInternal"],[8,"AssetLoader"],[13,"Created"],[13,"Modified"],[13,"Removed"],[13,"MissingAssetLoader"],[8,"Decodable"],[8,"CpalSample"],[8,"AddAudioSource"],[8,"Sample"],[8,"Source"],[3,"NonSendMarker"],[3,"DebugName"],[8,"Zeroable"],[3,"CameraFxaaPipeline"],[3,"ViewPrepassTextures"],[3,"ViewTonemappingPipeline"],[13,"Enabled"],[3,"ViewUpscalingPipeline"],[8,"DynamicPluginExt"],[8,"DetectChangesMut"],[8,"DetectChanges"],[8,"ComponentStorage"],[8,"Component"],[3,"TableStorage"],[3,"SparseStorage"],[8,"MapEntities"],[8,"States"],[8,"IntoSystem"],[8,"FromWorld"],[8,"IntoPipeSystem"],[8,"SystemParamFunction"],[8,"UnsafeCellDeref"],[8,"WorldQuery"],[3,"AnyOf"],[3,"NopWorldQuery"],[3,"Added"],[3,"Changed"],[13,"SystemInMultipleBaseSets"],[13,"SetInMultipleBaseSets"],[8,"SparseSetIndex"],[8,"ExclusiveSystemParam"],[8,"SystemParam"],[8,"SystemBuffer"],[3,"IsExclusiveFunctionSystem"],[3,"AlreadyWasSystem"],[3,"IsFunctionSystem"],[8,"ExclusiveSystemParamFunction"],[8,"EntityCommand"],[8,"Command"],[13,"UnsupportedPrimitive"],[8,"BuildChildren"],[8,"BuildWorldChildren"],[8,"DespawnRecursiveExt"],[8,"HierarchyQueryExt"],[13,"ChildAdded"],[13,"ChildRemoved"],[13,"ChildMoved"],[13,"LiveZoneLowerBoundGreaterThanDeadZoneLowerBound"],[13,"DeadZoneUpperBoundGreaterThanLiveZoneUpperBound"],[13,"ReleaseThresholdGreaterThanPressThreshold"],[13,"Calibrated"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[4,"LightEntity"],[8,"Material"],[3,"MaterialProperties"],[3,"SetMaterialBindGroup"],[3,"PreparedMaterial"],[3,"SetPrepassViewBindGroup"],[3,"SetShadowViewBindGroup"],[3,"SetMeshViewBindGroup"],[3,"SetMeshBindGroup"],[3,"DrawMesh"],[3,"ViewFogUniformOffset"],[3,"ExtractedClusterConfig"],[3,"ExtractedClustersPointLights"],[3,"ShadowView"],[3,"ViewShadowBindings"],[3,"ViewLightEntities"],[3,"ViewLightsUniformOffset"],[3,"MeshBindGroup"],[3,"MeshViewBindGroup"],[13,"XYZ"],[13,"FixedZ"],[13,"Exponential"],[13,"ExponentialSquared"],[13,"Linear"],[13,"Atmospheric"],[13,"Directional"],[13,"Point"],[13,"Spot"],[8,"FromReflect"],[8,"GetField"],[8,"GetTupleStructField"],[8,"BuildChildrenTransformExt"],[13,"Rgba"],[13,"RgbaLinear"],[13,"Hsla"],[13,"Lcha"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"HoveredFileCancelled"],[13,"Preedit"],[13,"Commit"],[13,"Enabled"],[13,"Disabled"],[8,"TypeUuid"],[8,"FromType"],[8,"GetTupleField"],[8,"GetTypeRegistration"],[8,"GetPath"],[8,"Typed"],[8,"TypeUuidDynamic"],[13,"InvalidField"],[13,"InvalidStructVariantField"],[13,"InvalidFieldIndex"],[13,"ExpectedIdent"],[13,"InvalidTupleStructIndex"],[13,"InvalidTupleIndex"],[13,"InvalidTupleVariantIndex"],[13,"InvalidListIndex"],[13,"UnexpectedToken"],[13,"ExpectedToken"],[13,"ExpectedStruct"],[13,"ExpectedList"],[13,"ExpectedStructVariant"],[13,"ExpectedTupleVariant"],[8,"DeserializeValue"],[8,"CameraProjection"],[13,"Fixed"],[13,"AutoMax"],[13,"AutoMin"],[3,"HslRepresentation"],[3,"LchRepresentation"],[8,"SrgbColorSpace"],[8,"ExtractComponent"],[8,"ExtractResource"],[8,"VertexFormatSize"],[13,"Indexed"],[13,"NonIndexed"],[3,"MainToRenderAppSender"],[3,"RenderToMainAppReceiver"],[8,"RenderAsset"],[13,"SlotEdge"],[13,"NodeEdge"],[13,"MismatchedSlotType"],[13,"MismatchedSlotType"],[13,"MismatchedNodeSlots"],[13,"UnconnectedNodeInputSlot"],[13,"NodeInputSlotAlreadyOccupied"],[13,"UnconnectedNodeOutputSlot"],[13,"MismatchedInputSlotType"],[13,"MissingInput"],[8,"RenderCommand"],[8,"PhaseItem"],[8,"AddRenderCommand"],[8,"BatchedPhaseItem"],[3,"SetItemPipeline"],[8,"CachedRenderPipelinePhaseItem"],[8,"AsBindGroup"],[8,"SpecializedRenderPipeline"],[8,"SpecializedComputePipeline"],[8,"SpecializedMeshPipeline"],[8,"ShaderSize"],[3,"CachedPipeline"],[8,"AsBindGroupShaderType"],[8,"ShaderType"],[13,"StorageTexture"],[13,"Buffer"],[13,"Texture"],[13,"Storage"],[13,"InvalidShaderDefComparisonValue"],[13,"UnknownShaderDefOperator"],[13,"UnknownShaderDef"],[13,"Astc"],[13,"Float"],[13,"SurfaceTexture"],[8,"CalculateSizeFor"],[3,"WriteContext"],[3,"ReadContext"],[8,"BufferMut"],[8,"CreateFrom"],[8,"BufferRef"],[8,"ReadFrom"],[8,"WriteInto"],[13,"BufferTooSmall"],[8,"AsMutMatrixParts"],[8,"AsRefMatrixParts"],[8,"FromMatrixParts"],[8,"Length"],[8,"Truncate"],[8,"AsMutVectorParts"],[8,"AsRefVectorParts"],[8,"FromVectorParts"],[13,"MismatchedInputSlotType"],[13,"MissingInput"],[13,"MismatchedInputCount"],[13,"EmptyNodeOutputSlot"],[13,"Dxc"],[8,"BevyDefault"],[8,"TextureFormatPixelInfo"],[8,"Volume"],[3,"ExtractedWindow"],[3,"NoFrustumCulling"],[3,"ViewDepthTexture"],[3,"DynamicEntity"],[13,"NonExistentScene"],[13,"NonExistentRealScene"],[13,"UnregisteredComponent"],[13,"UnregisteredType"],[3,"SetMaterial2dBindGroup"],[3,"PreparedMaterial2d"],[3,"SetMesh2dViewBindGroup"],[3,"SetMesh2dBindGroup"],[3,"DrawMesh2d"],[3,"SetSpriteViewBindGroup"],[3,"SetSpriteTextureBindGroup"],[3,"DrawSpriteBatch"],[3,"Mesh2dBindGroup"],[3,"Mesh2dViewBindGroup"],[8,"Material2d"],[8,"ParallelIterator"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"TimeReceiver"],[3,"TimeSender"],[13,"NotEnoughTime"],[3,"SetUiViewBindGroup"],[3,"SetUiTextureBindGroup"],[3,"DrawUiNode"],[3,"ExtractedUiNode"],[3,"NodeQueryReadOnly"],[3,"NodeQueryItem"],[3,"NodeQueryReadOnlyItem"],[3,"DefaultCameraView"],[8,"PreHashMapExt"],[13,"AllocError"],[8,"DynHash"],[8,"IntoWeightedEdge"],[8,"EdgeType"],[8,"IndexType"],[8,"FloatMeasure"],[8,"BoundedMeasure"],[8,"Build"],[8,"DataMap"],[8,"DataMapMut"],[8,"ElementIterator"],[8,"FromElements"],[8,"Create"],[13,"Edge"],[13,"Node"],[8,"Zero"],[8,"EdgeRef"],[8,"GetAdjacencyMatrix"],[8,"GraphBase"],[8,"IntoEdgeReferences"],[8,"GraphProp"],[8,"Data"],[8,"IntoEdges"],[8,"IntoEdgesDirected"],[8,"Walker"],[8,"Visitable"],[8,"IntoNeighbors"],[8,"IntoNeighborsDirected"],[8,"NodeRef"],[8,"IntoNodeIdentifiers"],[8,"IntoNodeReferences"],[8,"ControlFlow"],[8,"EdgeIndexable"],[8,"EdgeCount"],[8,"NodeIndexable"],[8,"FilterEdge"],[8,"FilterNode"],[8,"VisitMap"],[8,"NodeCount"],[8,"Instrument"],[8,"AsField"],[8,"WithSubscriber"],[8,"AsId"],[13,"Reactive"],[13,"ReactiveLowPower"]],"a":{"cross":[13941,16610,17776],"determinant":[13941,16610,17776],"magnitude":[13766,13767,13768,13769,13770,16494,16495,16496,16497],"magnitude2":[13776,13777,13778,13779,13780,16502,16503,16504,16505],"mix":[13781,13782,13783,13784,13785,16506,16507,16508,16509],"pivot":[38813],"repeating":[41752],"scale":[13368,13369,13370,13371,16307,16308,16309],"specular_intensity":[22522,23202,24381],"transparent":[28485],"vsync":[50778],"wedge":[13941,16610,17776],"world_to_screen":[28449]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
